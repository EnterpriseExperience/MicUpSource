local GuiService = game:GetService("GuiService")
local NotificationHolder = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Module.Lua"))()
local Notification = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Client.Lua"))()
local ProcessStartName = tostring("8.54773254E-2")
local ScriptProcess = ProcessStartName
wait()
print("")
print("")
print("")
wait()
local NotificationHolder = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Module.Lua"))()
local Notification = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Client.Lua"))()
local TeleportService = cloneref(game:GetService("TeleportService")) or game:GetService("TeleportService")
local AllClipboards = setclipboard or toclipboard or set_clipboard or (Clipboard and Clipboard.set)
local httprequest = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request

function getRoot(char)
    local rootPart = char:FindFirstChild('HumanoidRootPart') or char:FindFirstChild('Torso') or char:FindFirstChild('UpperTorso')
    return rootPart
end

local player = game.Players.LocalPlayer

--[[local savedSpawnPos = nil
local spDelay = 0.1

local player = game.Players.LocalPlayer

local function onCharacterAdded(character)
    repeat wait() until getRoot(character)

    if savedSpawnPos then
        wait(spDelay)
        getRoot(character).CFrame = savedSpawnPos
        savedSpawnPos = nil
    end

    local humanoid = character:FindFirstChildOfClass('Humanoid')
    if humanoid then
        humanoid.Died:Connect(function()
            savedSpawnPos = nil
            wait()
            print("Humanoid.Died Function Called | true")
        end)
    end
end

player.CharacterAdded:Connect(onCharacterAdded)

function saveSpawnPosition()
    local character = player.Character
    if character then
        local rootPart = getRoot(character)
        if rootPart then
            savedSpawnPos = rootPart.CFrame
        end
    end
end

saveSpawnPosition()--]]

function getSupportedFunctions(funcSupported)
    if funcSupported then
        return funcSupported
    else
        warn(tostring(funcSupported).. ", is either not a supported function, or does not exist!")
    end
end

if getSupportedFunctions(cloneref) then
    local result = tostring(getSupportedFunctions(cloneref))
    if result then
        print(result..", Is Supported!")
    else
        warn("Not Supported! | "..result)
    end
else
    warn("Unsupported Function!")
end
wait()
if getSupportedFunctions(writefile) then
    local result = tostring(getSupportedFunctions(writefile))
    if result then
        print(result..", Is Supported!")
    else
        warn("Not Supported! | "..result)
    end
else
    warn("Unsupported Function!")
end
wait()
if getSupportedFunctions(readfile) then
    local result = tostring(getSupportedFunctions(readfile))
    if result then
        print(result..", Is Supported!")
    else
        warn("Not Supported! | "..result)
    end
else
    warn("Unsupported Function!")
end
wait()
if getSupportedFunctions(AllClipboards) then
    local result = tostring(getSupportedFunctions(AllClipboards))
    if result then
        print(result..", Is Supported!")
    else
        warn("Not Supported!")
    end
else
    warn("Unsupported Function!")
end
wait()
if getSupportedFunctions(httprequest) then
    local result = tostring(getSupportedFunctions(httprequest))
    if result then
        print(result..", Is Supported!")
    else
        warn("Not Supported!")
    end
else
    warn("Unsupported Function!")
end

if game.PlaceId == 6884319169 or game.PlaceId == 15546218972 then
    warn("OK !!!")
else
    local MICUPPlaceID = 6884319169 or 15546218972
    local TeleportService = cloneref(game:GetService("TeleportService")) or game:GetService("TeleportService")
    TeleportService:Teleport(MICUPPlaceID)
end
wait()
--[[getgenv().LocalScriptOff = false
if VEffect and FindLocalScript and getgenv().LocalScriptOff == false then
    getgenv().LocalScriptOff = false
    wait(.2)
    print("Found LocalScript Disabled Value (boolean) | "..tostring(FindLocalScript.Enabled))
    wait(.3)
    function getDisableScript()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local PlayerGui = LocalPlayer:FindFirstChild("PlayerGui") or LocalPlayer:WaitForChild("PlayerGui")
        local VEffect = PlayerGui:FindFirstChild("VEffect")
        local FindLocalScript = VEffect:FindFirstChild("Mute") or VEffect:WaitForChild("Mute")
        FindLocalScript.Disabled = true
    end
    wait()
    getgenv().LocalScriptOff = true
    wait()
    print("Set LocalScript Disabled: "..tostring(FindLocalScript.Disabled))
else
    warn("LocalScript 'Mute', Seems to be nil! | Skipping This Portion...")
    wait()
    getgenv().LocalScriptOff = false
end--]]

if SCRIPT_EXECUTED and not _G.SCRIPT_EXECUTED == true then
    return Notification:Notify(
        {Title = "Error: ", Description = "Already running! Reload Script instead!"},
        {OutlineColor = Color3.fromRGB(80, 80, 80), Time = 10, Type = "option"},
        {Image = "http://www.roblox.com/asset/?id=0", ImageColor = Color3.fromRGB(255, 84, 84), Callback = function()
            print("[OUTPUT]: Reloading Script...")
            wait(.3)
            local Players = cloneref(game:GetService("Players")) or game:GetService("Players") 
            local LocalPlayer = Players.LocalPlayer
            local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
            local Humanoid = Character:FindFirstChildWhichIsA("Humanoid") or Character:WaitForChild("Humanoid") or Character:FindFirstChild("Humanoid") or Character:FindFirstChildOfClass("Humanoid")
            getgenv().Invis_Loaded = false
            getgenv().SCRIPT_EXECUTED = false
            getgenv().GetLoopRunning = false
            getgenv().getLoopKick = false
            wait(0.1)
            getgenv().getLoopKick = false
            wait(0.2)
            getgenv().LmaoGetMuted = false
            wait()
            game:GetService("CoreGui"):FindFirstChild("Orion"):Destroy()
            wait(0.2)
            game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"):FindFirstChild("GetOrionGUI"):Destroy()
            wait(1)
            loadstring(game:HttpGet(('https://raw.githubusercontent.com/EnterpriseExperience/MicUpSource/refs/heads/main/v5-BETA')))()
        end}
    )
end
pcall(function() getgenv().SCRIPT_EXECUTED = true end)
wait(0.5)
local Workspace = cloneref(game:GetService("Workspace")) or game:GetService("Workspace")
local GameFolder = Workspace:FindFirstChild("Game")
local GetTeleportPart = GameFolder and GameFolder:FindFirstChild("Teleport")

if GetTeleportPart then
    GetTeleportPart.Parent = game:GetService("AssetService")
    wait()
    print(GetTeleportPart.Name .. " is now in Parent: " .. tostring(GetTeleportPart.Parent))
else
    warn("Part: Teleport = nil | false | null")
end

local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
local player = Players.LocalPlayer
local Character = player.Character or player.CharacterAdded:Wait()
local playerGui = player:FindFirstChild("PlayerGui") or player:WaitForChild("PlayerGui") or player:WaitForChild("PlayerGui", 1)
local HttpService = cloneref(game:GetService("HttpService")) or game:GetService("HttpService")
repeat wait() until player and Character and Character:FindFirstChild("HumanoidRootPart", true) and Character:FindFirstChildWhichIsA("Humanoid", true)

if getSupportedFunctions(AllClipboards) then
    AllClipboards("https://discord.gg/VJh3kkYzBn | https://www.youtube.com/@AnonymousExploiting")
else
    print("...")
end

local function loadGUI()
    repeat wait() until game:IsLoaded() and game.Players and game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    local currentTime = os.time()
    local formattedTime = os.date("%I:%M %p", currentTime)
    local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/EnterpriseExperience/MicUpSource/main/GetUILibrary')))()
    getgenv().gethui = function()
        return game:GetService("CoreGui")
    end
    local Window = OrionLib:MakeWindow({Name = "Zacks Easy Hub | V5-BETA-7.5 | Executed At: "..formattedTime, IntroText = "Hello, "..game.Players.LocalPlayer.Name, HidePremium = false, SaveConfig = true, ConfigFolder = "MICUP"})
    wait()
    getgenv().executedPlayers = getgenv().executedPlayers or {}
    
    local function trackPlayerExecution(player)
        if not getgenv().executedPlayers[player.Name] then
            getgenv().executedPlayers[player.Name] = true
            print(player.Name .. " has executed the script.")
        else
            print(tostring(player.Name).." has already executed the script!")
        end
    end
    
    trackPlayerExecution(game.Players.LocalPlayer)
    wait()
    local Tab1 = Window:MakeTab({
        Name = "> Home",
        Icon = "rbxassetid://7733960981",
        PremiumOnly = false
    })
    local Section1 = Tab1:AddSection({
        Name = "||| Home Section |||"
    })
    local Tab11 = Window:MakeTab({
        Name = "> Booths",
        Icon = "rbxassetid://7733914390",
        PremiumOnly = false
    })
    local Section11 = Tab11:AddSection({
        Name = "||| Booth Tools/Stand/Stall Tools |||"
    })
    local Tab17 = Window:MakeTab({
        Name = "> Warnings Tab",
        Icon = "rbxassetid://7733960981",
        PremiumOnly = false
    })
    local Section17 = Tab17:AddSection({
        Name = "||| Warnings Section |||"
    })
    local Tab2 = Window:MakeTab({
        Name = "> Character",
        Icon = "rbxassetid://7743871002",
        PremiumOnly = false
    })
    local Section2 = Tab2:AddSection({
        Name = "||| Character Tools |||"
    })
    local Tab13 = Window:MakeTab({
        Name = "> Character 2",
        Icon = "rbxassetid://7743871002",
        PremiumOnly = false
    })
    local Section13 = Tab13:AddSection({
        Name = "||| Other Character Utilities |||"
    })
    local Tab10 = Window:MakeTab({
        Name = "> Teleports",
        Icon = "rbxassetid://7733764327",
        PremiumOnly = false
    })
    local Section10 = Tab10:AddSection({
        Name = "||| Teleport Tools |||"
    })
    local Tab4 = Window:MakeTab({
        Name = "> Chat Tools",
        Icon = "rbxassetid://7734021300",
        PremiumOnly = false
    })
    local Section4 = Tab4:AddSection({
        Name = "||| Tools For Manipulating Chat |||"
    })
    local Tab5 = Window:MakeTab({
        Name = "> Extra Tools",
        Icon = "rbxassetid://7733954760",
        PremiumOnly = false
    })
    local Section5 = Tab5:AddSection({
        Name = "||| Extra Tools |||"
    })
    local Tab9 = Window:MakeTab({
        Name = "> Lighting",
        Icon = "rbxassetid://7734068495",
        PremiumOnly = false
    })
    local Section9 = Tab9:AddSection({
        Name = "||| Lighting Tools |||"
    })
    local Tab7 = Window:MakeTab({
        Name = "> Whitelist",
        Icon = "rbxassetid://7733771472",
        PremiumOnly = false
    })
    local Section8 = Tab7:AddSection({
        Name = "||| Whitelisting Area |||"
    })
    local Tab16 = Window:MakeTab({
        Name = "> Baseplate Tab",
        Icon = "rbxassetid://7734058260",
        PremiumOnly = false
    })
    local Section16 = Tab16:AddSection({
        Name = "||| Modify Baseplate [Not FE] |||"
    })
    local Tab12 = Window:MakeTab({
        Name = "> Emoting Tools",
        Icon = "rbxassetid://7743871002",
        PremiumOnly = false
    })
    local Section12 = Tab12:AddSection({
        Name = "||| Emoting Modifications |||"
    })
    local Tab14 = Window:MakeTab({
        Name = "> CopyAnim Tab",
        Icon = "rbxassetid://7743871002",
        PremiumOnly = false
    })
    local Section14 = Tab14:AddSection({
        Name = "||| Other Emote Utilities |||"
    })
    local Tab15 = Window:MakeTab({
        Name = "> UI Tab",
        Icon = "rbxassetid://7734022107",
        PremiumOnly = false
    })
    local Section15 = Tab15:AddSection({
        Name = "||| UI Tools |||"
    })
    local Tab6 = Window:MakeTab({
        Name = "> Info Tab",
        Icon = "rbxassetid://7734022107",
        PremiumOnly = false
    })
    local Section6 = Tab6:AddSection({
        Name = "||| Information |||"
    })
    wait(0.5)
    -- Modifying loading screen, will be back soon, don't edit this line.
    
    --[[if getgenv().GetStartIntro == true then
        print("Intro Data is already 'True'. Skipping intro...")
    else
        loadstring(game:HttpGet(('https://raw.githubusercontent.com/EnterpriseExperience/MicUpSource/refs/heads/main/startIntroFadeScreen')))()
        wait(0.5)
        getgenv().GetStartIntro = true
        wait(1)
        repeat wait() until getgenv().GetStartIntro == true
        if getgenv().GetStartIntro == true then
            print("Set Intro Data | Success | True")
        else
            warn("Unable to retrieve Intro Data | failed | False")
        end
    end--]]
    wait(0.5)
    local Workspace = cloneref(game:GetService("Workspace")) or game:GetService("Workspace")
    local FindBaseplate = Workspace:FindFirstChild("Baseplate") or Workspace:WaitForChild("Baseplate")

    if not Workspace:FindFirstChild("PartStorage") then
        local NewFolder = Instance.new("Folder")
        NewFolder.Name = "PartStorage"
        NewFolder.Parent = Workspace
    end

    local NewFolder = Workspace:FindFirstChild("PartStorage")
    local newChunk = Instance.new("Part")
    newChunk.Name = "BASEPLATE_CLONE_ANTI_VOID"
    newChunk.Size = Vector3.new(2048, 0, 2048)
    newChunk.BrickColor = BrickColor.new("Maroon")
    newChunk.Anchored = true
    newChunk.CanCollide = true
    newChunk.Parent = NewFolder
    
    --[[local function createBaseplateChunk(position)
        local NewFolder = Workspace:FindFirstChild("PartStorage")
        local newChunk = Instance.new("Part")
        newChunk.Name = "BASEPLATE_CLONE_ANTI_VOID"
        newChunk.Size = Vector3.new(CHUNK_SIZE, 16, CHUNK_SIZE)
        newChunk.Position = position
        newChunk.BrickColor = BrickColor.new("Maroon")
        newChunk.Color = Color3.new(117 / 255, 0, 0)
        newChunk.Anchored = true
        newChunk.CanCollide = true
        newChunk.Parent = NewFolder
    end
    
    local function chunkExistsAt(position)
        local NewFolder = Workspace:FindFirstChild("PartStorage")
        for _, part in pairs(NewFolder:GetChildren()) do
            if part.Position == position then
                return true
            end
        end
        return false
    end
    
    local function generateChunksAroundPlayer(playerPosition)
        local baseX = math.floor(playerPosition.X / CHUNK_SIZE) * CHUNK_SIZE
        local baseZ = math.floor(playerPosition.Z / CHUNK_SIZE) * CHUNK_SIZE
    
        for x = -RENDER_DISTANCE, RENDER_DISTANCE do
            for z = -RENDER_DISTANCE, RENDER_DISTANCE do
                local chunkPosition = Vector3.new(baseX + x * CHUNK_SIZE, FindBaseplate.Position.Y, baseZ + z * CHUNK_SIZE)
                if not chunkExistsAt(chunkPosition) then
                    createBaseplateChunk(chunkPosition)
                end
            end
        end
    end
    
    if FindBaseplate and not getgenv().HasCreatedFolder == true then
        getgenv().HasCreatedFolder = true
    else
        generateChunksAroundPlayer(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
    end
    
    game:GetService("RunService").Stepped:Connect(function()
        local player = game.Players.LocalPlayer
        if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local playerPosition = player.Character.HumanoidRootPart.Position
            if getgenv().HasCreatedFolder == true then
                print("")
            else
                generateChunksAroundPlayer(playerPosition)
            end
        end
    end)--]]
    wait(0.5)
    local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local HumanoidRootPart = Character:FindFirstChild("HumanoidRootPart") or Character.HumanoidRootPart
    local Workspace = cloneref(game:GetService("Workspace")) or game:GetService("Workspace")
    --[[local NewCF = Instance.new("Part")
    NewCF.Name = "CFRAME_STORAGE"
    NewCF.Anchored = true
    NewCF.Parent = Workspace
    NewCF.CanCollide = false
    NewCF.Transparency = 1
    wait(0.4)
    NewCF.CFrame = CFrame.new(36.6786537, 4.99999952, 21.6570473)--]]
    wait(.3)
    -- print("Set SpawnPosition: "..tostring(NewCF.CFrame))
    wait(0.5)
    if writefile and readfile then
        print("writefile function (unpacked data): "..tostring(writefile).." | readfile function (unpacked data): "..tostring(readfile))
        wait(0.1)
        print("Your executor DOES support writefile and readfile! AWESOME!")
    else
        warn("Your executor does not support writefile | readfile | false | SORRY! | There CAN/WILL be errors")
    end
    wait(0.5)
    if writefile and readfile and not (game.Players.LocalPlayer.Name == "M1RD3RCAUGHT" or game.Players.LocalPlayer.Name == "ItsYoDawgWsgGng" or game.Players.LocalPlayer.Name == "STK_kets4eki" or game.Players.LocalPlayer.Name == "Laylay_4kla") then
        local player = game.Players.LocalPlayer
        local playerGui = player:WaitForChild("PlayerGui")
    
        local screenGui = Instance.new("ScreenGui")
        screenGui.Parent = playerGui
        screenGui.ResetOnSpawn = false
    
        local mainFrame = Instance.new("Frame")
        mainFrame.Size = UDim2.new(1, 0, 1, 0)
        mainFrame.Position = UDim2.new(0, 0, 0, 0)
        mainFrame.BackgroundColor3 = Color3.new(0, 0, 0)
        mainFrame.BackgroundTransparency = 0.5
        mainFrame.Parent = screenGui
    
        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(0.5, 0, 0.2, 0)
        label.Position = UDim2.new(0.25, 0, 0.2, 0)
        label.BackgroundTransparency = 1
        label.Text = "Would you like an emote/rizz config?"
        label.TextColor3 = Color3.new(1, 1, 1)
        label.TextScaled = true
        label.Font = Enum.Font.SourceSansBold
        label.Parent = mainFrame
    
        local yesButton = Instance.new("TextButton")
        yesButton.Size = UDim2.new(0.2, 0, 0.1, 0)
        yesButton.Position = UDim2.new(0.2, 0, 0.5, 0)
        yesButton.Text = "Yes"
        yesButton.BackgroundColor3 = Color3.new(0, 1, 0)
        yesButton.TextColor3 = Color3.new(1, 1, 1)
        yesButton.TextScaled = true
        yesButton.Font = Enum.Font.SourceSansBold
        yesButton.Parent = mainFrame
    
        local noButton = Instance.new("TextButton")
        noButton.Size = UDim2.new(0.2, 0, 0.1, 0)
        noButton.Position = UDim2.new(0.6, 0, 0.5, 0)
        noButton.Text = "No"
        noButton.BackgroundColor3 = Color3.new(1, 0, 0)
        noButton.TextColor3 = Color3.new(1, 1, 1)
        noButton.TextScaled = true
        noButton.Font = Enum.Font.SourceSansBold
        noButton.Parent = mainFrame
    
        local userSelected = false
        local selection = nil
    
        yesButton.MouseButton1Click:Connect(function()
            selection = "Yes"
            userSelected = true
        end)
    
        noButton.MouseButton1Click:Connect(function()
            selection = "No"
            userSelected = true
        end)
    
        repeat
            task.wait()
        until userSelected
    
        screenGui:Destroy()
    
        if selection == "Yes" and not (game.Players.LocalPlayer.Name == "M1RD3RCAUGHT" or game.Players.LocalPlayer.Name == "ItsYoDawgWsgGng" or game.Players.LocalPlayer.Name == "STK_kets4eki" or game.Players.LocalPlayer.Name == "Laylay_4kla") then
writefile("IY_FE.iy", [[
{
    "currentShade2":[0.18039216101169587,0.18039216101169587,0.18431372940540315],
    "StayOpen":false,
    "logsEnabled":false,
    "aliases":[],
    "PluginsTable":[],
    "prefix":";",
    "binds":[
    {"ISKEYUP":false,"KEY":"Enum.KeyCode.One","COMMAND":"emote 13071993910"},
    {"ISKEYUP":false,"KEY":"Enum.KeyCode.Two","COMMAND":"emote 14901371589"},
    {"ISKEYUP":false,"KEY":"Enum.KeyCode.Five","COMMAND":"emote 5104377791"},
    {"ISKEYUP":false,"KEY":"Enum.KeyCode.Six","COMMAND":"emote 13694139364"},
    {"ISKEYUP":false,"KEY":"Enum.KeyCode.Seven","COMMAND":"emote 7466047578"},
    {"ISKEYUP":false,"KEY":"Enum.KeyCode.Eight","COMMAND":"emote 13823339506"},
    {"ISKEYUP":false,"KEY":"Enum.KeyCode.E","COMMAND":"animspeed 4"},
    {"ISKEYUP":false,"KEY":"Enum.KeyCode.Q","COMMAND":"animspeed 0.1"},
    {"ISKEYUP":false,"KEY":"Enum.KeyCode.Nine","COMMAND":"emote 3576823880"},
    {"KEY":"Enum.KeyCode.Four","ISKEYUP":false,"COMMAND":"emote 5230615437"},
    {"KEY":"Enum.KeyCode.V","ISKEYUP":false,"COMMAND":"freezeanims"},
    {"KEY":"Enum.KeyCode.R","ISKEYUP":false,"COMMAND":"emote 16371235025"},
    {"KEY":"Enum.KeyCode.T","ISKEYUP":false,"COMMAND":"emote 10214418283"},
    {"KEY":"Enum.KeyCode.Z","ISKEYUP":false,"COMMAND":"emote 3994130516"},
    {"KEY":"Enum.KeyCode.X","ISKEYUP":false,"COMMAND":"animspeed 1"},
    {"KEY":"Enum.KeyCode.Y","ISKEYUP":false,"COMMAND":"emote 10147924028"},
    {"KEY":"Enum.KeyCode.N","ISKEYUP":false,"COMMAND":"emote 3823158750"},
    {"KEY":"Enum.KeyCode.U","ISKEYUP":false,"COMMAND":"emote 14900153406"},
    {"KEY":"Enum.KeyCode.Zero","ISKEYUP":false,"COMMAND":"emote 15506503658"},
    {"KEY":"Enum.KeyCode.P","ISKEYUP":false,"COMMAND":"emote 10275057230"},
    {"KEY":"Enum.KeyCode.Three","ISKEYUP":false,"COMMAND":"emote 18666650035"},
    {"KEY":"Enum.KeyCode.F","ISKEYUP":false,"TOGGLE":"animspeed -1","COMMAND":"animspeed 1"}
    ],
    "currentShade3":[0.30588236451148989,0.30588236451148989,0.30980393290519717],
    "WayPoints":[],
    "jLogsEnabled":false,
    "currentScroll":[0.30588236451148989,0.30588236451148989,0.30980393290519717],
    "keepIY":true,
    "eventBinds":"{\"OnSpawn\":[],\"OnDied\":[],\"OnExecute\":[],\"OnKilled\":[],\"OnJoin\":[],\"OnLeave\":[],\"OnDamage\":[],\"OnChatted\":[]}",
    "espTransparency":0.3,
    "currentShade1":[0.1411764770746231,0.1411764770746231,0.14509804546833039],
    "currentText2":[0,0,0],
    "currentText1":[1,1,1]
}
]], true)
    wait(1)
    loadstring(game:HttpGet("https://raw.githubusercontent.com/EnterpriseExperience/crazyDawg/main/InfYieldOther.lua", true))()
    wait(0.5)
    local player = game.Players.LocalPlayer
    local playerGui = player:WaitForChild("PlayerGui")

    local screenGui = Instance.new("ScreenGui")
    screenGui.Parent = playerGui

    local mainFrame = Instance.new("Frame")
    mainFrame.Size = UDim2.new(1, 0, 1, 0)
    mainFrame.Position = UDim2.new(0, 0, 0, 0)
    mainFrame.BackgroundColor3 = Color3.new(0, 0, 0)
    mainFrame.BackgroundTransparency = 0.5
    mainFrame.Parent = screenGui

    local messageLabel = Instance.new("TextLabel")
    messageLabel.Size = UDim2.new(1, 0, 0.2, 0)
    messageLabel.Position = UDim2.new(0, 0, 0.4, 0)
    messageLabel.BackgroundTransparency = 1
    messageLabel.Text = "You are rejoining, do NOT! Press 'Yes' when you have rejoined."
    messageLabel.TextColor3 = Color3.new(1, 1, 1)
    messageLabel.TextScaled = true
    messageLabel.Font = Enum.Font.SourceSansBold
    messageLabel.Parent = mainFrame

    wait(5.5)
    local TeleportService = cloneref(game:GetService("TeleportService")) or game:GetService("TeleportService")
    local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
    PlaceId, JobId = game.PlaceId, game.JobId
    local LocalPlayer = Players.LocalPlayer
    queueteleport = (syn and syn.queue_on_teleport) or queue_on_teleport or (fluxus and fluxus.queue_on_teleport)
    local TeleportCheck = false
    game.Players.LocalPlayer.OnTeleport:Connect(function(State)
        if (not TeleportCheck) and queueteleport then
            TeleportCheck = true
            queueteleport("loadstring(game:HttpGet(('https://raw.githubusercontent.com/EnterpriseExperience/MicUpSource/refs/heads/main/v5-BETA')))()")
        end
    end)
    wait(1)
    TeleportService:TeleportToPlaceInstance(PlaceId, JobId, Players.LocalPlayer)
    wait(0.5)
    warn(tostring(game.Players.LocalPlayer.Name) .. ", selected 'Yes'")
    elseif selection == "No" then
        warn(tostring(game.Players.LocalPlayer.Name) .. ", selected 'No'")
    end
elseif writefile and readfile and (game.Players.LocalPlayer.Name == "M1RD3RCAUGHT" or game.Players.LocalPlayer.Name == "ItsYoDawgWsgGng" or game.Players.LocalPlayer.Name == "STK_kets4eki" or game.Players.LocalPlayer.Name == "Laylay_4kla") then
writefile("IY_FE.iy", [[
{
    "currentShade2":[0.18039216101169587,0.18039216101169587,0.18431372940540315],
    "StayOpen":false,
    "logsEnabled":false,
    "aliases":[],
    "PluginsTable":[],
    "prefix":"-",
    "binds":[
    {"ISKEYUP":false,"KEY":"Enum.KeyCode.One","COMMAND":"emote 13071993910"},
    {"ISKEYUP":false,"KEY":"Enum.KeyCode.Two","COMMAND":"emote 14901371589"},
    {"ISKEYUP":false,"KEY":"Enum.KeyCode.Five","COMMAND":"emote 5104377791"},
    {"ISKEYUP":false,"KEY":"Enum.KeyCode.Six","COMMAND":"emote 13694139364"},
    {"ISKEYUP":false,"KEY":"Enum.KeyCode.Seven","COMMAND":"emote 7466047578"},
    {"ISKEYUP":false,"KEY":"Enum.KeyCode.Eight","COMMAND":"emote 13823339506"},
    {"ISKEYUP":false,"KEY":"Enum.KeyCode.E","COMMAND":"animspeed 4"},
    {"ISKEYUP":false,"KEY":"Enum.KeyCode.Q","COMMAND":"animspeed 0.1"},
    {"ISKEYUP":false,"KEY":"Enum.KeyCode.Nine","COMMAND":"emote 3576823880"},
    {"KEY":"Enum.KeyCode.Four","ISKEYUP":false,"COMMAND":"emote 5230615437"},
    {"KEY":"Enum.KeyCode.V","ISKEYUP":false,"COMMAND":"freezeanims"},
    {"KEY":"Enum.KeyCode.R","ISKEYUP":false,"COMMAND":"emote 16371235025"},
    {"KEY":"Enum.KeyCode.T","ISKEYUP":false,"COMMAND":"emote 10214418283"},
    {"KEY":"Enum.KeyCode.Z","ISKEYUP":false,"COMMAND":"emote 3994130516"},
    {"KEY":"Enum.KeyCode.X","ISKEYUP":false,"COMMAND":"animspeed 1"},
    {"KEY":"Enum.KeyCode.Y","ISKEYUP":false,"COMMAND":"emote 10147924028"},
    {"KEY":"Enum.KeyCode.N","ISKEYUP":false,"COMMAND":"emote 3823158750"},
    {"KEY":"Enum.KeyCode.U","ISKEYUP":false,"COMMAND":"emote 14900153406"},
    {"KEY":"Enum.KeyCode.Zero","ISKEYUP":false,"COMMAND":"emote 15506503658"},
    {"KEY":"Enum.KeyCode.P","ISKEYUP":false,"COMMAND":"emote 10275057230"},
    {"KEY":"Enum.KeyCode.Three","ISKEYUP":false,"COMMAND":"emote 18666650035"},
    {"KEY":"Enum.KeyCode.F","ISKEYUP":false,"TOGGLE":"animspeed -1","COMMAND":"animspeed 1"}
    ],
    "currentShade3":[0.30588236451148989,0.30588236451148989,0.30980393290519717],
    "WayPoints":[],
    "jLogsEnabled":true,
    "currentScroll":[0.30588236451148989,0.30588236451148989,0.30980393290519717],
    "keepIY":true,
    "eventBinds":"{\"OnSpawn\":[],\"OnDied\":[],\"OnExecute\":[],\"OnKilled\":[],\"OnJoin\":[],\"OnLeave\":[],\"OnDamage\":[],\"OnChatted\":[]}",
    "espTransparency":0.3,
    "currentShade1":[0.1411764770746231,0.1411764770746231,0.14509804546833039],
    "currentText2":[0,0,0],
    "currentText1":[1,1,1]
}
]], true)
        wait(1)
        loadstring(game:HttpGet("https://raw.githubusercontent.com/EnterpriseExperience/crazyDawg/main/InfYieldOther.lua", true))()
        --[[wait(0.5)
            local player = game.Players.LocalPlayer
            local playerGui = player:WaitForChild("PlayerGui")

            local screenGui = Instance.new("ScreenGui")
            screenGui.Parent = playerGui

            local mainFrame = Instance.new("Frame")
            mainFrame.Size = UDim2.new(1, 0, 1, 0)
            mainFrame.Position = UDim2.new(0, 0, 0, 0)
            mainFrame.BackgroundColor3 = Color3.new(0, 0, 0)
            mainFrame.BackgroundTransparency = 0.5
            mainFrame.Parent = screenGui

            local messageLabel = Instance.new("TextLabel")
            messageLabel.Size = UDim2.new(1, 0, 0.2, 0)
            messageLabel.Position = UDim2.new(0, 0, 0.4, 0)
            messageLabel.BackgroundTransparency = 1
            messageLabel.Text = "You are rejoining, do NOT! Press 'Yes' when you have rejoined."
            messageLabel.TextColor3 = Color3.new(1, 1, 1)
            messageLabel.TextScaled = true
            messageLabel.Font = Enum.Font.SourceSansBold
            messageLabel.Parent = mainFrame

            wait(5.5)
            local TeleportService = cloneref(game:GetService("TeleportService")) or game:GetService("TeleportService")
            local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
            PlaceId, JobId = game.PlaceId, game.JobId
            local LocalPlayer = Players.LocalPlayer
            queueteleport = (syn and syn.queue_on_teleport) or queue_on_teleport or (fluxus and fluxus.queue_on_teleport)
            local TeleportCheck = false
            game.Players.LocalPlayer.OnTeleport:Connect(function(State)
                if (not TeleportCheck) and queueteleport then
                    TeleportCheck = true
                    queueteleport("loadstring(game:HttpGet(('https://raw.githubusercontent.com/EnterpriseExperience/MicUpSource/refs/heads/main/v5-BETA')))()")
                end
            end)--]]
            --wait(1)
            --TeleportService:TeleportToPlaceInstance(PlaceId, JobId, Players.LocalPlayer)
    elseif not writefile or readfile then
        warn("Your exploit does not support 'writefile' [You will not be able to use custom config for Infinite Yield, sorry!]")    
    end    
    wait(0.5)
    local TeleportService = cloneref(game:GetService("TeleportService")) or game:GetService("TeleportService")
    local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
    PlaceId, JobId = game.PlaceId, game.JobId
    local LocalPlayer = Players.LocalPlayer
    queueteleport = (syn and syn.queue_on_teleport) or queue_on_teleport or (fluxus and fluxus.queue_on_teleport)
    wait(0.3)
    local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local StartedScriptCFrame = Character:WaitForChild("HumanoidRootPart", 0.5).CFrame
    wait(0.1)
    if getgenv().AntiAfkScript == true or getgenv().OtherAntiAfk == true then
        print("AntiAFK Scripts have already been pre-loaded from last session | exiting...")
        wait(0.2)
        warn("000 >>> 000 >>> nil")
    end
    wait(0.2)
    Players.RespawnTime = 0
    wait()
    getgenv().OtherAntiAfk = false
    getgenv().AntiAfkScript = false
    wait(0.5)
    local GC = getconnections or get_signal_cons
    if GC and getgenv().OtherAntiAfk == false and getgenv().AntiAfkScript == false then
        for i,v in pairs(GC(game:GetService("Players").LocalPlayer.Idled)) do
            OrionLib:MakeNotification({
                Name = "Idled!",
                Content = "Stopping connection...",
                Image = "rbxassetid://4483345998",
                Time = 10
            })
            wait()
            if v["Disable"] then
                v["Disable"](v)
                wait()
                OrionLib:MakeNotification({
                    Name = "Success!",
                    Content = "Disabled Connection: "..tostring(v),
                    Image = "rbxassetid://4483345998",
                    Time = 10
                })
            elseif v["Disconnect"] then
                v["Disconnect"](v)
                wait()
                OrionLib:MakeNotification({
                    Name = "Success!",
                    Content = "Disconnected Connection: "..tostring(v),
                    Image = "rbxassetid://4483345998",
                    Time = 10
                })
            end
        end
        wait(0.3)
        getgenv().AntiAfkScript = true
        wait()
        if GC and getgenv().AntiAfkScript then
            OrionLib:MakeNotification({
                Name = "Success!",
                Content = "We have enabled Anti-AFK",
                Image = "rbxassetid://4483345998",
                Time = 10
            })
        else
            getgenv().AntiAfkScript = false
            wait(0.2)
            OrionLib:MakeNotification({
                Name = "Failed!",
                Content = "This method will not work for you.",
                Image = "rbxassetid://4483345998",
                Time = 10
            })
        end
        wait()
        if not GC and getgenv().AntiAfkScript == false then
            OrionLib:MakeNotification({
                Name = "Starting...",
                Content = "AntiAFK (2) is loading...",
                Image = "rbxassetid://4483345998",
                Time = 10
            })
            wait()
            local VirtualUser = cloneref(game:GetService("VirtualUser")) or game:GetService("VirtualUser") or game.VirtualUser
            game:GetService("Players").LocalPlayer.Idled:Connect(function()
                OrionLib:MakeNotification({
                    Name = "Idled!",
                    Content = "Clicking button...",
                    Image = "rbxassetid://4483345998",
                    Time = 10
                })
                VirtualUser:CaptureController()
                VirtualUser:ClickButton2(Vector2.new())
                wait(0.1)
                OrionLib:MakeNotification({
                    Name = "Success!",
                    Content = "Clicked Button (Anti-Idle)",
                    Image = "rbxassetid://4483345998",
                    Time = 10
                })
            end)
        end
        wait(0.3)
        getgenv().OtherAntiAfk = true
        wait()
        if getgenv().AntiAfkScript == true and getgenv().OtherAntiAfk == false then
            OrionLib:MakeNotification({
                Name = "Sucess!",
                Content = "AntiAFK (1) has loaded!",
                Image = "rbxassetid://4483345998",
                Time = 10
            })
        elseif getgenv().OtherAntiAfk == true and getgenv().AntiAfkScript == false then
            OrionLib:MakeNotification({
                Name = "Success!",
                Content = "AntiAFK (2) has loaded.",
                Image = "rbxassetid://4483345998",
                Time = 10
            })
        elseif getgenv().AntiAfkScript == false and getgenv().OtherAntiAfk == false then
            OrionLib:MakeNotification({
                Name = "Failed!",
                Content = "Could not load any Anti-AFK Scripts.",
                Image = "rbxassetid://4483345998",
                Time = 10
            })
        end
    elseif getgenv().AntiAfkScript == true or getgenv().OtherAntiAfk == true then
        OrionLib:MakeNotification({
            Name = "Cleaned-Up",
            Content = "You have already loaded anti-afk, Continue...",
            Image = "rbxassetid://4483345998",
            Time = 10
        })
    end
    wait()
    --[[function getGUIEnabled()
        getgenv().getCheckedGUIs = false
        wait()
        if game:GetService("StarterGui"):FindFirstChild("Action") and game:GetService("StarterGui"):FindFirstChild("VEffect") and game:GetService("StarterGui"):FindFirstChild("Menu") then
            local ActionGUI = game:GetService("StarterGui"):FindFirstChild("Action")
            local VEffectGUI = game:GetService("StarterGui"):FindFirstChild("VEffect")
            local MenuGUI = game:GetService("StarterGui"):FindFirstChild("Menu")
            local getClone = ActionGUI:Clone()
            getClone.Parent = game.Players.LocalPlayer.PlayerGui
            local getSecondClone = VEffectGUI:Clone()
            getSecondClone.Parent = game.Players.LocalPlayer.PlayerGui
            local getThirdClone = MenuGUI:Clone()
            getThirdClone.Parent = game.Players.LocalPlayer.PlayerGui
            wait()
            getgenv().getCheckedGUIs = true
        else
            warn("Could not locate GUIs")
        end
    
        if getgenv().getCheckedGUIs == true then
            return print("Checked OK !")
        end
    end--]]
    wait()
    function resetLightingSettings()
        local Lighting = cloneref(game:GetService("Lighting")) or game:GetService("Lighting")
        local SunRays = Lighting:FindFirstChildOfClass("SunRaysEffect")
        
        Lighting.ClockTime = 14.5
        wait()
        Lighting.Brightness = 3
        wait()
        Lighting.Atmosphere.Density = 0.3
        wait()
        Lighting.Atmosphere.Offset = 0.25
        wait()
        Lighting.Atmosphere.Color = Color3.new(199, 199, 199)
        wait()
        Lighting.Atmosphere.Decay = Color3.new(106, 112, 125)
        wait()
        Lighting.Atmosphere.Glare = 0
        wait()
        Lighting.Atmosphere.Haze = 0
        wait()
        Lighting.Sky.MoonAngularSize = 11
        wait()
        Lighting.Sky.StarCount = 3000
        wait()
        Lighting.Sky.SunAngularSize = 11
        wait()
        Lighting.Bloom.Intensity = 1
        wait()
        Lighting.Bloom.Enabled = true
        wait()
        Lighting.Bloom.Size = 24
        wait()
        Lighting.Bloom.Threshold = 2
        wait()
        Lighting.DepthOfField.Enabled = false
        wait()
        Lighting.DepthOfField.FarIntensity = 0.1
        wait()
        Lighting.DepthOfField.FocusDistance = 0.05
        wait()
        Lighting.DepthOfField.InFocusRadius = 30
        wait()
        Lighting.DepthOfField.NearIntensity = 0.75
        wait()
        Lighting.SunRays.Enabled = true
        wait()
        Lighting.SunRays.Intensity = 0.01
        wait()
        Lighting.SunRays.Spread = 0.1
    end
    wait()
    local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
    local ReplicatedStorage = cloneref(game:GetService("ReplicatedStorage")) or game:GetService("ReplicatedStorage")
    
    OrionLib:MakeNotification({
        Name = "Modifying Scripts...",
        Content = "We are modifying game scripts, hold on...",
        Image = "rbxassetid://4483345998",
        Time = 10
    })
    wait(0.5)
    for _, descendant in pairs(workspace:GetDescendants()) do
        if descendant:IsA("Script") and descendant.Name == "Kill" then
            local parent = descendant.Parent
            local touchInterest = parent:FindFirstChild("TouchInterest")
            if touchInterest then
                touchInterest:Destroy()
            end
            descendant:Destroy()
        end
    end
    wait(0.5)
    OrionLib:MakeNotification({
        Name = "Hold On.",
        Content = "We are modifying Lighting...",
        Image = "rbxassetid://4483345998",
        Time = 10
    })
    wait()
    getgenv().GetDataResetLighting = false
    wait(.4)
    warn("RESET_LIGHTING_DATA | False")
    wait()
    local lighting = game:GetService("Lighting")
    
    lighting.ClockTime = 0
    wait(0.2)
    lighting.ClockTime = 3
    wait(0.2)
    lighting.ClockTime = 9
    wait(0.2)
    lighting.Brightness = 3
    wait(0.2)
    lighting.Brightness = 0
    wait(0.2)
    lighting.ClockTime = 8
    wait(.2)
    if lighting.ClockTime == 8 then
        OrionLib:MakeNotification({
            Name = "Success!",
            Content = "We have configured Lighting (for the script)",
            Image = "rbxassetid://4483345998",
            Time = 7
        })
        wait(0.2)
        getgenv().GetDataResetLighting = true
    else
        OrionLib:MakeNotification({
            Name = "Failed!",
            Content = "An error has occurred, we're sorry.",
            Image = "rbxassetid://4483345998",
            Time = 7
        })
    end
    if getgenv().GetDataResetLighting == true then
        print("We have already reset lighting, skipping...")
        wait(0.2)
        warn("getNumberOver(tonumber, GET_ID, PID) /// nil >= ???")
    end
    wait()
    warn("LIGHTING FINISHED.")
    wait()
    local Players = game:GetService("Players")
    local player = Players.LocalPlayer
    
    getgenv().whitelist = {}
    
    getgenv().ownerWhitelist = {
        "M1RD3RCAUGHT",
        "STK_kets4eki",
        "ItsYoDawgWsgGng",
        "Laylay_4kla"
    }
    wait()
    print("Whitelisting Finished.")
    wait()
    function ClaimStall1()
    local Folder = workspace:WaitForChild("Stalls")
    ---
    local Stall1 = Folder:FindFirstChild("Stall1")
    local Stall2 = Folder:FindFirstChild("Stall2")
    local Stall3 = Folder:FindFirstChild("Stall3")
    local Stall4 = Folder:FindFirstChild("Stall4")
    local Stall5 = Folder:FindFirstChild("Stall5")
        if Stall1:FindFirstChild("ProxPart") and fireproximityprompt and Stall1.Player.Value ~= whitelist[game.Players[Stall3:FindFirstChild("Player").Value].UserId] then
            local Proximity1 = Stall1:FindFirstChild("ProxPart").ProximityPrompt
            game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(Stall1:FindFirstChild("ProxPart").Position)
            wait(0.3)
            fireproximityprompt(Proximity1, 10)
            wait(0.5)
            Stall1:WaitForChild("CloseStall"):FireServer()
        end
    end
    
    function ClaimStall2()
    local Folder = workspace:WaitForChild("Stalls")
    ---
    local Stall1 = Folder:FindFirstChild("Stall1")
    local Stall2 = Folder:FindFirstChild("Stall2")
    local Stall3 = Folder:FindFirstChild("Stall3")
    local Stall4 = Folder:FindFirstChild("Stall4")
    local Stall5 = Folder:FindFirstChild("Stall5")
        if Stall2:FindFirstChild("ProxPart") and fireproximityprompt and Stall2.Player.Value ~= whitelist[game.Players[Stall2:FindFirstChild("Player").Value].UserId] then
            local Proximity2 = Stall2:FindFirstChild("ProxPart").ProximityPrompt
            game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(Stall2:FindFirstChild("ProxPart").Position)
            wait(0.3)
            fireproximityprompt(Proximity2, 10)
            wait(0.5)
            Stall2:WaitForChild("CloseStall"):FireServer()
        end
    end
    
    function ClaimStall3()
    local Folder = workspace:WaitForChild("Stalls")
    ---
    local Stall1 = Folder:FindFirstChild("Stall1")
    local Stall2 = Folder:FindFirstChild("Stall2")
    local Stall3 = Folder:FindFirstChild("Stall3")
    local Stall4 = Folder:FindFirstChild("Stall4")
    local Stall5 = Folder:FindFirstChild("Stall5")
        if Stall3:FindFirstChild("ProxPart") and fireproximityprompt and Stall3.Player.Value ~= whitelist[game.Players[Stall3:FindFirstChild("Player").Value].UserId] then
            local Proximity3 = Stall3:FindFirstChild("ProxPart").ProximityPrompt
            game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(Stall3:FindFirstChild("ProxPart").Position)
            wait(0.3)
            fireproximityprompt(Proximity3, 10)
            wait(0.5)
            Stall3:WaitForChild("CloseStall"):FireServer()
        end
    end
    
    function ClaimStall4()
    local Folder = workspace:WaitForChild("Stalls")
    ---
    local Stall1 = Folder:FindFirstChild("Stall1")
    local Stall2 = Folder:FindFirstChild("Stall2")
    local Stall3 = Folder:FindFirstChild("Stall3")
    local Stall4 = Folder:FindFirstChild("Stall4")
    local Stall5 = Folder:FindFirstChild("Stall5")
        if Stall4:FindFirstChild("ProxPart") and fireproximityprompt and Stall4.Player.Value ~= whitelist[game.Players[Stall4:FindFirstChild("Player").Value].UserId] then
            local Proximity4 = Stall4:FindFirstChild("ProxPart").ProximityPrompt
            game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(Stall4:FindFirstChild("ProxPart").Position)
            wait(0.3)
            fireproximityprompt(Proximity4, 10)
            wait(0.5)
            Stall4:WaitForChild("CloseStall"):FireServer()
        end
    end
    
    function ClaimStall5()
    local Folder = workspace:WaitForChild("Stalls")
    ---
    local Stall1 = Folder:FindFirstChild("Stall1")
    local Stall2 = Folder:FindFirstChild("Stall2")
    local Stall3 = Folder:FindFirstChild("Stall3")
    local Stall4 = Folder:FindFirstChild("Stall4")
    local Stall5 = Folder:FindFirstChild("Stall5")
        if Stall5:FindFirstChild("ProxPart") and fireproximityprompt and Stall5.Player.Value ~= whitelist[game.Players[Stall5:FindFirstChild("Player").Value].UserId] then
            local Proximity5 = Stall5:FindFirstChild("ProxPart").ProximityPrompt
            game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(Stall5:FindFirstChild("ProxPart").Position)
            wait(0.3)
            fireproximityprompt(Proximity5, 10)
            wait(0.5)
            Stall5:WaitForChild("CloseStall"):FireServer()
        end
    end
    wait()
    print("Stalls Finished.")
    wait()
    local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
    -- Functions --
    local cmdp = Players
    local cmdlp = cmdp.LocalPlayer
    
    function findplr(args, tbl)
        if tbl == nil then
            local tbl = cmdp:GetPlayers()
            if args == "me" then
                return cmdlp
            elseif args == "random" then 
                return tbl[math.random(1,#tbl)]
            elseif args == "new" then
                local vAges = {} 
                for _,v in pairs(tbl) do
                    if v.AccountAge < 30 and v ~= cmdlp then
                        vAges[#vAges+1] = v
                    end
                end
                return vAges[math.random(1,#vAges)]
            elseif args == "old" then
                local vAges = {} 
                for _,v in pairs(tbl) do
                    if v.AccountAge > 30 and v ~= cmdlp then
                        vAges[#vAges+1] = v
                    end
                end
                return vAges[math.random(1,#vAges)]
            elseif args == "bacon" then
                local vAges = {} 
                for _,v in pairs(tbl) do
                    if v.Character:FindFirstChild("Pal Hair") or v.Character:FindFirstChild("Kate Hair") and v ~= cmdlp then
                        vAges[#vAges+1] = v
                    end
                end
                return vAges[math.random(1,#vAges)]
            elseif args == "friend" then
                local vAges = {} 
                for _,v in pairs(tbl) do
                    if v:IsFriendsWith(cmdlp.UserId) and v ~= cmdlp then
                        vAges[#vAges+1] = v
                    end
                end
                return vAges[math.random(1,#vAges)]
            elseif args == "notfriend" then
                local vAges = {} 
                for _,v in pairs(tbl) do
                    if not v:IsFriendsWith(cmdlp.UserId) and v ~= cmdlp then
                        vAges[#vAges+1] = v
                    end
                end
                return vAges[math.random(1,#vAges)]
            elseif args == "ally" then
                local vAges = {} 
                for _,v in pairs(tbl) do
                    if v.Team == cmdlp.Team and v ~= cmdlp then
                        vAges[#vAges+1] = v
                    end
                end
                return vAges[math.random(1,#vAges)]
            elseif args == "enemy" then
                local vAges = {} 
                for _,v in pairs(tbl) do
                    if v.Team ~= cmdlp.Team then
                        vAges[#vAges+1] = v
                    end
                end
                return vAges[math.random(1,#vAges)]
            elseif args == "near" then
                local vAges = {} 
                for _,v in pairs(tbl) do
                    if v ~= cmdlp then
                        local math = (v.Character:FindFirstChild("HumanoidRootPart").Position - cmdlp.Character.HumanoidRootPart.Position).magnitude
                        if math < 30 then
                            vAges[#vAges+1] = v
                        end
                    end
                end
                return vAges[math.random(1,#vAges)]
            elseif args == "far" then
                local vAges = {} 
                for _,v in pairs(tbl) do
                    if v ~= cmdlp then
                        local math = (v.Character:FindFirstChild("HumanoidRootPart").Position - cmdlp.Character.HumanoidRootPart.Position).magnitude
                        if math > 30 then
                            vAges[#vAges+1] = v
                        end
                    end
                end
                return vAges[math.random(1,#vAges)]
            else 
                for _,v in pairs(tbl) do
                    if v.Name:lower():find(args:lower()) or v.DisplayName:lower():find(args:lower()) then
                        return v
                    end
                end
            end
        else
            for _, plr in pairs(tbl) do
                if plr.UserName:lower():find(args:lower()) or plr.DisplayName:lower():find(args:lower()) then
                    return plr
                end
            end
        end
    end
    wait()
    function isNumber(str)
        if tonumber(str) ~= nil then
            return true
        end
    end
    wait()
    Tab11:AddButton({
    Name = "Claim Any Booth (Go To A Booth)",
    Callback = function()
        local Folder = workspace:WaitForChild("Stalls")
    
        local function setupProximityPrompt(stall)
            if stall:FindFirstChild("ProxPart") then
                local ProximityPrompt = stall:FindFirstChild("ProxPart").ProximityPrompt
                ProximityPrompt.Enabled = true
                wait()
                ProximityPrompt.HoldDuration = 0
    
                ProximityPrompt:GetPropertyChangedSignal("Enabled"):Connect(function()
                    if not ProximityPrompt.Enabled then
                        ProximityPrompt.Enabled = true
                    end
                end)
            end
        end
    
        local stalls = {
            Folder:FindFirstChild("Stall1"),
            Folder:FindFirstChild("Stall2"),
            Folder:FindFirstChild("Stall3"),
            Folder:FindFirstChild("Stall4"),
            Folder:FindFirstChild("Stall5")
        }
    
        for _, stall in ipairs(stalls) do
            if stall then
                setupProximityPrompt(stall)
            end
        end
    
        for _, v in ipairs(stalls) do
            if table.find(whitelist, tostring(v.Player.Value)) then
                v:FindFirstChild("ProxPart").ProximityPrompt.Enabled = false
            else
                warn(tostring(v.Player.Value)..", was checked, continuing...")
            end
        end
    end})
    
    Tab13:AddButton({
    Name = "Trip And Die (FE)",
    Callback = function()
        function getRoot(char)
            local rootPart = char:FindFirstChild('HumanoidRootPart') or char:FindFirstChild('Torso') or char:FindFirstChild('UpperTorso')
            return rootPart
        end
    
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local hum = Character:FindFirstChildOfClass("Humanoid")
        local root = getRoot(Character)
        hum.Jump = true
        wait()
        hum.Jump = true
        wait(0.1)
        hum:ChangeState(0)
        root.Velocity = root.CFrame.LookVector * 30
        wait(0.3)
        hum.Health = 0
    end})
    
    -- This is probably going to be removed soon, due to the fact it's useless now.
    
    --[[Tab11:AddToggle({
    Name = "Auto Claim/Steal Booth (for hackers?)",
    Default = false,
    Callback = function(AutoClaimStand)
    if AutoClaimStand then
        getgenv().ClaimTheStand = true
    
        local function getStall()
            for _, stall in pairs(workspace:WaitForChild("Stalls"):GetChildren()) do
                if stall:FindFirstChild("Player") and stall.Player.Value == game:GetService("Players").LocalPlayer then
                    return stall
                end
            end
            return nil
        end
        
        local function makePlayersInvisible()
            for _, player in pairs(game.Players:GetPlayers()) do
                if player ~= game.Players.LocalPlayer and player.Character then
                    for _, part in pairs(player.Character:GetDescendants()) do
                        if part:IsA("BasePart") then
                            part.Transparency = 1
                        end
                    end
                end
            end
        end
        
        makePlayersInvisible()
        wait(0.2)
        
        while getgenv().ClaimTheStand == true do
            wait()
        
            local ClaimTexture = "rbxthumb://type=Asset&id=5888213893&w=420&h=420"
            local Signals = {"Activated", "MouseButton1Down", "MouseButton2Down", "MouseButton1Click", "MouseButton2Click"}
            local LocalPlayer = game.Players.LocalPlayer
            local stall = getStall()
        
            if stall and stall:FindFirstChild("Icon") and stall.Icon:FindFirstChild("Decal") and stall:FindFirstChild("ProxPart") then
                local decal = stall.Icon.Decal
        
                if decal.Texture ~= ClaimTexture then
                    local ProximityPrompt = stall.ProxPart:FindFirstChild("ProximityPrompt")
        
                    LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(stall.ProxPart.Position)
                    wait(0.3)
                    fireproximityprompt(ProximityPrompt, 15)
                    wait()
        
                    local args = {
                        [1] = "Stolen By: " .. LocalPlayer.Name,
                        [2] = "5888213893"
                    }
                    stall:FindFirstChild("Edit"):FireServer(unpack(args))
                    wait()
        
                    local Button = LocalPlayer.PlayerGui.StallLocal.StallFrame
                    for _, v in pairs(Button:GetDescendants()) do
                        if (v:IsA("ImageButton") or v:IsA("TextButton")) and v.Name == "CancelButton" then
                            for _, signal in pairs(Signals) do
                                firesignal(v[signal])
                            end
                        end
                    end
        
                    wait(0.1)
        
                    stall:WaitForChild("CloseStall"):FireServer()
                end
            end
        end      
    else
        getgenv().ClaimTheStand = false
        wait()
        getgenv().ClaimTheStand = false
        wait()
        getgenv().ClaimTheStand = false
        wait(0.2)
        local function makePlayersVisible()
            for _, player in pairs(game.Players:GetPlayers()) do
                if player ~= game.Players.LocalPlayer and player.Character then
                    for _, part in pairs(player.Character:GetDescendants()) do
                        if part:IsA("BasePart") then
                            part.Transparency = 0
                        end
                    end
                end
            end
        end    
        
        local function makeHumanoidRootPartsInvisible()
            for _, player in pairs(game.Players:GetPlayers()) do
                if player ~= game.Players.LocalPlayer and player.Character then
                    local hrp = player.Character:FindFirstChild("HumanoidRootPart")
                    if hrp then
                        hrp.Transparency = 1
                    end
                end
            end
        end    
        
        makePlayersVisible()
        wait(0.3)
        makeHumanoidRootPartsInvisible()
    end
    end})--]]
    
    Tab11:AddButton({
    Name = "Anti Booth Stealer (for hackers)",
    Callback = function()
        local player = game.Players.LocalPlayer
    
        local function getStall()
            for i, v in pairs(workspace.Stalls:GetChildren()) do
                if v:FindFirstChild("Player") and v.Player.Value == player then
                    return v
                end
            end
            return nil
        end
        
        local function fireProximityPrompt(prompt)
            if prompt then
                fireproximityprompt(prompt)
            end
        end
        
        local function makeCharacterInvisible(character)
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.Transparency = 1
                    part.CanCollide = false
                end
            end
        end
        
        local function makeCharacterVisible(character)
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.Transparency = 0
                    part.CanCollide = true
                end
            end
        end
        
        local function makeAllPlayersInvisible()
            for _, otherPlayer in pairs(game.Players:GetPlayers()) do
                if otherPlayer ~= player and otherPlayer.Character then
                    makeCharacterInvisible(otherPlayer.Character)
                end
            end
        end
        
        local function monitorPlayerStall()
            local ownedStall = getStall()
    
            if not ownedStall then
                return OrionLib:MakeNotification({
                    Name = "Error: No Booth",
                    Content = "You don't own a booth!",
                    Image = "rbxassetid://4483345998",
                    Time = 10
                })
            end
        
            local icon = ownedStall:FindFirstChild("Icon")
            if icon and icon:FindFirstChild("Decal") then
                local decal = icon.Decal
        
                decal:GetPropertyChangedSignal("Texture"):Connect(function()
                    makeAllPlayersInvisible()
                    wait(0.3)
    
                    local proxPart = ownedStall:FindFirstChild("ProxPart")
                    if proxPart and proxPart:FindFirstChild("ProximityPrompt") then
                        fireProximityPrompt(proxPart.ProximityPrompt)
                    else
                        warn("ProximityPrompt not found in the stall")
                    end
        
                    wait(0.3)
                    local function makeCharacterVisible(character)
                        for _, part in pairs(character:GetDescendants()) do
                            if part:IsA("BasePart") then
                                part.Transparency = 0
                            end
                        end
                    end
                    
                    for _, player in pairs(game.Players:GetPlayers()) do
                        if player ~= game.Players.LocalPlayer and player.Character then
                            makeCharacterVisible(player.Character)
                        end
                    end
                    wait()
                    local function makePartInvisible(part)
                        part.Transparency = 1
                    end
                    
                    local function makeHumanoidRootPartInvisible(character)
                        local player = game.Players:GetPlayerFromCharacter(character)
                        if player and player ~= game.Players.LocalPlayer then
                            local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                            if humanoidRootPart then
                                makePartInvisible(humanoidRootPart)
                            end
                        end
                    end
                    
                    for _, player in pairs(game.Players:GetPlayers()) do
                        if player.Character then
                            makeHumanoidRootPartInvisible(player.Character)
                        end
                    end
                end)
            end
        end
        
        monitorPlayerStall()    
    end})
    
    Tab13:AddToggle({
    Name = "Freeze YOUR Character (FE)",
    Default = false,
    Callback = function(freezeChar)
    if freezeChar then
        getgenv().FreezingChar = true
        if getgenv().FreezingChar == true then
            game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Anchored = true
        end
    else
        getgenv().FreezingChar = false
        wait()
        game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Anchored = false
    end
    end})

    Tab13:AddToggle({
    Name = "Noclip",
    Default = false,
    Callback = function(noclipToggle)
    if noclipToggle then
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        
        getgenv().isNoclipOn = true
        
        while getgenv().isNoclipOn == true do
            wait()
            for i, v in pairs(character:GetDescendants()) do
                if v:IsA("BasePart") then
                    v.CanCollide = false
                end
            end
        end
    else
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local LastCF = character:FindFirstChild("HumanoidRootPart").CFrame

        if not character then
            repeat wait() until character and character:FindFirstChildWhichIsA("Humanoid")
        end
        wait(.1)
		for i, v in pairs(character:GetDescendants()) do
			if v:IsA("BasePart") then
				v.CanCollide = true

                getgenv().isNoclipOn = false
			end
		end
        wait(0.4)
        for i = 1, 6 do
            game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid").Jump = true
        end
    end
    end})

    Tab13:AddToggle({
    Name = "Noclip (With Anti-Sit)",
    Default = false,
    Callback = function(antiSitNoclip)
    if antiSitNoclip then
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local speaker = Players.LocalPlayer
        local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        wait()
        getgenv().noClipNoSit = true
        while getgenv().noClipNoSit == true do
        wait()
            for i, v in pairs(character:GetDescendants()) do
                if v:IsA("BasePart") then
                    v.CanCollide = false
                    wait()
                    speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
                end
            end
        end
    else
        getgenv().noClipNoSit = false
        wait()
        repeat wait() until getgenv().noClipNoSit == false
        wait(0.3)
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local LastCF = character:FindFirstChild("HumanoidRootPart").CFrame

        if not character then
            repeat wait() until character and character:FindFirstChildWhichIsA("Humanoid")
        end
        wait(.1)
		for i, v in pairs(character:GetDescendants()) do
			if v:IsA("BasePart") then
				v.CanCollide = true
			end
		end
        wait(0.4)
        for i = 1, 6 do
            game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid").Jump = true
        end
    end
    end})

    Tab5:AddButton({
    Name = "Players Invisible Fix",
    Callback = function()
    local function makeCharacterVisible(character)
        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.Transparency = 0
            end
        end
    end
    
    for _, player in pairs(game.Players:GetPlayers()) do
        if player ~= game.Players.LocalPlayer and player.Character then
            makeCharacterVisible(player.Character)
        end
    end
    wait()
    local function makePartInvisible(part)
        part.Transparency = 1
    end
    
    local function makeHumanoidRootPartInvisible(character)
        local player = game.Players:GetPlayerFromCharacter(character)
        if player and player ~= game.Players.LocalPlayer then
            local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
            if humanoidRootPart then
                makePartInvisible(humanoidRootPart)
            end
        end
    end
    
    for _, player in pairs(game.Players:GetPlayers()) do
        if player.Character then
            makeHumanoidRootPartInvisible(player.Character)
        end
    end
    end})
    
    Tab11:AddToggle({
    Name = "Bad Words Cycle (Working!)",
    Default = false,
    Callback = function(Cussing)
    if Cussing then
    getgenv().Cuss = true
    while getgenv().Cuss == true do
    wait(0.5)
        local function getStall()
            for i,v in pairs(game:GetService("Workspace").Stalls:GetChildren()) do
                if v.Player.Value == game:GetService("Players").LocalPlayer then
                    return v
                end
            end
            return nil
        end
    
    local MyStall = getStall()
    
    if not MyStall or MyStall == nil then
        getgenv().Cuss = false
        return OrionLib:MakeNotification({
            Name = "Error: No Booth",
            Content = "You do not have a booth!",
            Image = "rbxassetid://4483345998",
            Time = 10
        })
    end
    
    local args = {
        [1] = "ɓ׀丅ㄈȟ",
        [2] = "5888213893"
    }
    
    MyStall:FindFirstChild("Edit"):FireServer(unpack(args))
    wait(1)
    local args = {
        [1] = "ӻȕㄈҟ",
        [2] = "5888213893"
    }
    
    MyStall:FindFirstChild("Edit"):FireServer(unpack(args))
    wait(1)
    local args = {
        [1] = "ㄈȕ冂丅",
        [2] = "5888213893"
    }
    
    MyStall:FindFirstChild("Edit"):FireServer(unpack(args))
    wait(1)
    local args = {
        [1] = "ȿȴȕ丅",
        [2] = "5888213893"
    }
    
    MyStall:FindFirstChild("Edit"):FireServer(unpack(args))
    wait(1)
    local args = {
        [1] = "ҟҟҟ",
        [2] = "5888213893"
    }
    
    MyStall:FindFirstChild("Edit"):FireServer(unpack(args))
    wait(1)
    local args = {
        [1] = "ŗȇ丅ẳŗȡ",
        [2] = "5888213893"
    }
    
    MyStall:FindFirstChild("Edit"):FireServer(unpack(args))
    wait(1)
    local args = {
        [1] = "ώȇȇȡ",
        [2] = "5888213893"
    }
    
    MyStall:FindFirstChild("Edit"):FireServer(unpack(args))
    wait(1)
    local args = {
        [1] = "ώȟόŗȇ",
        [2] = "5888213893"
    }
    
    MyStall:FindFirstChild("Edit"):FireServer(unpack(args))
    wait(1)
    local args = {
        [1] = "ㄈȕɱ",
        [2] = "5888213893"
    }
    
    MyStall:FindFirstChild("Edit"):FireServer(unpack(args))
    wait(1)
    local args = {
        [1] = "ɓ׀ɠ ẳȿȿ",
        [2] = "5888213893"
    }
    
    MyStall:FindFirstChild("Edit"):FireServer(unpack(args))
    end
    else
    getgenv().Cuss = false
    wait()
    getgenv().Cuss = false
    wait()
    getgenv().Cuss = false
    end
    end})
    
    Tab16:AddToggle({
    Name = "Rainbow Baseplate (NOT! FE)",
    Default = false,
    Callback = function(getRainbowBaseplate)
    if getRainbowBaseplate then
    local TweenService = cloneref(game:GetService("TweenService")) or game:GetService("TweenService")
    local ws = cloneref(game:GetService("Workspace")) or game:GetService("Workspace")
    local getFolder = ws:FindFirstChild("PartStorage") or ws:WaitForChild("PartStorage")
    local getpart = getFolder:FindFirstChildOfClass("Part") or getFolder:FindFirstChildWhichIsA("Part")
    
    repeat wait() until getFolder and getpart
    
    if getpart and getFolder then
        getpart.Transparency = 0
        print(tostring(getpart))
        wait(.1)
        print("Setting Loop: "..tostring(getgenv().StartRainbowPart))
        getgenv().StartRainbowPart = true
        repeat wait() until getgenv().StartRainbowPart == true
        print("Set Loop: "..tostring(getgenv().StartRainbowPart))
    
        local colors = {
            Color3.fromRGB(255, 255, 255),
            Color3.fromRGB(255, 0, 0),
            Color3.fromRGB(0, 0, 255),
            Color3.fromRGB(255, 105, 180),
            Color3.fromRGB(255, 255, 0),
            Color3.fromRGB(0, 128, 128),
            Color3.fromRGB(107, 142, 35),
            Color3.fromRGB(75, 0, 130),
            Color3.fromRGB(255, 0, 255),
            Color3.fromRGB(255, 182, 193),
            Color3.fromRGB(139, 69, 19)
        }
    
        local tweenInfo = TweenInfo.new(1.5, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)
    
        while getgenv().StartRainbowPart == true do
            for _, color in ipairs(colors) do
                local tween = TweenService:Create(getpart, tweenInfo, {Color = color})
                tween:Play()
                tween.Completed:Wait()
            end
        end
    else
        getgenv().StartRainbowPart = false
        return warn("nil | Baseplate")
    end
    else
        print("Changing Loop: "..tostring(getgenv().StartRainbowPart))
        wait()
        getgenv().StartRainbowPart = false
        wait()
        local ws = cloneref(game:GetService("Workspace")) or game:GetService("Workspace")
        local getFolder = ws:FindFirstChild("PartStorage") or ws:WaitForChild("PartStorage")
        local getpart = getFolder:FindFirstChildOfClass("Part") or getFolder:FindFirstChildWhichIsA("Part")
        repeat wait() until getFolder and getpart
        getpart.Transparency = 1
        wait(.1)
        getpart.BrickColor = BrickColor.new("Medium stone grey")
        wait()
        repeat wait() until getgenv().StartRainbowPart == false and getpart.Transparency == 1
        wait()
        print("Toggle Loop Set To: "..tostring(getgenv().StartRainbowPart))
    end
    end})
    
    Tab11:AddTextbox({
    Name = "Custom Booth Image (FE)",
    Default = "ID Here",
    TextDisappear = true,
    Callback = function(getIdForBooth)
        local GetCustomID = tostring(getIdForBooth)
        if GetCustomID then
            local function getStall()
                for i,v in pairs(game:GetService("Workspace").Stalls:GetChildren()) do
                    if v.Player.Value == game:GetService("Players").LocalPlayer then
                        return v
                    end
                end
            return nil
            end
    
            local GetLocalPlayersStall = getStall()
    
            if not GetLocalPlayersStall then
                return OrionLib:MakeNotification({
                    Name = "Error: No Booth",
                    Content = "You do not own a booth, claim one!",
                    Image = "rbxassetid://4483345998",
                    Time = 10
                })
            end
    
        if GetLocalPlayersStall then
            local args = {
                [1] = "Zacks Easy Hub [ON TOP!]",
                [2] = GetCustomID
            }
    
            GetLocalPlayersStall:FindFirstChild("Edit"):FireServer(unpack(args))
        end
        elseif not GetCustomID then
            return OrionLib:MakeNotification({
                Name = "Error: No Input",
                Content = "Please input an ID for your booth image.",
                Image = "rbxassetid://4483345998",
                Time = 10
            })
        end
    end})
    
    Tab11:AddToggle({
    Name = "Loop Bypassed Stall (FE)",
    Default = false,
    Callback = function(wildToggle)
    if wildToggle then
    getgenv().ShufflePics = true
    local function getStall()
        for i,v in pairs(game:GetService("Workspace").Stalls:GetChildren()) do
            if v.Player.Value == game:GetService("Players").LocalPlayer then
                return v
            end
        end
    return nil
    end
    
    local MyStall = getStall()
    
    if not MyStall then
        getgenv().ShufflePics = false
        return OrionLib:MakeNotification({
            Name = "Error: No Booth",
            Content = "You do not own a booth, claim one!",
            Image = "rbxassetid://4483345998",
            Time = 10
        })
    end

    local imageIDs = {
        "5888213893",
        "13886197679",
        "12875268373",
        "125124809459735",
        "78267907856078",
    }

    local function pickRandomImage()
        local randomIndex = math.random(1, #imageIDs)
        return imageIDs[randomIndex]
    end
    
    while getgenv().ShufflePics == true do
    wait(0.5)
    local args = {
        [1] = "ӻȕㄈҟ",
        [2] = tostring(pickRandomImage())
    }
    
    MyStall:FindFirstChild("Edit"):FireServer(unpack(args))
    wait(1)
    local args = {
        [1] = "ㄈȕ冂丅",
        [2] = tostring(pickRandomImage())
    }
    
    MyStall:FindFirstChild("Edit"):FireServer(unpack(args))
    wait(1)
    local args = {
        [1] = "ȿȴȕ丅",
        [2] = tostring(pickRandomImage())
    }
    
    MyStall:FindFirstChild("Edit"):FireServer(unpack(args))
    wait(1)
    local args = {
        [1] = "ҟҟҟ",
        [2] = tostring(pickRandomImage())
    }
    
    MyStall:FindFirstChild("Edit"):FireServer(unpack(args))
    wait(1)
    local args = {
        [1] = "ŗȇ丅ẳŗȡ",
        [2] = tostring(pickRandomImage())
    }
    
    MyStall:FindFirstChild("Edit"):FireServer(unpack(args))
    wait(1)
    local args = {
        [1] = "ώȇȇȡ",
        [2] = tostring(pickRandomImage())
    }
    
    MyStall:FindFirstChild("Edit"):FireServer(unpack(args))
    wait(1)
    local args = {
        [1] = "ώȟόŗȇ",
        [2] = tostring(pickRandomImage())
    }
    
    MyStall:FindFirstChild("Edit"):FireServer(unpack(args))
    wait(1)
    local args = {
        [1] = "ㄈȕɱ",
        [2] = tostring(pickRandomImage())
    }
    
    MyStall:FindFirstChild("Edit"):FireServer(unpack(args))
    wait(1)
    local args = {
        [1] = "ɓ׀ɠ ẳȿȿ",
        [2] = tostring(pickRandomImage())
    }
    
    MyStall:FindFirstChild("Edit"):FireServer(unpack(args))
    end
    else
        getgenv().ShufflePics = false
    end
    end})
    
    Tab11:AddButton({
    Name = "18+ Booth Image (Random, FE)",
    Callback = function()
    local function getStall()
        for i,v in pairs(game:GetService("Workspace").Stalls:GetChildren()) do
            if v.Player.Value == game:GetService("Players").LocalPlayer then
                return v
            end
        end
        return nil
    end
    
    local LocalStall = getStall()
    if LocalStall and LocalStall:FindFirstChild("Edit") then
    local TheStall = LocalStall
    local imageIDs = {
        "5888213893",
        "13886197679",
        "12875268373",
        "125124809459735",
        "78267907856078"
    }
    
    local function pickRandomImage()
        local randomIndex = math.random(1, #imageIDs)
        return imageIDs[randomIndex]
    end
    
    local args = {
        [1] = "Zacks Easy Hub [ON TOP!]",
        [2] = tostring(pickRandomImage())
    }
    
    TheStall:FindFirstChild("Edit"):FireServer(unpack(args))
    else
        return OrionLib:MakeNotification({
            Name = "Error: No Booth!",
            Content = "You do not own a booth, Please claim a booth!",
            Image = "rbxassetid://4483345998",
            Time = 10
        })
    end
    end})
    
    Tab7:AddTextbox({
    Name = "Whitelist User",
    Default = "User Here",
    TextDisappear = true,
    Callback = function(InputUser)
        local getThisUser = findplr(InputUser)
    
        if not getThisUser then
            return OrionLib:MakeNotification({
                Name = "Error: Not Found",
                Content = "Player was not found!",
                Image = "rbxassetid://4483345998",
                Time = 10
            })
        end
    
        if getgenv().whitelist[getThisUser.Name] then
            return OrionLib:MakeNotification({
                Name = "Error:",
                Content = "Player is already on the whitelist.",
                Image = "rbxassetid://4483345998",
                Time = 10
            })
        end
    
        getgenv().whitelist[getThisUser.Name] = true
        return OrionLib:MakeNotification({
            Name = "Success!",
            Content = tostring(getThisUser.Name).." was added to the whitelist.",
            Image = "rbxassetid://4483345998",
            Time = 10
        })
    end})
    
    Tab7:AddTextbox({
    Name = "Remove Whitelist User",
    Default = "User Here",
    TextDisappear = true,
    Callback = function(enterUser)
        local getTheirUser = findplr(enterUser)
    
        if not getTheirUser then
            return OrionLib:MakeNotification({
                Name = "Error: Not Found",
                Content = "Player was not found!",
                Image = "rbxassetid://4483345998",
                Time = 10
            })
        end
    
        local playerName = getTheirUser.Name:lower()
    
        if not table.find(whitelist, playerName) then
            return OrionLib:MakeNotification({
                Name = "Error:",
                Content = "Player is not in the whitelist.",
                Image = "rbxassetid://4483345998",
                Time = 10
            })
        end
    
        getgenv().whitelist[getTheirUser.Name] = nil
        return OrionLib:MakeNotification({
            Name = "Success!",
            Content = tostring(getTheirUser.Name).." was removed from the whitelist.",
            Image = "rbxassetid://4483345998",
            Time = 10
        })
    end})
    
    Tab2:AddTextbox({
    Name = "Spin Character (FE)",
    Default = "Speed Here",
    TextDisappear = true,
    Callback = function(getSpinSpeed)
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart") or Character:FindFirstChild("HumanoidRootPart")
        local Humanoid = Character:FindFirstChildWhichIsA("Humanoid") or Character:FindFirstChild("Humanoid") or Character:WaitForChild("Humanoid")
        local spinSpeed = tonumber(getSpinSpeed)
        if spinSpeed and spinSpeed <= 145 then
            local Spin = Instance.new("BodyAngularVelocity")
            Spin.Name = "Spinning"
            Spin.Parent = HumanoidRootPart
            Spin.MaxTorque = Vector3.new(0, math.huge, 0)
            Spin.AngularVelocity = Vector3.new(0,spinSpeed,0)
        elseif spinSpeed and spinSpeed >= 145 then
            OrionLib:MakeNotification({
                Name = "[OUTPUT]: Limit Reached.",
                Content = "Lowered your speed, because you will be flung.",
                Image = "rbxassetid://4483345998",
                Time = 10
            })
            wait(0.2)
            if not HumanoidRootPart:FindFirstChild("Spinning") then
                local Spin = Instance.new("BodyAngularVelocity")
                Spin.Name = "Spinning"
                Spin.Parent = HumanoidRootPart
                Spin.MaxTorque = Vector3.new(0, math.huge, 0)
                Spin.AngularVelocity = Vector3.new(0,145,0)
            else
                HumanoidRootPart:FindFirstChild("Spinning").AngularVelocity = Vector3.new(0,145,0)
            end
        elseif spinSpeed <= 145 and HumanoidRootPart:FindFirstChild("Spinning") then
            OrionLib:MakeNotification({
                Name = "[OUTPUT]: Already Spinning",
                Content = "Updated speed instead, detected edited spin.",
                Image = "rbxassetid://4483345998",
                Time = 10
            })
            wait(0.3)
            HumanoidRootPart:FindFirstChild("Spinning").AngularVelocity = Vector3.new(0,spinSpeed,0)
        end
    end})
    
    Tab2:AddButton({
    Name = "Unspin",
    Callback = function()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local HumanoidRootPart = Character:FindFirstChild("HumanoidRootPart") or Character:WaitForChild("HumanoidRootPart")
        for i,v in pairs(HumanoidRootPart:GetChildren()) do
            if v.Name == "Spinning" then
                v:Destroy()
            end
        end
    end})
    
    --[[Tab11:AddTextbox({
    Name = "UnClaim A Booth (broken, fixing)",
    Default = "UserName or Display",
    TextDisappear = true,
    Callback = function(LolUnClaim)
        local Players = game:GetService("Players")
        local Workspace = game:GetService("Workspace")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local Stalls = Workspace:WaitForChild("Stalls")
        local bruhGuy = findplr(LolUnClaim)
        
        getgenv().BoothOrigWhitelistTable = getgenv().BoothOrigWhitelistTable or {}
        getgenv().BoothWhitelistTable = getgenv().BoothWhitelistTable or {}
        getgenv().BoothOnlyWhitelistTable = getgenv().BoothOnlyWhitelistTable or {}
        getgenv().ownerWhitelist = {
            "M1RD3RCAUGHT",
            "STK_kets4eki",
            "ItsYoDawgWsgGng"
        }
        
        local function isStallWhitelisted(stallName)
            for _, whitelistStall in pairs(getgenv().BoothWhitelistTable) do
                if stallName == whitelistStall then
                    return true
                end
            end
            return false
        end
        
        local function addToStallWhitelist(stall)
            if not isStallWhitelisted(stall.Name) then
                table.insert(getgenv().BoothWhitelistTable, stall.Name)
            end
        end
        
        local function removeFromStallWhitelist(stall)
            for i, whitelistStall in ipairs(getgenv().BoothWhitelistTable) do
                if whitelistStall == stall.Name then
                    table.remove(getgenv().BoothWhitelistTable, i)
                    break
                end
            end
        end
        
        local function isStallOnlyWhitelisted(stallName)
            for _, whitelistStall in pairs(getgenv().BoothOnlyWhitelistTable) do
                if stallName == whitelistStall then
                    return true
                end
            end
            return false
        end
        
        local function addToStallOnlyWhitelist(stall)
            if not isStallOnlyWhitelisted(stall.Name) then
                table.insert(getgenv().BoothOnlyWhitelistTable, stall.Name)
            end
        end
        
        local function removeFromStallOnlyWhitelist(stall)
            for i, whitelistStall in ipairs(getgenv().BoothOnlyWhitelistTable) do
                if whitelistStall == stall.Name then
                    table.remove(getgenv().BoothOnlyWhitelistTable, i)
                    break
                end
            end
        end
        
        local function fireAndUnclaimStall(stall)
            local proximityPrompt = stall:FindFirstChild("ProxPart") and stall.ProxPart:FindFirstChild("ProximityPrompt")
            if proximityPrompt and not getgenv().ownerWhitelist[stall.Player.Value] and not getgenv().BoothOrigWhitelistTable[stall.Player.Value] then
                Character:PivotTo(stall:GetPivot())
                wait(0.1)
                Character:WaitForChild("HumanoidRootPart").Anchored = true
                wait(0.3)
                fireproximityprompt(proximityPrompt, 10)
                wait(0.5)
                stall:WaitForChild("CloseStall"):FireServer()
                wait(0.2)
                Character:WaitForChild("HumanoidRootPart").Anchored = false
            end
        end
        
        local function checkBoothOwnershipChange()
            while true do
                for _, stall in pairs(Stalls:GetChildren()) do
                    if stall:FindFirstChild("Player") then
                        local playerInStall = stall.Player.Value
                        
                        if isStallWhitelisted(stall.Name) then
                            addToStallOnlyWhitelist(stall)
                        else
                            return
                        end
        
                        stall.Player:GetPropertyChangedSignal("Value"):Connect(function()
                            local updatedPlayer = stall.Player.Value
                            
                            if isStallOnlyWhitelisted(stall.Name) then
                                if updatedPlayer and updatedPlayer ~= "" then
                                    addToStallWhitelist(stall)
                                end
                            else
                                removeFromStallOnlyWhitelist(stall)
                            end
        
                            if updatedPlayer and updatedPlayer ~= "" and not isStallWhitelisted(stall.Name) then
                                addToStallWhitelist(stall)
                            end
                        end)
                    end
                end
                wait(1)
            end
        end
        
        spawn(function()
            checkBoothOwnershipChange()
        end)
        
        function unclaimStallByUsername(username)
            for _, stall in pairs(Stalls:GetChildren()) do
                local player = stall:FindFirstChild("Player")
                if player and player.Value and type(player.Value) == "string" then
                    if player.Value:lower() == username:lower() and not getgenv().BoothOrigWhitelistTable[player.Value] then
                        fireAndUnclaimStall(stall)
                    end
                end
            end
        end     
        
        unclaimStallByUsername(bruhGuy)
    end})--]]
    
    Tab1:AddToggle({
    Name = "Submit Note Bypass (Board)",
    Default = false,
    Callback = function(theNote)
    if theNote then
        getgenv().crazyNote = true
        while getgenv().crazyNote == true do
        wait(0.5)
            local args = {
                [1] = "\211\187\200\149\227\132\136\210\159 \200\159\207\140\200\135"
            }
    
            game:GetService("ReplicatedStorage"):WaitForChild("SubmitNote"):FireServer(unpack(args))
        end
    else
        getgenv().crazyNote = false
        wait()
        getgenv().crazyNote = false
        wait()
        getgenv().crazyNote = false
    end
    end})
    
    Tab11:AddButton({
    Name = "Unclaim ALL Booths",
    Callback = function()
        local GetWorkspace = cloneref(game:GetService("Workspace")) or game:GetService("Workspace")
        local Folder = GetWorkspace:WaitForChild("Stalls") 
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local localPlayer = Players.LocalPlayer
        local Character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
        local OldCF = Character:FindFirstChild("HumanoidRootPart").CFrame
        
        getgenv().ownerWhitelist = {
            "M1RD3RCAUGHT",
            "STK_kets4eki",
            "ItsYoDawgWsgGng"
        }
        
        getgenv().BoothOrigWhitelistTable = {}

        local function fireAndUnclaimStall(stall)
            local proximityPrompt = stall:FindFirstChild("ProxPart").ProximityPrompt
            if proximityPrompt and (not getgenv().ownerWhitelist[stall.Player.Value] or getgenv().BoothOrigWhitelistTable[stall.Player.Value]) then
                local function makeCharacterInvisible(character)
                    for _, part in pairs(character:GetDescendants()) do
                        if part:IsA("BasePart") then
                            part.Transparency = 1
                        end
                    end
                end

                for _, player in pairs(game.Players:GetPlayers()) do
                    if player.Character and player ~= game.Players.LocalPlayer then
                        makeCharacterInvisible(player.Character)
                    end
                end                
                wait()
                Character:PivotTo(stall:GetPivot())
                wait(0.1)
                Character:WaitForChild("HumanoidRootPart").Anchored = true
                wait(0.3)
                fireproximityprompt(proximityPrompt, 10)
                wait(0.5)
                stall:WaitForChild("CloseStall"):FireServer()
                wait(0.2)
                Character:WaitForChild("HumanoidRootPart").Anchored = false
            elseif not proximityPrompt then
                return OrionLib:MakeNotification({
                    Name = "Failed!",
                    Content = "ProximityPrompt does not exist!",
                    Image = "rbxassetid://4483345998",
                    Time = 10
                })
            elseif getgenv().ownerWhitelist[stall.Player.Value] or getgenv().BoothOrigWhitelistTable[stall.Player.Value] then
                return print("Player is an owner or in the booth whitelist, skipping...")
            end
        end

        local function unclaimStalls()
            for _, stall in pairs(Folder:GetChildren()) do
                if stall:FindFirstChild("ProxPart") and not getgenv().ownerWhitelist[stall.Player.Value] and not getgenv().BoothOrigWhitelistTable[stall.Player.Value] then
                    wait(0.3)
                    fireAndUnclaimStall(stall)
                else
                    print("Skipping stall for: " .. tostring(stall.Player.Value))
                end
            end
        end

        local function cancelAllButtons()
            local Signals = {"Activated", "MouseButton1Down", "MouseButton2Down", "MouseButton1Click", "MouseButton2Click"}
            local StallFrame = localPlayer.PlayerGui:FindFirstChild("StallLocal"):FindFirstChild("StallFrame")
        
            if firesignal then
                for _, v in pairs(StallFrame:GetDescendants()) do
                    if (v:IsA("ImageButton") or v:IsA("TextButton")) and v.Name == "CancelButton" then
                        for _, signal in pairs(Signals) do
                            firesignal(v[signal])
                        end
                    end
                end
            else
                warn("firesignal is not supported, setting StallFrame.Visible to false")
                StallFrame.Visible = false
            end
        end

        local function makeCharacterVisible(character)
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.Transparency = 0
                end
            end
        end

        for _, player in pairs(Players:GetPlayers()) do
            if player ~= localPlayer and player.Character then
                makeCharacterVisible(player.Character)
            end
        end
        
        wait()
        
        local function makePartInvisible(part)
            part.Transparency = 1
        end
        
        local function makeHumanoidRootPartInvisible(character)
            local player = Players:GetPlayerFromCharacter(character)
            if player and player ~= localPlayer then
                local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                if humanoidRootPart then
                    makePartInvisible(humanoidRootPart)
                end
            end
        end

        for _, player in pairs(Players:GetPlayers()) do
            if player.Character then
                makeHumanoidRootPartInvisible(player.Character)
            end
        end
        
        wait(0.1)
        unclaimStalls()
        wait(0.2)
        local function makeCharacterVisible(character)
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.Transparency = 0
                end
            end
        end
        
        for _, player in pairs(game.Players:GetPlayers()) do
            if player ~= game.Players.LocalPlayer and player.Character then
                makeCharacterVisible(player.Character)
            end
        end
        wait()
        local function makePartInvisible(part)
            part.Transparency = 1
        end
        
        local function makeHumanoidRootPartInvisible(character)
            local player = game.Players:GetPlayerFromCharacter(character)
            if player and player ~= game.Players.LocalPlayer then
                local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                if humanoidRootPart then
                    makePartInvisible(humanoidRootPart)
                end
            end
        end
        
        for _, player in pairs(game.Players:GetPlayers()) do
            if player.Character then
                makeHumanoidRootPartInvisible(player.Character)
            end
        end
        wait(0.3)
        Character:WaitForChild("HumanoidRootPart").CFrame = OldCF
        
        wait(0.3)

        if firesignal then
            cancelAllButtons()
        else
            warn("firesignal is not supported, making StallFrame.Visible = false")
            local PlayerGui = localPlayer:WaitForChild("PlayerGui")
            PlayerGui.StallLocal.StallFrame.Visible = false
        end
        wait(0.2)
        print("Finished Unclaiming ALL Booths.")
    end})
    
    Tab7:AddTextbox({
    Name = "Add Booth Whitelist",
    Default = "User Here",
    TextDisappear = true,
    Callback = function(uAreWhitelisted)
        getgenv().BoothOrigWhitelistTable = getgenv().BoothOrigWhitelistTable or {}

        local BoothGlobalWhitelisting = findplr(uAreWhitelisted)
        
        local function gettingGlobalTable(player)
            if player then
                if not getgenv().BoothOrigWhitelistTable[player.Name] then
                    getgenv().BoothOrigWhitelistTable[player.Name] = player
                    wait(0.2)
                    OrionLib:MakeNotification({
                        Name = "Success!",
                        Content = tostring(player.Name)..", was added to Booth Whitelist!",
                        Image = "rbxassetid://4483345998",
                        Time = 10
                    })
                else
                    return OrionLib:MakeNotification({
                        Name = "[ERROR!]: -1",
                        Content = tostring(player.Name)..", is already in the Booth Whitelist!",
                        Image = "rbxassetid://4483345998",
                        Time = 10
                    })
                end
            else
                return OrionLib:MakeNotification({
                    Name = "[ERROR!]: 0",
                    Content = tostring(uAreWhitelisted)..", does not exist!",
                    Image = "rbxassetid://4483345998",
                    Time = 10
                })
            end
        end
        
        gettingGlobalTable(BoothGlobalWhitelisting)        
    end})
    
    Tab7:AddTextbox({
    Name = "Remove Booth Whitelist",
    Default = "User Here",
    TextDisappear = true,
    Callback = function(GetOffBoothWhitelist)
        getgenv().BoothOrigWhitelistTable = getgenv().BoothOrigWhitelistTable or {}

        local DoFindPlr = findplr(GetOffBoothWhitelist)
        
        getgenv().ownerWhitelist = {
            "M1RD3RCAUGHT",
            "STK_kets4eki",
            "ItsYoDawgWsgGng"
        }

        local function getThisPlayerOutOfHere(player)
            if player and getgenv().BoothOrigWhitelistTable[player.Name] then
                getgenv().BoothOrigWhitelistTable[player.Name] = nil
                wait(0.2)
                
                if not getgenv().BoothOrigWhitelistTable[player.Name] then
                    OrionLib:MakeNotification({
                        Name = "Success!",
                        Content = tostring(player.Name)..", was removed from Booth Whitelist!",
                        Image = "rbxassetid://4483345998",
                        Time = 10
                    })
                end
            elseif not player then
                return OrionLib:MakeNotification({
                    Name = "[ERROR]: 0",
                    Content = tostring(GetOffBoothWhitelist)..", does not exist",
                    Image = "rbxassetid://4483345998",
                    Time = 10
                })
            elseif getgenv().ownerWhitelist[player.Name] then
                return OrionLib:MakeNotification({
                    Name = "[ERROR]: -500",
                    Content = tostring(player.Name)..", is an owner!",
                    Image = "rbxassetid://4483345998",
                    Time = 10
                })
            elseif not getgenv().BoothOrigWhitelistTable[player.Name] then
                return OrionLib:MakeNotification({
                    Name = "[ERROR]: -1",
                    Content = tostring(player.Name)..", is not in the Booth Whitelist!",
                    Image = "rbxassetid://4483345998",
                    Time = 10
                })
            end
        end
        
        getThisPlayerOutOfHere(DoFindPlr)        
    end})
    wait()
    Tab17:AddParagraph("Add dick-heads here.")
    wait()
    Tab17:AddTextbox({
    Name = "Add Warning Blacklist",
    Default = "User Here",
    TextDisappear = true,
    Callback = function(urBlacklisted)
        getgenv().PlrBlacklistedTable = getgenv().PlrBlacklistedTable or {}

        local globallyBlacklist = findplr(urBlacklisted)
        
        getgenv().ownerWhitelist = {
            "M1RD3RCAUGHT",
            "STK_kets4eki",
            "ItsYoDawgWsgGng"
        }
        
        local function getThatGlobalTable(player)
            local Players = cloneref(game:GetService("Players")) or game:GetService("Players")

            if player and globallyBlacklist and not getgenv().PlrBlacklistedTable[player.Name] then
                if table.find(getgenv().ownerWhitelist, player.Name) then
                    return OrionLib:MakeNotification({
                        Name = "[ERROR]: -500",
                        Content = tostring(player.Name) .. ", is an owner!",
                        Image = "rbxassetid://4483345998",
                        Time = 10
                    })
                end

                getgenv().PlrBlacklistedTable[player.Name] = player
                wait(0.2)
                OrionLib:MakeNotification({
                    Name = "Success!",
                    Content = tostring(player.Name) .. ", was added to Warning Blacklist!",
                    Image = "rbxassetid://4483345998",
                    Time = 10
                })
        
            elseif not globallyBlacklist then
                return OrionLib:MakeNotification({
                    Name = "[ERROR]: 0",
                    Content = tostring(urBlacklisted) .. ", does not exist!",
                    Image = "rbxassetid://4483345998",
                    Time = 10
                })
        
            elseif getgenv().PlrBlacklistedTable[player.Name] then
                return OrionLib:MakeNotification({
                    Name = "[ERROR]: -1",
                    Content = tostring(player.Name) .. ", is already in the Warning Blacklist!",
                    Image = "rbxassetid://4483345998",
                    Time = 10
                })
        
            elseif globallyBlacklist == game.Players.LocalPlayer then
                return OrionLib:MakeNotification({
                    Name = "[ERROR]: -98",
                    Content = "You cannot blacklist yourself!",
                    Image = "rbxassetid://4483345998",
                    Time = 10
                })
            end
        end

        getThatGlobalTable(globallyBlacklist)        
    end})
    
    Tab17:AddParagraph("Remove dick-heads here.")
    wait()
    Tab17:AddTextbox({
    Name = "Remove Warning Blacklist",
    Default = "User Here",
    TextDisappear = true,
    Callback = function(RemoveThisGuy)
        local DoFindPlr = findplr(RemoveThisGuy)

        local function removePlayerFromGlobalTable(player)
            if player and getgenv().PlrBlacklistedTable[player.Name] then
                getgenv().PlrBlacklistedTable[player.Name] = nil
                wait(0.2)
                
                if not getgenv().PlrBlacklistedTable[player.Name] then
                    OrionLib:MakeNotification({
                        Name = "Success!",
                        Content = tostring(player.Name)..", was removed from the Warning Blacklist!",
                        Image = "rbxassetid://4483345998",
                        Time = 10
                    })
                end
            elseif not player then
                return OrionLib:MakeNotification({
                    Name = "[ERROR]: 0",
                    Content = tostring(RemoveThisGuy)..", does not exist!",
                    Image = "rbxassetid://4483345998",
                    Time = 10
                })
            elseif not getgenv().PlrBlacklistedTable[player.Name] then
                return OrionLib:MakeNotification({
                    Name = "[ERROR]: -1",
                    Content = tostring(player.Name)..", was not found in the Warning Blacklist!",
                    Image = "rbxassetid://4483345998",
                    Time = 10
                })
            end
        end
        
        removePlayerFromGlobalTable(DoFindPlr)        
    end})
    wait()
    Tab17:AddParagraph("Add the 'nice' people to NOT target here.")
    wait()
    Tab17:AddTextbox({
    Name = "Add Warning Whitelist",
    Default = "User Here",
    TextDisappear = true,
    Callback = function(doGetWhitelist)
        local yourSavedBro = findplr(doGetWhitelist)

        getgenv().getBasicTable = getgenv().getBasicTable or {}
        
        local function whitelistingTableWarnings(player)
            getgenv().ownerWhitelist = {
                "M1RD3RCAUGHT",
                "STK_kets4eki",
                "ItsYoDawgWsgGng"
            }
        
            if player and not getgenv().getBasicTable[player.Name] and not table.find(getgenv().ownerWhitelist, player.Name) then
                getgenv().getBasicTable[player.Name] = player
                wait(0.2)
                OrionLib:MakeNotification({
                    Name = "Success!",
                    Content = tostring(player.Name)..", was added to Warning Whitelist!",
                    Image = "rbxassetid://4483345998",
                    Time = 10
                })
            elseif not player then
                return OrionLib:MakeNotification({
                    Name = "[ERROR]: 0",
                    Content = tostring(doGetWhitelist)..", does not exist!",
                    Image = "rbxassetid://4483345998",
                    Time = 10
                })
            elseif getgenv().getBasicTable[player.Name] then
                return OrionLib:MakeNotification({
                    Name = "[ERROR]: -20",
                    Content = tostring(player.Name)..", is already in the Warning Whitelist!",
                    Image = "rbxassetid://4483345998",
                    Time = 10
                })
            elseif table.find(getgenv().ownerWhitelist, player.Name) then
                return OrionLib:MakeNotification({
                    Name = "[ERROR]: -500",
                    Content = tostring(player.Name)..", is an owner and cannot be added!",
                    Image = "rbxassetid://4483345998",
                    Time = 10
                })
            end
        end
        
        whitelistingTableWarnings(yourSavedBro)        
    end})
    wait()
    Tab17:AddParagraph("Remove the 'nice' people here.")
    wait()
    Tab17:AddTextbox({
    Name = "Remove Warning Whitelist",
    Default = "User Here",
    TextDisappear = true,
    Callback = function(RemoveThisGuy)
        getgenv().getBasicTable = getgenv().getBasicTable or {}

        local GetGoneBud = findplr(RemoveThisGuy)
        
        local function removePlayerFromGlobalTable(player)
            if player and getgenv().getBasicTable[player.Name] then
                getgenv().getBasicTable[player.Name] = nil
                wait(0.2)
                if not getgenv().getBasicTable[player.Name] then
                    OrionLib:MakeNotification({
                        Name = "Success!",
                        Content = tostring(player.Name)..", was removed from the Warning Whitelist!",
                        Image = "rbxassetid://4483345998",
                        Time = 10
                    })
                end
            elseif not player then
                return OrionLib:MakeNotification({
                    Name = "[ERROR]: 0",
                    Content = tostring(RemoveThisGuy)..", does not exist!",
                    Image = "rbxassetid://4483345998",
                    Time = 10
                })
            elseif not getgenv().getBasicTable[player.Name] then
                return OrionLib:MakeNotification({
                    Name = "[ERROR]: -1",
                    Content = tostring(player.Name)..", was not found in the Warning Whitelist!",
                    Image = "rbxassetid://4483345998",
                    Time = 10
                })
            end
        end
        
        removePlayerFromGlobalTable(GetGoneBud)        
    end})
    
    Tab17:AddButton({
    Name = "Send Warnings To Blacklisted Player",
    Callback = function()
        getgenv().PlrBlacklistedTable = getgenv().PlrBlacklistedTable or {}

        getgenv().ownerWhitelist = {
            "M1RD3RCAUGHT",
            "STK_kets4eki",
            "ItsYoDawgWsgGng"
        }
    
        for i, v in pairs(game.Players:GetChildren()) do
            if getgenv().PlrBlacklistedTable[v.Name] then
                local args = {
                    [1] = tostring(getgenv().PlrBlacklistedTable[v.Name])
                }
    
                game:GetService("ReplicatedStorage"):WaitForChild("Notification"):WaitForChild("PlayerSelectedEvent"):FireServer(unpack(args))
            end
        end
    end})
    
    Tab17:AddToggle({
    Name = "Loop Send Blacklisted Plr Warnings",
    Default = false,
    Callback = function(SpamThePlr)
    if SpamThePlr then
        for i, v in pairs(game.Players:GetChildren()) do
            getgenv().ownerWhitelist = {
                "M1RD3RCAUGHT",
                "STK_kets4eki",
                "ItsYoDawgWsgGng"
            }

            if getgenv().PlrBlacklistedTable[v.Name] then
                getgenv().GetStuffSpam = true
                while getgenv().GetStuffSpam == true do
                wait(0.3)
                    local args = {
                        [1] = tostring(getgenv().PlrBlacklistedTable[v.Name])
                    }

                    game:GetService("ReplicatedStorage"):WaitForChild("Notification"):WaitForChild("PlayerSelectedEvent"):FireServer(unpack(args))
                end
            end
        end
    else
        for i = 1, 15 do
            task.wait()
            getgenv().GetStuffSpam = false
        end
    end
    end})
    
    local singlePlayerTable = {}
    
    Tab14:AddTextbox({
    Name = "Add CopyAnim Whitelist",
    Default = "User Here",
    TextDisappear = true,
    Callback = function(thisUserGet)
    getgenv().singlePlayerTable = getgenv().singlePlayerTable or {}
    
    local bruhUser = findplr(thisUserGet)
    
    local function addPlayerToGlobalTable(player)
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        if next(getgenv().singlePlayerTable) then
            return OrionLib:MakeNotification({
                Name = "Error: Player Limit",
                Content = "Only one player can be added at a time!",
                Image = "rbxassetid://4483345998",
                Time = 10
            })
        else
            getgenv().singlePlayerTable[player.Name] = player
            wait(0.2)
            if getgenv().singlePlayerTable[player.Name] then
                OrionLib:MakeNotification({
                    Name = "Success!",
                    Content = tostring(player.Name)..", was added to Whitelist!",
                    Image = "rbxassetid://4483345998",
                    Time = 10
                })
            elseif not Players[player.Name] then
                return OrionLib:MakeNotification({
                    Name = "[ERROR]: 0",
                    Content = tostring(player)..", does not exist!",
                    Image = "rbxassetid://4483345998",
                    Time = 10
                })
            end
        end
    end
    
    addPlayerToGlobalTable(bruhUser)
    end})
    
    Tab14:AddTextbox({
    Name = "Remove CopyAnim Whitelist",
    Default = "User Here",
    TextDisappear = true,
    Callback = function(CopyAnimPlr)
    getgenv().singlePlayerTable = getgenv().singlePlayerTable or {}
    
    local dawgUser = findplr(CopyAnimPlr)
    
    local function removePlayerFromGlobalTable(player)
        if getgenv().singlePlayerTable[player.Name] then
            getgenv().singlePlayerTable[player.Name] = nil
            wait(0.2)
            if getgenv().singlePlayerTable[player.Name] == nil then
                OrionLib:MakeNotification({
                    Name = "Success!",
                    Content = tostring(player.Name)..", was removed from the CopyAnim Whitelist!",
                    Image = "rbxassetid://4483345998",
                    Time = 10
                })
            else
                return OrionLib:MakeNotification({
                    Name = "[ERROR]: 0",
                    Content = tostring(player)..", does not exist!",
                    Image = "rbxassetid://4483345998",
                    Time = 10
                })
            end
        else
            return OrionLib:MakeNotification({
                Name = "[ERROR]: -1",
                Content = tostring(player.Name)..", was not found in CopyAnim Whitelist!",
                Image = "rbxassetid://4483345998",
                Time = 10
            })
        end
    end
    
    removePlayerFromGlobalTable(dawgUser)
    end})
    
    Tab14:AddButton({
    Name = "CopyAnim Whitelisted Plr",
    Callback = function()
        getgenv().singlePlayerTable = getgenv().singlePlayerTable or {}
    
        function getThatPlr()
            local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
            for i, v in pairs(Players:GetChildren()) do
                if getgenv().singlePlayerTable[v.Name] then
                    return v
                end
            end
            return nil
        end
        
        local thePlayer = getThatPlr()
        
        if thePlayer then
            print("Found Player: "..tostring(thePlayer.Name)..", DisplayName: "..tostring(thePlayer.DisplayName)..", UserID: "..tostring(thePlayer.UserId))
        else
            return OrionLib:MakeNotification({
                Name = "[ERROR]: 0",
                Content = "Player was not found!",
                Image = "rbxassetid://4483345998",
                Time = 10
            })
        end
        
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local Humanoid = Character:FindFirstChildWhichIsA("Humanoid") or Character:WaitForChild("Humanoid")
        local TheirCharacter = thePlayer.Character or thePlayer.CharacterAdded:Wait()
        local GetTheirHumanoid = TheirCharacter:FindFirstChildWhichIsA("Humanoid") or TheirCharacter:WaitForChild("Humanoid")
        
        if thePlayer then
            print("Found Player: "..tostring(thePlayer.Name)..", DisplayName: "..tostring(thePlayer.DisplayName)..", UserID: "..tostring(thePlayer.UserId))
        else
            return OrionLib:MakeNotification({
                Name = "[ERROR]: 0",
                Content = "Player was not found!",
                Image = "rbxassetid://4483345998",
                Time = 10
            })
        end
        
        for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do
            animTrack:Stop()
        end
        
        local getTheirChar = thePlayer.Character or thePlayer.CharacterAdded:Wait()
        local theirHumanoid = getTheirChar:FindFirstChildWhichIsA('Humanoid') or getTheirChar:WaitForChild('Humanoid')
        
        local function copyAnimations()
            for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do
                animTrack:Stop()
            end
        
            for _, animTrack in pairs(theirHumanoid:GetPlayingAnimationTracks()) do
                if not string.find(animTrack.Animation.AnimationId, "507768375") then
                    local copiedAnim = Humanoid:LoadAnimation(animTrack.Animation)
                    copiedAnim:Play(0.1, 1, animTrack.Speed)
                    copiedAnim.TimePosition = animTrack.TimePosition
        
                    task.spawn(function()
                        animTrack.Stopped:Wait()
                        copiedAnim:Stop()
                        copiedAnim:Destroy()
                    end)
                end
            end
        end
        
        copyAnimations()    
    end})

    Tab14:AddToggle({
    Name = "Loop CopyAnim Whitelist Plr",
    Default = false,
    Callback = function(getLoopCopyAnim)
        if getLoopCopyAnim then
            getgenv().singlePlayerTable = getgenv().singlePlayerTable or {}
        
            function getThatPlr()
                local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
                for i, v in pairs(Players:GetChildren()) do
                    if getgenv().singlePlayerTable[v.Name] then
                        return v
                    end
                end
                return nil
            end
            
            local thePlayer = getThatPlr()
            
            if thePlayer then
                print("Found Player: "..tostring(thePlayer.Name)..", DisplayName: "..tostring(thePlayer.DisplayName)..", UserID: "..tostring(thePlayer.UserId))
            else
                getgenv().copyAllWhitelistedAnims = false
                return OrionLib:MakeNotification({
                    Name = "[ERROR]: 0",
                    Content = "Player was not found!",
                    Image = "rbxassetid://4483345998",
                    Time = 10
                })
            end
            
            local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
            local LocalPlayer = Players.LocalPlayer
            local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
            local Humanoid = Character:FindFirstChildWhichIsA("Humanoid") or Character:WaitForChild("Humanoid")
            local TheirCharacter = thePlayer.Character or thePlayer.CharacterAdded:Wait()
            local GetTheirHumanoid = TheirCharacter:FindFirstChildWhichIsA("Humanoid") or TheirCharacter:WaitForChild("Humanoid")
            
            if thePlayer then
                print("Found Player: "..tostring(thePlayer.Name)..", DisplayName: "..tostring(thePlayer.DisplayName)..", UserID: "..tostring(thePlayer.UserId))
            else
                return OrionLib:MakeNotification({
                    Name = "[ERROR]: 0",
                    Content = "Player was not found!",
                    Image = "rbxassetid://4483345998",
                    Time = 10
                })
            end
            
            for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do
                animTrack:Stop()
            end
            
            local getTheirChar = thePlayer.Character or thePlayer.CharacterAdded:Wait()
            local theirHumanoid = getTheirChar:FindFirstChildWhichIsA('Humanoid') or getTheirChar:WaitForChild('Humanoid')
            
            local function copyAnimations()
                for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do
                    animTrack:Stop()
                end
            
                for _, animTrack in pairs(theirHumanoid:GetPlayingAnimationTracks()) do
                    if not string.find(animTrack.Animation.AnimationId, "507768375") then
                        local copiedAnim = Humanoid:LoadAnimation(animTrack.Animation)
                        copiedAnim:Play(0.1, 1, animTrack.Speed)
                        copiedAnim.TimePosition = animTrack.TimePosition
            
                        task.spawn(function()
                            animTrack.Stopped:Wait()
                            copiedAnim:Stop()
                            copiedAnim:Destroy()
                        end)
                    end
                end
            end
            
            getgenv().copyAllWhitelistedAnims = true
            while getgenv().copyAllWhitelistedAnims == true do
            wait()
                copyAnimations()
            end
        else
            getgenv().copyAllWhitelistedAnims = false
            wait()
            repeat wait() until getgenv().copyAllWhitelistedAnims == false
            wait(0.3)
            getgenv().singlePlayerTable = getgenv().singlePlayerTable or {}
    
            function getThatPlr()
                local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
                for i, v in pairs(Players:GetChildren()) do
                    if getgenv().singlePlayerTable[v.Name] then
                        return v
                    end
                end
                return nil
            end
        
            local thePlayer = getThatPlr()
            
            if thePlayer then
                print("Found Player: "..tostring(thePlayer.Name)..", DisplayName: "..tostring(thePlayer.DisplayName)..", UserID: "..tostring(thePlayer.UserId))
            else
                return OrionLib:MakeNotification({
                    Name = "[ERROR]: 0",
                    Content = "Player was not found!",
                    Image = "rbxassetid://4483345998",
                    Time = 10
                })
            end
            
            local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
            local LocalPlayer = Players.LocalPlayer
            local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
            local Humanoid = Character:FindFirstChildWhichIsA("Humanoid") or Character:WaitForChild("Humanoid")
            local TheirCharacter = thePlayer.Character or thePlayer.CharacterAdded:Wait()
            local GetTheirHumanoid = TheirCharacter:FindFirstChildWhichIsA("Humanoid") or TheirCharacter:WaitForChild("Humanoid")
            
            if thePlayer then
                print("Found Player: "..tostring(thePlayer.Name)..", DisplayName: "..tostring(thePlayer.DisplayName)..", UserID: "..tostring(thePlayer.UserId))
            else
                return OrionLib:MakeNotification({
                    Name = "[ERROR]: 0",
                    Content = "Player was not found!",
                    Image = "rbxassetid://4483345998",
                    Time = 10
                })
            end
            
            for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do
                animTrack:Stop()
            end
            
            local getTheirChar = thePlayer.Character or thePlayer.CharacterAdded:Wait()
            local theirHumanoid = getTheirChar:FindFirstChildWhichIsA('Humanoid') or getTheirChar:WaitForChild('Humanoid')
            
            local function stopAnimations()
                for _, animTrack in pairs(theirHumanoid:GetPlayingAnimationTracks()) do
                    animTrack:Stop()
                end
            end
            
            for i = 1, 10 do
                stopAnimations()
            end
        end
    end})
    
    Tab12:AddButton({
    Name = "Stop All Emotes",
    Callback = function()
        getgenv().singlePlayerTable = getgenv().singlePlayerTable or {}
    
        function getThatPlr()
            local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
            for i, v in pairs(Players:GetChildren()) do
                if getgenv().singlePlayerTable[v.Name] then
                    return v
                end
            end
            return nil
        end
    
        local thePlayer = getThatPlr()
        
        if thePlayer then
            print("Found Player: "..tostring(thePlayer.Name)..", DisplayName: "..tostring(thePlayer.DisplayName)..", UserID: "..tostring(thePlayer.UserId))
        else
            return OrionLib:MakeNotification({
                Name = "[ERROR]: 0",
                Content = "Player was not found!",
                Image = "rbxassetid://4483345998",
                Time = 10
            })
        end
        
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local Humanoid = Character:FindFirstChildWhichIsA("Humanoid") or Character:WaitForChild("Humanoid")
        local TheirCharacter = thePlayer.Character or thePlayer.CharacterAdded:Wait()
        local GetTheirHumanoid = TheirCharacter:FindFirstChildWhichIsA("Humanoid") or TheirCharacter:WaitForChild("Humanoid")
        
        if thePlayer then
            print("Found Player: "..tostring(thePlayer.Name)..", DisplayName: "..tostring(thePlayer.DisplayName)..", UserID: "..tostring(thePlayer.UserId))
        else
            return OrionLib:MakeNotification({
                Name = "[ERROR]: 0",
                Content = "Player was not found!",
                Image = "rbxassetid://4483345998",
                Time = 10
            })
        end
        
        for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do
            animTrack:Stop()
        end
        
        local getTheirChar = thePlayer.Character or thePlayer.CharacterAdded:Wait()
        local theirHumanoid = getTheirChar:FindFirstChildWhichIsA('Humanoid') or getTheirChar:WaitForChild('Humanoid')
        
        local function stopAnimations()
            for _, animTrack in pairs(theirHumanoid:GetPlayingAnimationTracks()) do
                animTrack:Stop()
            end
        end
        
        stopAnimations()    
    end})
    
    Tab12:AddTextbox({
    Name = "Play Emote (Needs ID)",
    Default = "ID Here",
    TextDisappear = true,
    Callback = function(getTheIDForEmote)
    local getNumberID = tonumber(getTheIDForEmote) or getTheIDForEmote
    local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local Humanoid = Character:FindFirstChildWhichIsA("Humanoid") or Character:WaitForChild("Humanoid")
    local HumanoidRootPart = Character:FindFirstChild("HumanoidRootPart") or Character:WaitForChild("HumanoidRootPart")
    
    local succ, err = pcall(function()
        Humanoid:PlayEmoteAndGetAnimTrackById(getNumberID)
    end)
    
    if succ then
        Humanoid:PlayEmoteAndGetAnimTrackById(getNumberID)
    else
        return OrionLib:MakeNotification({
            Name = "Error:",
            Content = tostring(err),
            Image = "rbxassetid://4483345998",
            Time = 10
        })
    end
    end})

    local GetWorkspace = cloneref(game:GetService("Workspace")) or game:GetService("Workspace")
    local PartStorageFolder = GetWorkspace:WaitForChild("PartStorage") or GetWorkspace:FindFirstChild("PartStorage")
    local FindBaseplate = PartStorageFolder:WaitForChild("BASEPLATE_CLONE_ANTI_VOID") or PartStorageFolder:FindFirstChild("BASEPLATE_CLONE_ANTI_VOID")
    if FindBaseplate then
        FindBaseplate.Material = Enum.Material.Air
        wait()
        FindBaseplate.Transparency = 1
    else
        warn("??? - BASEPLATE")
    end
    wait()
    Tab16:AddToggle({
    Name = "Make Baseplate Visible",
    Default = false,
    Callback = function(makeVis)
    if makeVis then
        getgenv().MakingVisible = true
        if getgenv().MakingVisible == true then
            local GetWorkspace = cloneref(game:GetService("Workspace")) or game:GetService("Workspace")
            local PartStorageFolder = GetWorkspace:WaitForChild("PartStorage") or GetWorkspace:FindFirstChild("PartStorage")
            local FindBaseplate = PartStorageFolder:WaitForChild("BASEPLATE_CLONE_ANTI_VOID") or PartStorageFolder:FindFirstChild("BASEPLATE_CLONE_ANTI_VOID")
            if FindBaseplate then
                FindBaseplate.Transparency = 0
            end
        end
    else
        getgenv().MakingVisible = false
        wait()
        local GetWorkspace = cloneref(game:GetService("Workspace")) or game:GetService("Workspace")
        local PartStorageFolder = GetWorkspace:WaitForChild("PartStorage") or GetWorkspace:FindFirstChild("PartStorage")
        local FindBaseplate = PartStorageFolder:WaitForChild("BASEPLATE_CLONE_ANTI_VOID") or PartStorageFolder:FindFirstChild("BASEPLATE_CLONE_ANTI_VOID")
        if FindBaseplate then
            FindBaseplate.Transparency = 1
        end
    end
    end})

    Tab16:AddDropdown({
    Name = "Change Baseplate Color",
    Default = "Grey",
    Options = {"Grey", "Blue", "Green", "Yellow", "Pink", "Hot Pink", "Purple", "White", "Black", "Orange", "Red"},
    Callback = function(getColor)
        local GetWorkspace = cloneref(game:GetService("Workspace")) or game:GetService("Workspace")
        local PartStorageFolder = GetWorkspace:WaitForChild("PartStorage") or GetWorkspace:FindFirstChild("PartStorage")
        local FindBaseplate = PartStorageFolder:WaitForChild("BASEPLATE_CLONE_ANTI_VOID") or PartStorageFolder:FindFirstChild("BASEPLATE_CLONE_ANTI_VOID")
        if getColor == "Grey" then
            FindBaseplate.BrickColor = BrickColor.new("Grey")
        elseif getColor == "Blue" then
            FindBaseplate.BrickColor = BrickColor.new("Really blue")
        elseif getColor == "Green" then
            FindBaseplate.BrickColor = BrickColor.new("Lime green")
        elseif getColor == "Yellow" then
            FindBaseplate.BrickColor = BrickColor.new("New Yeller")
        elseif getColor == "Pink" then
            FindBaseplate.BrickColor = BrickColor.new("Pink")
        elseif getColor == "Hot Pink" then
            FindBaseplate.BrickColor = BrickColor.new("Hot pink")
        elseif getColor == "Purple" then
            FindBaseplate.BrickColor = BrickColor.new("Royal purple")
        elseif getColor == "White" then
            FindBaseplate.BrickColor = BrickColor.new("White")
        elseif getColor == "Black" then
            FindBaseplate.BrickColor = BrickColor.new("Really black")
        elseif getColor == "Orange" then
            FindBaseplate.BrickColor = BrickColor.new("Deep orange")
        elseif getColor == "Red" then
            FindBaseplate.BrickColor = BrickColor.new("Really red")
        end
    end})

    Tab16:AddToggle({
    Name = "Turn Collision Off/On",
    Default = false,
    Callback = function(CollisionFieldBaseplate)
        local GetWorkspace = cloneref(game:GetService("Workspace")) or game:GetService("Workspace")
        local PartStorageFolder = GetWorkspace:WaitForChild("PartStorage") or GetWorkspace:FindFirstChild("PartStorage")
        local FindBaseplate = PartStorageFolder:WaitForChild("BASEPLATE_CLONE_ANTI_VOID") or PartStorageFolder:FindFirstChild("BASEPLATE_CLONE_ANTI_VOID")

        if CollisionFieldBaseplate then
            local GetWorkspace = cloneref(game:GetService("Workspace")) or game:GetService("Workspace")
            local PartStorageFolder = GetWorkspace:WaitForChild("PartStorage") or GetWorkspace:FindFirstChild("PartStorage")
            local FindBaseplate = PartStorageFolder:WaitForChild("BASEPLATE_CLONE_ANTI_VOID") or PartStorageFolder:FindFirstChild("BASEPLATE_CLONE_ANTI_VOID")
            getgenv().doCollisionField = true
            if getgenv().doCollisionField == true then
                FindBaseplate.CanCollide = false
            end
        else
            local GetWorkspace = cloneref(game:GetService("Workspace")) or game:GetService("Workspace")
            local PartStorageFolder = GetWorkspace:WaitForChild("PartStorage") or GetWorkspace:FindFirstChild("PartStorage")
            local FindBaseplate = PartStorageFolder:WaitForChild("BASEPLATE_CLONE_ANTI_VOID") or PartStorageFolder:FindFirstChild("BASEPLATE_CLONE_ANTI_VOID")
            FindBaseplate.CanCollide = true
            wait()
            getgenv().doCollisionField = false
        if FindBaseplate.CanCollide == false and getgenv().doCollisionField == true then
            getgenv().doCollisionField = false
            wait()
            OrionLib:MakeNotification({
                Name = "[Note]: Read This:",
                Content = "You have disabled CanCollide, we turned off loop.",
                Image = "rbxassetid://4483345998",
                Time = 10
            })
            wait()
            OrionLib:MakeNotification({
                Name = "[OUTPUT]: CanCollide:",
                Content = "CanCollide = false, Loop: OFF",
                Image = "rbxassetid://4483345998",
                Time = 10
            })
            end
        end
    end})

    Tab16:AddParagraph("'random' Picks a random Material for you.")
    wait()
    Tab16:AddDropdown({
    Name = "Material",
    Default = "Air",
    Options = {"Air", "Asphalt", "Basalt", "Brick", "Cardboard", "Carpet", "CeramicTiles", "ClayRoofTiles", "Cobblestone", "Concrete", "CorrodedMetal", "CrackedLava", "DiamondPlate", "Fabric", "Foil", "ForceField", "Glacier", "Glass", "Granite", "Grass", "Ground", "Ice", "LeafyGrass", "Leather", "Limestone", "Marble", "Metal", "Mud", "Neon", "Pavement", "Pebble", "Plaster", "Plastic", "Rock", "RoofShingles", "Rubber", "Salt", "Sand", "Sandstone", "Slate", "SmoothPlastic", "Snow", "Water", "Wood", "WoodPlanks,", "random"},
    Callback = function(doBaseplateMaterial)
        local GetWorkspace = cloneref(game:GetService("Workspace")) or game:GetService("Workspace")
        local PartStorageFolder = GetWorkspace:WaitForChild("PartStorage") or GetWorkspace:FindFirstChild("PartStorage")
        local FindBaseplate = PartStorageFolder:WaitForChild("BASEPLATE_CLONE_ANTI_VOID") or PartStorageFolder:FindFirstChild("BASEPLATE_CLONE_ANTI_VOID")
        if FindBaseplate.Transparency == 1 and doBaseplateMaterial ~= "random" then
            FindBaseplate.Transparency = 0
            wait()
            FindBaseplate.Material = Enum.Material[doBaseplateMaterial]
        elseif FindBaseplate.Transparency == 0 and doBaseplateMaterial ~= "random" then
            FindBaseplate.Material = Enum.Material[doBaseplateMaterial]
        end
        wait()
        if doBaseplateMaterial == "random" then
            local GetWorkspace = cloneref(game:GetService("Workspace")) or game:GetService("Workspace")
            local PartStorageFolder = GetWorkspace:WaitForChild("PartStorage") or GetWorkspace:FindFirstChild("PartStorage")
            local FindBaseplate = PartStorageFolder:WaitForChild("BASEPLATE_CLONE_ANTI_VOID") or PartStorageFolder:FindFirstChild("BASEPLATE_CLONE_ANTI_VOID")

            local materials = {
                Enum.Material.Plastic,
                Enum.Material.Wood,
                Enum.Material.Slate,
                Enum.Material.Concrete,
                Enum.Material.CorrodedMetal,
                Enum.Material.DiamondPlate,
                Enum.Material.Foil,
                Enum.Material.Grass,
                Enum.Material.Ice,
                Enum.Material.Marble,
                Enum.Material.Granite,
                Enum.Material.Brick,
                Enum.Material.Pebble,
                Enum.Material.Sand,
                Enum.Material.Fabric,
                Enum.Material.SmoothPlastic,
                Enum.Material.Metal,
                Enum.Material.WoodPlanks,
                Enum.Material.Cobblestone,
                Enum.Material.Neon,
                Enum.Material.Glass,
                Enum.Material.Asphalt,
                Enum.Material.LeafyGrass,
                Enum.Material.Snow,
                Enum.Material.Mud,
                Enum.Material.Basalt,
                Enum.Material.Ground,
                Enum.Material.CrackedLava,
                Enum.Material.Salt,
                Enum.Material.Limestone,
                Enum.Material.Pavement,
                Enum.Material.ForceField,
                Enum.Material.Air,
            }

            local function setRandomMaterial(part)
                local randomIndex = math.random(1, #materials)
                part.Material = materials[randomIndex]
            end

            setRandomMaterial(FindBaseplate)
        end
    end})
    
    Tab11:AddToggle({
    Name = "Auto Change Booth Text",
    Default = false,
    Callback = function(crazy)
    function getStall()
        for i,v in pairs(game:GetService("Workspace").Stalls:GetChildren()) do
            if v.Player.Value == game:GetService("Players").LocalPlayer then
                return v
            end
        end
    return nil
    end
    
    if crazy then
    wait()
    local Stall = getStall()
    
    if not Stall then
        return OrionLib:MakeNotification({
            Name = "Error: No Booth",
            Content = "You do not own a booth!",
            Image = "rbxassetid://4483345998",
            Time = 10
        })
    end
    
    getgenv().Auto = true
    while getgenv().Auto == true do
    wait()
    local args = {
        [1] = "Zacks Easy Hub [WINNING]!",
        [2] = ""
    }
    
    Stall:WaitForChild("Edit"):FireServer(unpack(args))
    wait()
    local args = {
        [1] = "Join: VJh3kkYzBn",
        [2] = ""
    }
    
    Stall:WaitForChild("Edit"):FireServer(unpack(args))
    wait()
    local args = {
        [1] = "Zacks Easy Hub [WE UP]!",
        [2] = ""
    }
    
    Stall:WaitForChild("Edit"):FireServer(unpack(args))
    wait()
    local args = {
        [1] = "Zacks Easy Hub V5, Automated",
        [2] = ""
    }
    
    Stall:WaitForChild("Edit"):FireServer(unpack(args))
    wait()
    local args = {
        [1] = "Powering Automation | Scripting",
        [2] = ""
    }
    
    Stall:WaitForChild("Edit"):FireServer(unpack(args))
    wait()
    local args = {
        [1] = "Zacks Easy Hub | WE OP!",
        [2] = ""
    }
    
    Stall:WaitForChild("Edit"):FireServer(unpack(args))
    wait()
    local args = {
        [1] = "Zacks Easy Hub | V5-STABLE",
        [2] = ""
    }
    
    Stall:WaitForChild("Edit"):FireServer(unpack(args))
    end
    else
    getgenv().Auto = false
    end
    end})
    
    Tab13:AddParagraph("Type 'stop' (without quotes), to stop flying")
    wait()
    Tab13:AddParagraph("Space = Up | Q = Down")
    wait()
    Tab13:AddTextbox({
    Name = "Hoverboard Fly (FE, WORKING!)",
    Default = "Speed Here",
    TextDisappear = true,
    Callback = function(GetSpeed)
        if tonumber(GetSpeed) then
            local args = {
                [1] = "XHoverboard",
                [2] = "Hoverboard"
            }

            game:GetService("ReplicatedStorage"):WaitForChild("Hoverboard"):FireServer(unpack(args))
            wait(0.5)
            local player = game.Players.LocalPlayer
            local character = player.Character or player.CharacterAdded:Wait()
            local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
            getgenv().flying = false
            getgenv().speed = tonumber(GetSpeed)
            local bodyGyro = nil
            local bodyVelocity = nil

            local function startFly()
                flying = true
                bodyGyro = Instance.new("BodyGyro")
                bodyGyro.MaxTorque = Vector3.new(0, 400000, 0)
                bodyGyro.CFrame = humanoidRootPart.CFrame
                bodyGyro.Parent = humanoidRootPart
                bodyVelocity = Instance.new("BodyVelocity")
                bodyVelocity.MaxForce = Vector3.new(1e4, 1e4, 1e4)
                bodyVelocity.Velocity = Vector3.new(0, 0, 0)
                bodyVelocity.Parent = humanoidRootPart
                character.Humanoid.PlatformStand = true
            end

            local function updateFly()
                if flying then
                    local moveDirection = Vector3.new(0, 0, 0)
                    local camera = workspace.CurrentCamera
                    local lookVector = camera.CFrame.LookVector
                    if game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.W) then
                        moveDirection = moveDirection + lookVector
                    end
                    if game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.S) then
                        moveDirection = moveDirection - lookVector
                    end
                    if game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.A) then
                        moveDirection = moveDirection - camera.CFrame.RightVector
                    end
                    if game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.D) then
                        moveDirection = moveDirection + camera.CFrame.RightVector
                    end
                    if game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.Space) then
                        moveDirection = moveDirection + Vector3.new(0, 1, 0)
                    end
                    if game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.Q) then
                        moveDirection = moveDirection - Vector3.new(0, 1, 0)
                    end
                    if moveDirection.Magnitude > 0 then
                        bodyVelocity.Velocity = moveDirection.Unit * tonumber(getgenv().speed)
                    else
                        bodyVelocity.Velocity = Vector3.new(0, 0, 0)
                    end
                    bodyGyro.CFrame = CFrame.new(humanoidRootPart.Position, humanoidRootPart.Position + Vector3.new(lookVector.X, 0, lookVector.Z))
                end
            end

            game:GetService("RunService").RenderStepped:Connect(function()
                if flying then
                    updateFly()
                end
            end)

            startFly()
            wait(0.1)
            local ReplicatedStorage = cloneref(game:GetService("ReplicatedStorage")) or game:GetService("ReplicatedStorage")
            local RunService = cloneref(game:GetService("RunService"))

            ReplicatedStorage:WaitForChild("StopAction").Parent = RunService
        elseif tostring(GetSpeed) or GetSpeed == "stop" then
            local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
            local RunService = cloneref(game:GetService("RunService"))
            local ReplicatedStorage = cloneref(game:GetService("ReplicatedStorage")) or game:GetService("ReplicatedStorage")
            RunService:FindFirstChild("StopAction").Parent = ReplicatedStorage
            wait(0.3)
            local LocalPlayer = Players.LocalPlayer
            local args = {
                [1] = tonumber(LocalPlayer.UserId)
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
            wait(0.3)
            getgenv().flyLoop = false
            wait(0.5)
            repeat wait() until getgenv().flyLoop == false
            wait()
            local Players = game:GetService("Players")
            local player = Players.LocalPlayer
            local character = player.Character or player.CharacterAdded:Wait()
            local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

            local function stopFly()
                if humanoidRootPart:FindFirstChild("BodyGyro") then
                    humanoidRootPart.BodyGyro:Destroy()
                end
                if humanoidRootPart:FindFirstChild("BodyVelocity") then
                    humanoidRootPart.BodyVelocity:Destroy()
                end
                character.Humanoid.PlatformStand = false
                getgenv().flyLoop = false
            end
            
            stopFly()
        elseif tonumber(GetSpeed) and getgenv().flying == true then
            return getgenv().speed == tonumber(GetSpeed)
        end
    end})
    
    Tab1:AddToggle({
    Name = "Auto Like Player",
    Default = false,
    Callback = function(likeLol)
    if likeLol then
        getgenv().alrLike = true
        while getgenv().alrLike == true do
        wait()
            fireclickdetector(workspace.AvatarUI.LikeButton.ClickDetector)
        end
    else
        getgenv().alrLike = false
    end
    end})
    
    Tab1:AddToggle({
    Name = "Laggy Voice (FE)",
    Default = false,
    Callback = function(voices)
    if voices then
    getgenv().shuffleVoices = true
    while getgenv().shuffleVoices == true do
    wait()
    local args = {
        [1] = "Normal"
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("VEffect"):FireServer(unpack(args))
    wait()
    local args = {
        [1] = "Chorus"
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("VEffect"):FireServer(unpack(args))
    wait()
    local args = {
        [1] = "Darling"
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("VEffect"):FireServer(unpack(args))
    wait()
    local args = {
        [1] = "Demon"
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("VEffect"):FireServer(unpack(args))
    wait()
    local args = {
        [1] = "Elf"
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("VEffect"):FireServer(unpack(args))
    wait()
    local args = {
        [1] = "Fun"
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("VEffect"):FireServer(unpack(args))
    wait()
    local args = {
        [1] = "Low"
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("VEffect"):FireServer(unpack(args))
    wait()
    local args = {
        [1] = "Reverb"
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("VEffect"):FireServer(unpack(args))
    wait()
    local args = {
        [1] = "Normal"
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("VEffect"):FireServer(unpack(args))
    end
    else
    getgenv().shuffleVoices = false
    end
    end})
    
    Tab1:AddToggle({
    Name = "Mute Yourself",
    Default = false,
    Callback = function(muteYou)
    if muteYou then
        getgenv().muting = true
        if getgenv().muting == true then
            game:GetService("Players").LocalPlayer.AudioDeviceInput.Muted = true
        end
    else
        getgenv().muting = false
        wait()
        game:GetService("Players").LocalPlayer.AudioDeviceInput.Muted = false
    end
    end})
    
    Tab13:AddToggle({
    Name = "Hoverboard Spam (FE)",
    Default = false,
    Callback = function(hoverBoard)
    if hoverBoard then
    getgenv().HoverboardRide = true
    while getgenv().HoverboardRide == true do
    wait()
    local args = {
        [1] = "XHoverboard",
        [2] = "Hoverboard"
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("Hoverboard"):FireServer(unpack(args))
    wait()
    local args = {
        [1] = tonumber(game.Players.LocalPlayer.UserId)
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
    end
    else
    getgenv().HoverboardRide = false
    wait(1)
    local args = {
        [1] = tonumber(game.Players.LocalPlayer.UserId)
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
    wait(1)
    local args = {
        [1] = tonumber(game.Players.LocalPlayer.UserId)
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
    wait()
    local args = {
        [1] = tonumber(game.Players.LocalPlayer.UserId)
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
    wait()
    local args = {
        [1] = tonumber(game.Players.LocalPlayer.UserId)
    }
        
    game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
    end
    end})
    
    Tab17:AddButton({
    Name = "Send Fake Warnings (FREE! + FE!)",
    Callback = function()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local players = Players:GetChildren()
        local ReplicatedStorage = cloneref(game:GetService("ReplicatedStorage")) or game:GetService("ReplicatedStorage")
        local remoteEvent = ReplicatedStorage:WaitForChild("Notification"):WaitForChild("PlayerSelectedEvent")
        
        getgenv().ownerWhitelist = getgenv().ownerWhitelist or {}
        getgenv().getBasicTable = getgenv().getBasicTable or {}
        
        local function isInBasicTable(playerName)
            return getgenv().getBasicTable[playerName] ~= nil
        end
        
        local function isInOwnerWhitelist(playerName)
            return table.find(getgenv().ownerWhitelist, playerName) ~= nil
        end
        
        for _, player in pairs(players) do
            if player ~= Players.LocalPlayer then
                local playerName = tostring(player.Name)
        
                if not isInBasicTable(playerName) and not isInOwnerWhitelist(playerName) then
                    local args = {
                        [1] = playerName
                    }
        
                    remoteEvent:FireServer(unpack(args))
                end
            end
        end
    end})
    
    Tab17:AddToggle({
    Name = "Loop Send All Warnings",
    Default = false,
    Callback = function(getSlowMethod)
    if getSlowMethod then
        getgenv().GetNonMassiveConnection = true
        while getgenv().GetNonMassiveConnection == true do
            wait(0.8)
        
            local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
            local players = Players:GetChildren()
            local ReplicatedStorage = cloneref(game:GetService("ReplicatedStorage")) or game:GetService("ReplicatedStorage")
            local remoteEvent = ReplicatedStorage:WaitForChild("Notification"):WaitForChild("PlayerSelectedEvent")
            
            getgenv().ownerWhitelist = getgenv().ownerWhitelist or {}
            getgenv().getBasicTable = getgenv().getBasicTable or {}
            
            local function isInBasicTable(playerName)
                return getgenv().getBasicTable[playerName] ~= nil
            end
            
            local function isInOwnerWhitelist(playerName)
                return table.find(getgenv().ownerWhitelist, playerName) ~= nil
            end
            
            for _, player in pairs(players) do
                if player ~= Players.LocalPlayer then
                    local playerName = tostring(player.Name)
            
                    if not isInBasicTable(playerName) and not isInOwnerWhitelist(playerName) then
                        local args = {
                            [1] = playerName
                        }
            
                        remoteEvent:FireServer(unpack(args))
                    end
                end
            end
        end
    else
        getgenv().GetNonMassiveConnection = false
    end
    end})

    Tab17:AddToggle({
    Name = "Loop Send All Warnings (Fast Method, CAN Lag)",
    Default = false,
    Callback = function(loopWarn)
        if loopWarn then
            getgenv().getSendAllWarningsConnection = true
            while getgenv().getSendAllWarningsConnection == true do
                wait(0.2)
            
                local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
                local players = Players:GetChildren()
                local ReplicatedStorage = cloneref(game:GetService("ReplicatedStorage")) or game:GetService("ReplicatedStorage")
                local remoteEvent = ReplicatedStorage:WaitForChild("Notification"):WaitForChild("PlayerSelectedEvent")
                
                getgenv().ownerWhitelist = getgenv().ownerWhitelist or {}
                getgenv().getBasicTable = getgenv().getBasicTable or {}
                
                local function isInBasicTable(playerName)
                    return getgenv().getBasicTable[playerName] ~= nil
                end
                
                local function isInOwnerWhitelist(playerName)
                    return table.find(getgenv().ownerWhitelist, playerName) ~= nil
                end
                
                for _, player in pairs(players) do
                    if player ~= Players.LocalPlayer then
                        local playerName = tostring(player.Name)
                
                        if not isInBasicTable(playerName) and not isInOwnerWhitelist(playerName) then
                            local args = {
                                [1] = playerName
                            }
                
                            remoteEvent:FireServer(unpack(args))
                        end
                    end
                end
            end
        else
            getgenv().getSendAllWarningsConnection = false
            wait(1.5)
            for i = 1, 1000 do
                getgenv().getSendAllWarningsConnection = false
            end
        end
    end})

    print("DEBUG_MEMORY | False | Set BYT3_2FRAY? | True | Set OpCode? | True")
    task.wait()
    Tab17:AddTextbox({
    Name = "Send Someone A Warning",
    Default = "User Or Display",
    TextDisappear = true,
    Callback = function(warnPlr)
        getgenv().ownerWhitelist = getgenv().ownerWhitelist or {}
        getgenv().getBasicTable = getgenv().getBasicTable or {}
        
        local function isInBasicTable(playerName)
            return getgenv().getBasicTable[playerName] ~= nil
        end
        
        local function isInOwnerWhitelist(playerName)
            return table.find(getgenv().ownerWhitelist, playerName) ~= nil
        end
        
        local thisPlrWarned = findplr(warnPlr)
        if thisPlrWarned ~= game.Players.LocalPlayer and (not isInBasicTable(thisPlrWarned.Name) and not isInOwnerWhitelist(thisPlrWarned.Name)) then
            local args = {
                [1] = tostring(thisPlrWarned.Name)
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("Notification"):WaitForChild("PlayerSelectedEvent"):FireServer(unpack(args))
        elseif getgenv().ownerWhitelist[thisPlrWarned.Name] then
            return OrionLib:MakeNotification({
                Name = "[ERROR]: -500",
                Content = "Player is an owner!",
                Image = "rbxassetid://4483345998",
                Time = 10
            })
        elseif not thisPlrWarned then
            return OrionLib:MakeNotification({
                Name = "[ERROR]: 0",
                Content = tostring(warnPlr)..", does not exist!",
                Image = "rbxassetid://4483345998",
                Time = 10
            })
        end
    end})
    
    Tab5:AddButton({
    Name = "Free Tools (FE)",
    Callback = function()
        local args = {
            [1] = "Fit"
        }
            
        game:GetService("ReplicatedStorage"):WaitForChild("Additional"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
        local args = {
            [1] = "Wand"
        }
            
        game:GetService("ReplicatedStorage"):WaitForChild("Additional"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
        local args = {
            [1] = "Horrible"
        }
            
        game:GetService("ReplicatedStorage"):WaitForChild("Additional"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
        local args = {
            [1] = "Doll"
        }
            
        game:GetService("ReplicatedStorage"):WaitForChild("Additional"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
        local args = {
            [1] = "Burrito"
        }
            
        game:GetService("ReplicatedStorage"):WaitForChild("Additional"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
        local args = {
            [1] = "Bloxy"
        }
            
        game:GetService("ReplicatedStorage"):WaitForChild("Additional"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
        local args = {
            [1] = "Bloxilicious"
        }
            
        game:GetService("ReplicatedStorage"):WaitForChild("Additional"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
        local args = {
            [1] = "Sauce"
        }
            
        game:GetService("ReplicatedStorage"):WaitForChild("Additional"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
        local args = {
            [1] = "Pistol"
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("Additional"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
        local args = {
            [1] = "Spray"
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("Additional"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
        local args = {
            [1] = "Torch"
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("Additional"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
        local args = {
            [1] = "Wand"
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("Additional"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
        local args = {
            [1] = "Camera"
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("Additional"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
    end})
    
    Tab13:AddToggle({
    Name = "Weird FOV Zoom",
    Default = false,
    Callback = function(weirdFOV)
    if weirdFOV then
        getgenv().FOVZoomSliding = true
        while getgenv().FOVZoomSliding == true do
        wait()
        local player = game.Players.LocalPlayer
        local camera = game.Workspace.CurrentCamera
        local startFOV = 70
        local endFOV = 120
        local duration = 3
        local smoothness = 0.02
    
        local function smoothFOV()
            for elapsedTime = 0, duration, smoothness do
                local alpha = math.clamp(elapsedTime / duration, 0, 1)
                camera.FieldOfView = startFOV + (endFOV - startFOV) * alpha
                wait(smoothness)
            end
        startFOV, endFOV = endFOV, startFOV
        end
    
        smoothFOV()
    end
    else
        getgenv().FOVZoomSliding = false
        wait(1)
        game:GetService("Workspace").CurrentCamera.FieldOfView = 70
        wait(1)
        game:GetService("Workspace").CurrentCamera.FieldOfView = 70
        wait(1)
        game:GetService("Workspace").CurrentCamera.FieldOfView = 70
        wait(1.3)
        for i = 1, 7 do
            game:GetService("Workspace").CurrentCamera.FieldOfView = 70
        end
    end
    end})
    
    Tab13:AddToggle({
    Name = "Spam All Tools (FE)",
    Default = false,
    Callback = function(spamTools)
    if spamTools then
        getgenv().ToolSpam = true
        while getgenv().ToolSpam == true do
        wait()
        local args = {
            [1] = "ThrowBrick",
            [2] = "Brick"
        }
    
        game:GetService("ReplicatedStorage"):WaitForChild("Throw"):FireServer(unpack(args))
        wait()
        local args = {
            [1] = "ThrowDrink",
            [2] = "Drink"
        }
    
        game:GetService("ReplicatedStorage"):WaitForChild("Throw"):FireServer(unpack(args))
        wait()
        local args = {
            [1] = "ThrowPaperBanknote",
            [2] = "Paper"
        }
    
        game:GetService("ReplicatedStorage"):WaitForChild("Throw"):FireServer(unpack(args))
        wait()
        local args = {
            [1] = "XBag",
            [2] = "Bag"
        }
    
        game:GetService("ReplicatedStorage"):WaitForChild("Drink"):FireServer(unpack(args))
        wait()
        local args = {
            [1] = "XBagZ",
            [2] = "Suitbag"
        }
    
        game:GetService("ReplicatedStorage"):WaitForChild("Drink"):FireServer(unpack(args))
        wait()
        local args = {
            [1] = "XBurger",
            [2] = "Burger"
        }
    
        game:GetService("ReplicatedStorage"):WaitForChild("Drink"):FireServer(unpack(args))
        wait()
        local args = {
            [1] = "XPhone",
            [2] = "Baddiephone"
        }
    
        game:GetService("ReplicatedStorage"):WaitForChild("Drink"):FireServer(unpack(args))
        wait()
        local args = {
            [1] = "XTea",
            [2] = "Tea"
        }
    
        game:GetService("ReplicatedStorage"):WaitForChild("Drink"):FireServer(unpack(args))
        wait()
        local args = {
            [1] = tonumber(game.Players.LocalPlayer.UserId)
        }
    
        game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
    end
    else
        getgenv().ToolSpam = false
        wait(1)
        local args = {
            [1] = tonumber(game.Players.LocalPlayer.UserId)
        }
            
        game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
        wait(0.3)
        local args = {
            [1] = tonumber(game.Players.LocalPlayer.UserId)
        }
            
        game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
    end
    end})

    Tab13:AddToggle({
    Name = "Anti In-Game Animations",
    Default = false,
    Callback = function(getAntiAnim)
        if getAntiAnim then
            getgenv().doAntiEmoting = true
            while getgenv().doAntiEmoting == true do
            wait()
                local args = {
                    [1] = tonumber(game.Players.LocalPlayer.UserId)
                }
                
                game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
            end
        else
            getgenv().doAntiEmoting = false
            wait()
            getgenv().doAntiEmoting = false
        end
    end})
    
    Tab13:AddToggle({
    Name = "Spam All Tools (VIP Dances, FE)",
    Default = false,
    Callback = function(VIPSpamTools)
    if game:GetService("MarketplaceService"):UserOwnsGamePassAsync(game.Players.LocalPlayer.UserId, tonumber(26610878)) then
        print("User Owns GamePass, Continue.")
    else
        getgenv().RunVIPSpam = false
        return OrionLib:MakeNotification({
            Name = "Error: Not Owned",
            Content = "You do not own the VIP Dance GamePass.",
            Image = "rbxassetid://4483345998",
            Time = 10
        })
    end
    
    if VIPSpamTools then
        getgenv().RunVIPSpam = true
        while getgenv().RunVIPSpam == true do
        wait()
        local args = {
            [1] = "XVip"
        }
    
        game:GetService("ReplicatedStorage"):WaitForChild("VipAction"):FireServer(unpack(args))
        wait()
        local args = {
            [1] = tonumber(game.Players.LocalPlayer.UserId)
        }
    
        game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
        wait()
        local args = {
            [1] = "XVipV"
        }
    
        game:GetService("ReplicatedStorage"):WaitForChild("VipAction"):FireServer(unpack(args))
        wait()
        local args = {
            [1] = tonumber(game.Players.LocalPlayer.UserId)
        }
    
        game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
        wait()
        local args = {
            [1] = "XVipW"
        }
    
        game:GetService("ReplicatedStorage"):WaitForChild("VipAction"):FireServer(unpack(args))
        wait()
        local args = {
            [1] = tonumber(game.Players.LocalPlayer.UserId)
        }
    
        game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
        wait()
        local args = {
            [1] = "XVipX"
        }
    
        game:GetService("ReplicatedStorage"):WaitForChild("VipAction"):FireServer(unpack(args))
        wait()
        local args = {
            [1] = tonumber(game.Players.LocalPlayer.UserId)
        }
    
        game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
        wait()
        local args = {
            [1] = "XVipY"
        }
    
        game:GetService("ReplicatedStorage"):WaitForChild("VipAction"):FireServer(unpack(args))
        wait()
        local args = {
            [1] = tonumber(game.Players.LocalPlayer.UserId)
        }
    
        game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
        wait()
        local args = {
            [1] = "XVipZ"
        }
    
        game:GetService("ReplicatedStorage"):WaitForChild("VipAction"):FireServer(unpack(args))
        wait()
        local args = {
            [1] = tonumber(game.Players.LocalPlayer.UserId)
        }
    
        game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
    end
    else
        getgenv().RunVIPSpam = false
    end
    end})
    
    Tab13:AddToggle({
    Name = "Flicker Animations (FE)",
    Default = false,
    Callback = function(AnimFlick)
    if AnimFlick then
        getgenv().EmoteFlickering = true
        while getgenv().EmoteFlickering == true do
        wait()
            local args = {
                [1] = "DPunchingZ"
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("Action"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = tonumber(game.Players.LocalPlayer.UserId)
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = "DPunchingY"
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("Action"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = tonumber(game.Players.LocalPlayer.UserId)
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = "DPunchingX"
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("Action"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = tonumber(game.Players.LocalPlayer.UserId)
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = "DPunchingW"
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("Action"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = tonumber(game.Players.LocalPlayer.UserId)
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = "DPunchingV"
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("Action"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = tonumber(game.Players.LocalPlayer.UserId)
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = "DPunchingU"
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("Action"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = tonumber(game.Players.LocalPlayer.UserId)
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = "AYeet"
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("Action"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = tonumber(game.Players.LocalPlayer.UserId)
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = "AYClap"
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("Action"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = tonumber(game.Players.LocalPlayer.UserId)
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = "ATap"
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("Action"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = tonumber(game.Players.LocalPlayer.UserId)
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = "AStomp"
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("Action"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = tonumber(game.Players.LocalPlayer.UserId)
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = "ASplits"
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("Action"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = tonumber(game.Players.LocalPlayer.UserId)
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = "ASitZ"
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("Action"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = tonumber(game.Players.LocalPlayer.UserId)
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = "ASitY"
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("Action"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = tonumber(game.Players.LocalPlayer.UserId)
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = "ASitX"
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("Action"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = tonumber(game.Players.LocalPlayer.UserId)
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = "ASitW"
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("Action"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = tonumber(game.Players.LocalPlayer.UserId)
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = "ASit"
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("Action"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = tonumber(game.Players.LocalPlayer.UserId)
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = "ARun"
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("Action"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = tonumber(game.Players.LocalPlayer.UserId)
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = "ALog"
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("Action"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = tonumber(game.Players.LocalPlayer.UserId)
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = "ALaughZ"
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("Action"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = tonumber(game.Players.LocalPlayer.UserId)
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = "ALaugh"
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("Action"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = tonumber(game.Players.LocalPlayer.UserId)
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = "AJumpscareZ"
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("Action"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = tonumber(game.Players.LocalPlayer.UserId)
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = "AJumpscare"
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("Action"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = tonumber(game.Players.LocalPlayer.UserId)
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = "AHandstandZ"
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("Action"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = tonumber(game.Players.LocalPlayer.UserId)
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = "AHandstand"
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("Action"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = tonumber(game.Players.LocalPlayer.UserId)
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = "ADie"
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("Action"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = tonumber(game.Players.LocalPlayer.UserId)
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = "ADetachZ"
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("Action"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = tonumber(game.Players.LocalPlayer.UserId)
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = "ADetach"
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("Action"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = tonumber(game.Players.LocalPlayer.UserId)
            }
        
            game:GetService("ReplicatedStorage"):WaitForChild("StopAction"):FireServer(unpack(args))
        end
    else
        getgenv().EmoteFlickering = false
    end
    end})
    
    Tab1:AddToggle({
    Name = "Auto Dislike Player",
    Default = false,
    Callback = function(dislikeButton)
    if dislikeButton then
        getgenv().Disliking = true
        while getgenv().Disliking == true do
        wait()
            fireclickdetector(workspace.AvatarUI.DislikeButton.ClickDetector)
        end
    else
        getgenv().Disliking = false
    end
    end})
    
    Tab4:AddButton({
    Name = "Chat Bypass (UserCreation Bypass)",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/1price/usercreation/main/UserCreation.lua", true))()
    end})
    
    Tab4:AddButton({
    Name = "Fake Chat GUI",
    Callback = function()
        loadstring(game:HttpGet(('https://raw.githubusercontent.com/EnterpriseExperience/FakeChatGUI/main/LmaoBruh.lua')))()
    end})
    wait(0.3)
    getgenv().hasLoadedAntiLog = false
    if getgenv().hasLoadedAntiLog == false then
        loadstring(game:HttpGet("https://raw.githubusercontent.com/vqmpjayZ/More-Scripts/main/Anti-Chat-Logger", true))()
        getgenv().hasLoadedAntiLog = true
    else
        warn("You have already loaded AntiChat Logger!")
    end
    wait(0.5)
    Tab4:AddTextbox({
    Name = "Chat Bypass Input",
    Default = "Word To Bypass",
    TextDisappear = true,
    Callback = function(saveInputFilter)
    local TextChatService = cloneref(game:GetService("TextChatService")) or game:GetService("TextChatService")
    local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    local chat = TextChatService.ChatInputBarConfiguration.TargetTextChannel

    local letters = {
        set1 = {
            ["a"] = "ẳ",
            ["b"] = "ɓ",
            ["c"] = "ㄈ",
            ["d"] = "ȡ",
            ["e"] = "ȇ",
            ["f"] = "ӻ",
            ["g"] = "ɠ",
            ["h"] = "ȟ",
            ["i"] = "׀",
            ["j"] = "ǰ",
            ["k"] = "ҟ",
            ["l"] = "ȴ",
            ["m"] = "ɱ",
            ["n"] = "冂",
            ["o"] = "ό",
            ["p"] = "ᵽ",
            ["q"] = "ԛ",
            ["r"] = "ŗ",
            ["s"] = "ȿ",
            ["t"] = "丅",
            ["u"] = "ȕ",
            ["v"] = "ѵ",
            ["w"] = "ώ",
            ["x"] = "ẍ",
            ["y"] = "ƴ",
            ["z"] = "ȥ",
        }
    }

    local numbers = {
        set1 = {
            ["0"] = "Θ",
            ["1"] = "Ɩ",
            ["2"] = "ƻ",
            ["3"] = "Ʒ",
            ["4"] = "🄅",
            ["5"] = "Ƽ",
            ["6"] = "Ϭ",
            ["7"] = "🄈",
            ["8"] = "Ȣ",
            ["9"] = "Θ",
        }
    }

    local function convert(text)
        local letters_set = letters["set1"]
        local numbers_set = numbers["set1"]
    
        local converted = ""
        for i = 1, #text do
            local char = text:sub(i, i)
            local lower_char = char:lower()
    
            if char:match("%a") then
                if lettersBypass then
                    converted = converted .. char
                else
                    converted = converted .. (letters_set[lower_char] or char)
                end
            elseif char:match("%d") then
                if numbersBypass then
                    converted = converted .. char
                else
                    converted = converted .. (numbers_set[char] or char)
                end
            else
                converted = converted .. char
            end
        end
        return converted
    end
    wait(.2)
    local function sendchat(msg)
        chat:SendAsync(convert(msg))
    end

    sendchat(saveInputFilter)
    end})

    Tab11:AddTextbox({
    Name = "Booth Text Bypass",
    Default = "Enter Text",
    TextDisappear = true,
    Callback = function(enteredTextInput)
        local TextChatService = cloneref(game:GetService("TextChatService")) or game:GetService("TextChatService")
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local chat = TextChatService.ChatInputBarConfiguration.TargetTextChannel

        local letters = {
            set1 = {
                ["a"] = "ẳ",
                ["b"] = "ɓ",
                ["c"] = "ㄈ",
                ["d"] = "ȡ",
                ["e"] = "ȇ",
                ["f"] = "ӻ",
                ["g"] = "ɠ",
                ["h"] = "ȟ",
                ["i"] = "׀",
                ["j"] = "ǰ",
                ["k"] = "ҟ",
                ["l"] = "ȴ",
                ["m"] = "ɱ",
                ["n"] = "冂",
                ["o"] = "ό",
                ["p"] = "ᵽ",
                ["q"] = "ԛ",
                ["r"] = "ŗ",
                ["s"] = "ȿ",
                ["t"] = "丅",
                ["u"] = "ȕ",
                ["v"] = "ѵ",
                ["w"] = "ώ",
                ["x"] = "ẍ",
                ["y"] = "ƴ",
                ["z"] = "ȥ",
            }
        }

        local numbers = {
            set1 = {
                ["0"] = "Θ",
                ["1"] = "Ɩ",
                ["2"] = "ƻ",
                ["3"] = "Ʒ",
                ["4"] = "🄅",
                ["5"] = "Ƽ",
                ["6"] = "Ϭ",
                ["7"] = "🄈",
                ["8"] = "Ȣ",
                ["9"] = "Θ",
            }
        }

        local function convert(text)
            local letters_set = letters["set1"]
            local numbers_set = numbers["set1"]
        
            local converted = ""
            for i = 1, #text do
                local char = text:sub(i, i)
                local lower_char = char:lower()
        
                if char:match("%a") then
                    if lettersBypass then
                        converted = converted .. char
                    else
                        converted = converted .. (letters_set[lower_char] or char)
                    end
                elseif char:match("%d") then
                    if numbersBypass then
                        converted = converted .. char
                    else
                        converted = converted .. (numbers_set[char] or char)
                    end
                else
                    converted = converted .. char
                end
            end
            return converted
        end
        wait(.2)
        local function sendchat(msg)
            local TheStall = LocalStall
            local imageIDs = {
                "5600150518",
                "5888213893",
                "15058687074",
                "8614358451",
                "13886197679",
                "8614415035",
                "18768072239",
                "18587094358",
                "5788533331"
            }
            
            local function pickRandomImage()
                local randomIndex = math.random(1, #imageIDs)
                return imageIDs[randomIndex]
            end

            function getStall()
                for i,v in pairs(game:GetService("Workspace").Stalls:GetChildren()) do
                    if v.Player.Value == game:GetService("Players").LocalPlayer then
                        return v
                    end
                end
            return nil
            end

            local Stall = getStall()
            
            if not Stall then
                return OrionLib:MakeNotification({
                    Name = "Error: No Booth",
                    Content = "You do not own a booth!",
                    Image = "rbxassetid://4483345998",
                    Time = 10
                })
            end
            wait()
            local args = {
                [1] = convert(msg),
                [2] = tostring(pickRandomImage())
            }
            
            Stall:WaitForChild("Edit"):FireServer(unpack(args))
        end

        sendchat(enteredTextInput)
    end})

    Tab4:AddButton({
    Name = "Clear Chat Messages",
    Callback = function()
        local TextChatService = cloneref(game:GetService("TextChatService")) or game:GetService("TextChatService")
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local chat = TextChatService.ChatInputBarConfiguration.TargetTextChannel
        
        local function sendchat(msg)
            chat:SendAsync(msg)
        end
        
        local random_number = math.random(1, 8)
        for i = 1, random_number do
            if random_number >= 6 then
                sendchat("")
            else
                sendchat(" . ")
            end
        end
    end})

    -- The NEW 'Character Flicker' is here! People that own the 500 Robux 'thi' (Admin GamePass) will now be able to spam in-game admin functions!
    
    Tab2:AddToggle({
    Name = "(FE) Character Flicker",
    Default = false,
    Callback = function(Flick)
    if game:GetService("MarketplaceService"):UserOwnsGamePassAsync(game.Players.LocalPlayer.UserId, tonumber(28828491)) then
        print("Player owns GamePass, continue.")
    else
        getgenv().CharFlick = false
        return OrionLib:MakeNotification({
            Name = "Error: Not Owned",
            Content = "You do not own the Admin GamePass!",
            Image = "rbxassetid://4483345998",
            Time = 10
        })
    end
    
    if Flick then
        getgenv().CharFlick = true
        while getgenv().CharFlick == true do
        wait()
            local args = {
                [1] = "ARegular",
                [2] = "Regular"
            }
    
            game:GetService("ReplicatedStorage"):WaitForChild("Admin"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = "Flat",
                [2] = "Flat"
            }
    
            game:GetService("ReplicatedStorage"):WaitForChild("Admin"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = "Huge",
                [2] = "Huge"
            }
    
            game:GetService("ReplicatedStorage"):WaitForChild("Admin"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = "Jump",
                [2] = "Jump"
            }
    
            game:GetService("ReplicatedStorage"):WaitForChild("Admin"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = "Mini",
                [2] = "Mini"
            }
    
            game:GetService("ReplicatedStorage"):WaitForChild("Admin"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = "Squash",
                [2] = "Squash"
            }
    
            game:GetService("ReplicatedStorage"):WaitForChild("Admin"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = "Tall",
                [2] = "Tall"
            }
    
            game:GetService("ReplicatedStorage"):WaitForChild("Admin"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = "Wide",
                [2] = "Wide"
            }
    
            game:GetService("ReplicatedStorage"):WaitForChild("Admin"):FireServer(unpack(args))
            wait()
            local args = {
                [1] = "ARegular",
                [2] = "Regular"
            }
    
            game:GetService("ReplicatedStorage"):WaitForChild("Admin"):FireServer(unpack(args))
        end
    else
        getgenv().CharFlick = false
        wait(1)
        local args = {
            [1] = "ARegular",
            [2] = "Regular"
        }

        game:GetService("ReplicatedStorage"):WaitForChild("Admin"):FireServer(unpack(args))
        wait(0.2)
        local args = {
            [1] = tostring(game.Players.LocalPlayer.Name)
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("Notification"):WaitForChild("ModifyUserEvent"):FireServer(unpack(args))
        wait(.2)
        game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid").Health = 0
    end
    end})
    wait()
    print("Loading Connection Manager... :[Waiting On Response]:")
    wait(.3)
    local startEvent = Instance.new("BindableEvent")
    startEvent.Name = "ConnectEvent"
    startEvent.Parent = game:GetService("ReplicatedStorage")
    wait(.1)
    local disconnectEvent = Instance.new("BindableEvent")
    disconnectEvent.Name = "DisconnectEvent"
    disconnectEvent.Parent = game:GetService("ReplicatedStorage")
    wait(0.3)
    if startEvent and disconnectEvent then
        print("Loaded Connection Manager! -[200 : Success]-")
    else
        warn("UNABLE TO LOAD CONNECTION MANAGER, BAD_REQUESTED_RESPONSE")
    end
    wait()
    --[[if not game:GetService("ReplicatedStorage"):FindFirstChild("Target_Player") then
        local remoteEvent = Instance.new("RemoteEvent")
        remoteEvent.Name = "Target_Player"
        remoteEvent.Parent = game:GetService("ReplicatedStorage")
    end
    
    local remoteEvent = game:GetService("ReplicatedStorage"):FindFirstChild("Target_Player")
    
    wait(0.1)
    
    getgenv().executedPlayers = getgenv().executedPlayers or {}
    
    local function trackPlayerExecution(action)
        local player = game.Players.LocalPlayer
        if not getgenv().executedPlayers[player.Name] then
            getgenv().executedPlayers[player.Name] = true
            if action == "kill" then
                remoteEvent:FireClient(player, "kill")
            end
        else
            remoteEvent:FireClient(player, "kill")
        end
    end
    
    remoteEvent.OnClientEvent:Connect(function(action)
        if action == "kill" then
            trackPlayerExecution("kill")
        end
    end)--]]

    --[[Tab2:AddParagraph("The reason this bang is better, btw, read below:")
    wait()
    Tab2:AddParagraph("It has: anti-sit, and auto-noclip, and auto-jump")
    wait()
    Tab2:AddParagraph("So this will make it more efficient at being bypassed.")
    wait()
    Tab2:AddParagraph("Type 'stop' to stop banging the player.")
    wait()
    Tab2:AddTextbox({
    Name = "Bang Player (Upgraded)",
    Default = "User Here",
    TextDisappear = true,
    Callback = function(inputTheUser)
        local bruhGetUserName = findplr(inputTheUser)
        local speedInput = tonumber(getgenv().doBangSpeed)

        function noSitFunc()
            wait()
            local Players = cloneref(game:GetService("Players")) or game:GetService("Players")

            getgenv().stopTheseConnections = true
            while getgenv().stopTheseConnections == true do
            wait()
                if Players.LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid").Sit then
                    Players.LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid").Sit = false
                    wait()
                    Players.LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid").Sit = false
                    wait()
                    local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
                    local speaker = Players.LocalPlayer
                    local getChar = speaker.Character or speaker.CharacterAdded:Wait()
                    wait()
                    for i, v in pairs(getChar:GetDescendants()) do
                        if v:IsA("BasePart") then
                            v.CanCollide = false
                        end
                    end
                end
            end
        end

        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local speaker = Players.LocalPlayer
        local getChar = speaker.Character or speaker.CharacterAdded:Wait()

        for i, v in pairs(getChar:GetDescendants()) do
			if v:IsA("BasePart") then
				v.CanCollide = false
			end
		end

        function getTorso(x)
            local Players = cloneref(game:GetService("Players")) or game:GetService("Players")

            x = x or Players.LocalPlayer.Character
            return x:FindFirstChild("Torso") or x:FindFirstChild("UpperTorso") or x:FindFirstChild("LowerTorso") or x:FindFirstChild("HumanoidRootPart")
        end

        function getRoot(char)
            local rootPart = char:FindFirstChild('HumanoidRootPart') or char:FindFirstChild('Torso') or char:FindFirstChild('UpperTorso')
            return rootPart
        end

        function getHumanoid(char)
            local humanoid = char:FindFirstChildWhichIsA('Humanoid') or char:FindFirstChild('Humanoid') or char:FindFirstChildOfClass('Humanoid') or char:WaitForChild('Humanoid')
            return humanoid
        end

        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local speaker = Players.LocalPlayer
        local Character = speaker.Character or speaker.CharacterAdded:Wait()

        function r15(plr)
            if plr.Character:FindFirstChildOfClass('Humanoid').RigType == Enum.HumanoidRigType.R15 then
                return true
            end
        end

        local RunService = cloneref(game:GetService("RunService")) or game:GetService("RunService")
        local humanoid = getHumanoid(Character)

        bangAnim = Instance.new("Animation")
        bangAnim.Name = "INSTANCE_ANIM_R15"
        bangAnim.AnimationId = not r15(speaker) and "rbxassetid://148840371" or "rbxassetid://5918726674"
        bang = humanoid:LoadAnimation(bangAnim)
        bang:Play(0.1, 1, 1)
        bang:AdjustSpeed(5)
        humanoid.Died:Connect(function()
            bang:Stop()
            bangAnim:Destroy()
        end)
		local bangplr = bruhGetUserName
		local bangOffet = CFrame.new(0, 0, 1.1)
        function retrieveBangLoop()
		getgenv().bangLoop = true
            while getgenv().bangLoop == true do
            wait()
                local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
                local speaker = Players.LocalPlayer
                local Character = speaker.Character or speaker.CharacterAdded:Wait()
                local otherRoot = getTorso(bangplr.Character)
                getRoot(speaker.Character).CFrame = otherRoot.CFrame * bangOffet
            end
        end
        if inputTheUser == "stop" then
            local player = game.Players.LocalPlayer
            local character = player.Character or player.CharacterAdded:Wait()

            local humanoid = character:FindFirstChildWhichIsA("Humanoid")

            for _, track in ipairs(humanoid:GetPlayingAnimationTracks()) do
                if track.Name == "INSTANCE_ANIM_R15" then
                    track:Stop()
                    wait()
                    track:Destroy()
                end
            end
            wait()
            getgenv().bangLoop = false
        end
    end})

    Tab2:AddTextbox({
    Name = "Change Bang Speed",
    Default = "Speed",
    TextDisappear = true,
    Callback = function(getSpeedInput)
    local bangSpeedBruh = tonumber(getSpeedInput)

    function getHumanoid(char)
        local humanoid = char:FindFirstChildWhichIsA('Humanoid') or char:FindFirstChild('Humanoid') or char:FindFirstChildOfClass('Humanoid') or char:WaitForChild('Humanoid')
        return humanoid
    end

    function getRoot(char)
        local rootPart = char:FindFirstChild('HumanoidRootPart') or char:FindFirstChild('Torso') or char:FindFirstChild('UpperTorso')
        return rootPart
    end

    local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
    local speaker = Players.LocalPlayer
    local Character = speaker.Character or speaker.CharacterAdded:Wait()
    
    getgenv().doBangSpeed = bangSpeedBruh
    wait()
    local getBangSpeed = tonumber(getgenv().doBangSpeed)
        if getHumanoid(Character) and getRoot(Character) and tonumber(getBangSpeed) then
            for i, v in pairs(Character:GetDescendants()) do
                if Character:FindFirstChildOfClass("Humanoid") then
                    if v:FindFirstChildOfClass("Animation") or v:FindFirstChild("INSTANCE_ANIM_R15") then
                        v:AdjustSpeed(getBangSpeed)
                    else
                        warn("Animation not found in Humanoid: "..tostring(game.Players.LocalPlayer.Name)..":FindFirstChildWhichIsA('Humanoid') | nil")
                    end
                else
                    warn("Humanoid does not exist in Character: "..tostring(game.Players.LocalPlayer.Name))
                end
            end
        else
            warn("Character does not seem to have loaded properly.")
        end
    end})--]]
    
    local Settings = {
        Keybind = "C"
    }
    
    Tab2:AddButton({
    Name = "Invisible (Keybind Toggle)",
    Callback = function()
    if getgenv().Invis_Loaded == true or Invis_Loaded and not _G.INVIS_DEBUG == true then
        return 
    end
    
    pcall(function() getgenv().Invis_Loaded = true end)
    
    local ScriptStarted = false
    local Transparency = true
    local Keybind = Settings.Keybind
    local NoClip = true
    
    local GetPlayers = cloneref(game:GetService("Players")) or game:GetService("Players")
    local Player = GetPlayers.LocalPlayer
    local RealCharacter = Player.Character or Player.CharacterAdded:Wait()
    
    local IsInvisible = false
    
    RealCharacter.Archivable = true
    local FakeCharacter = RealCharacter:Clone()
    local Part
    Part = Instance.new("Part", workspace)
    Part.Anchored = true
    Part.Size = Vector3.new(200, 1, 200)
    Part.CFrame = CFrame.new(450, 10, 500) -- Works now, as intended
    Part.CanCollide = true
    Part.Name = "TheBaseplate"
    
    FakeCharacter.Parent = workspace
    FakeCharacter.HumanoidRootPart.CFrame = Part.CFrame * CFrame.new(0, 5, 0)
    
    for i, v in pairs(RealCharacter:GetChildren()) do
    if v:IsA("LocalScript") then
      local clone = v:Clone()
      clone.Disabled = true
      clone.Parent = FakeCharacter
    end
    end
    if Transparency then
    for i, v in pairs(FakeCharacter:GetDescendants()) do
      if v:IsA("BasePart") then
          v.Transparency = 0.5
      end
    end
    end
    local CanInvis = true
    function RealCharacterDied()
    CanInvis = false
    RealCharacter:Destroy()
    RealCharacter = Player.Character
    CanInvis = true
    isinvisible = false
    FakeCharacter:Destroy()
    workspace.CurrentCamera.CameraSubject = RealCharacter.Humanoid
    
    RealCharacter.Archivable = true
    FakeCharacter = RealCharacter:Clone()
    Part:Destroy()
    Part = Instance.new("Part", workspace)
    Part.Anchored = true
    Part.Size = Vector3.new(200, 1, 200)
    Part.CFrame = CFrame.new(450, 10, 500)
    Part.CanCollide = true
    Part.Name = "Secondary BasePlate"
    FakeCharacter.Parent = workspace
    FakeCharacter.HumanoidRootPart.CFrame = Part.CFrame * CFrame.new(0, 5, 0)
    
    for i, v in pairs(RealCharacter:GetChildren()) do
      if v:IsA("LocalScript") then
          local clone = v:Clone()
          clone.Disabled = true
          clone.Parent = FakeCharacter
      end
    end
    if Transparency then
      for i, v in pairs(FakeCharacter:GetDescendants()) do
          if v:IsA("BasePart") then
              v.Transparency = 0.8
          end
      end
    end
    RealCharacter.Humanoid.Died:Connect(function()
    getgenv().Invis_Loaded = false
    RealCharacter:Destroy()
    FakeCharacter:Destroy()
    end)
    Player.CharacterAppearanceLoaded:Connect(RealCharacterDied)
    end
    RealCharacter.Humanoid.Died:Connect(function()
    getgenv().Invis_Loaded = false
    RealCharacter:Destroy()
    FakeCharacter:Destroy()
    end)
    Player.CharacterAppearanceLoaded:Connect(RealCharacterDied)
    local PseudoAnchor
    game:GetService("RunService").RenderStepped:Connect(
    function()
      if PseudoAnchor ~= nil then
          PseudoAnchor.CFrame = Part.CFrame * CFrame.new(0, 5, 0)
      end
       if NoClip then
            for i, v in pairs(FakeCharacter:GetDescendants()) do
                if v:IsA("BasePart") then
                    v.CanCollide = false
                end
            end
       end
    end
    )
    
    PseudoAnchor = FakeCharacter.HumanoidRootPart
    local function Invisible()
    if IsInvisible == false then
      local StoredCF = RealCharacter.HumanoidRootPart.CFrame
      RealCharacter.HumanoidRootPart.CFrame = FakeCharacter.HumanoidRootPart.CFrame
      FakeCharacter.HumanoidRootPart.CFrame = StoredCF
      RealCharacter.Humanoid:UnequipTools()
      Player.Character = FakeCharacter
      workspace.CurrentCamera.CameraSubject = FakeCharacter.Humanoid
      PseudoAnchor = RealCharacter.HumanoidRootPart
      for i, v in pairs(FakeCharacter:GetChildren()) do
          if v:IsA("LocalScript") then
              v.Disabled = false
          end
      end

      IsInvisible = true
    else
      local StoredCF = FakeCharacter.HumanoidRootPart.CFrame
      FakeCharacter.HumanoidRootPart.CFrame = RealCharacter.HumanoidRootPart.CFrame
     
      RealCharacter.HumanoidRootPart.CFrame = StoredCF
     
      FakeCharacter.Humanoid:UnequipTools()
      Player.Character = RealCharacter
      workspace.CurrentCamera.CameraSubject = RealCharacter.Humanoid
      PseudoAnchor = FakeCharacter.HumanoidRootPart
      for i, v in pairs(FakeCharacter:GetChildren()) do
          if v:IsA("LocalScript") then
              v.Disabled = true
          end
      end

      IsInvisible = false
    end
    end
    
    game:GetService("UserInputService").InputBegan:Connect(
    function(key, gamep)
      if gamep then
          return
      end
      if key.KeyCode.Name:lower() == Keybind:lower() and CanInvis and RealCharacter and FakeCharacter then
          if RealCharacter:FindFirstChild("HumanoidRootPart") and FakeCharacter:FindFirstChild("HumanoidRootPart") then
              Invisible()
          end
      end
    end
    )
    local Sound = Instance.new("Sound",game:GetService("SoundService"))
    Sound.SoundId = "rbxassetid://232127604"
    Sound:Play()
    --game:GetService("StarterGui"):SetCore("SendNotification",{["Title"] = "Invisible Toggle Loaded",["Text"] = "Press "..Settings.Keybind.." to change visibility.",["Duration"] = 10,["Button1"] = "Okay."})
    end})
    
    -- Do not fuck with this part, this is still a WIP, as it does not work currently, i'll fix it after securing the other functions as working, (some people would lag really hard, so im not to sure on adding this at all.)
    
    --[[Tab2:AddToggle({
    Name = "Flicker Character (FE, Invis Method)",
    Default = false,
    Callback = function(InvisMethod)
    if InvisMethod then
    getgenv().UseInvisMethod = true
    local Player = game:GetService("Players").LocalPlayer
    local RealCharacter = Player.Character or Player.CharacterAdded:Wait()
    local IsInvisible = false
    local FakeCharacter
    local Part
    
    local function CreateBaseplate()
        if not workspace:FindFirstChild("BasePlate") then
            Part = Instance.new("Part")
            Part.Anchored = true
            Part.Size = Vector3.new(200, 1, 200)
            Part.CFrame = CFrame.new(999, 999, 999)
            Part.CanCollide = true
            Part.Name = "BasePlate"
            Part.Parent = workspace
        else
            Part = workspace.BasePlate
        end
    end
    
    local function CreateFakeCharacter()
        if not FakeCharacter then
            RealCharacter.Archivable = true
            FakeCharacter = RealCharacter:Clone()
            FakeCharacter.Parent = workspace
            FakeCharacter.HumanoidRootPart.CFrame = Part.CFrame * CFrame.new(0, 5, 0)
            
            for _, v in pairs(RealCharacter:GetChildren()) do
                if v:IsA("LocalScript") then
                    local clone = v:Clone()
                    clone.Disabled = true
                    clone.Parent = FakeCharacter
                end
            end
            
            for _, v in pairs(FakeCharacter:GetDescendants()) do
                if v:IsA("BasePart") then
                    v.Transparency = 0.5
                end
            end
        end
    end
    
    local function ToggleVisibility()
        if not FakeCharacter or not RealCharacter then
            return
        end
    
        if IsInvisible == false then
            local StoredCF = RealCharacter.HumanoidRootPart.CFrame
            RealCharacter.HumanoidRootPart.CFrame = FakeCharacter.HumanoidRootPart.CFrame
            FakeCharacter.HumanoidRootPart.CFrame = StoredCF
            Player.Character = FakeCharacter
            workspace.CurrentCamera.CameraSubject = FakeCharacter.Humanoid
            IsInvisible = true
        else
            local StoredCF = FakeCharacter.HumanoidRootPart.CFrame
            FakeCharacter.HumanoidRootPart.CFrame = RealCharacter.HumanoidRootPart.CFrame
            RealCharacter.HumanoidRootPart.CFrame = StoredCF
            Player.Character = RealCharacter
            workspace.CurrentCamera.CameraSubject = RealCharacter.Humanoid
            IsInvisible = false
        end
    end
    
    CreateBaseplate()
    CreateFakeCharacter()
    
    while getgenv().UseInvisMethod == true do
        ToggleVisibility()
        wait(0.2)
    end
    else
    getgenv().UseInvisMethod = false
    end
    end})--]]
    
    Tab10:AddButton({
    Name = "TP To Private Room (Ground)",
    Callback = function()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character
        local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart") or Character:FindFirstChild("HumanoidRootPart")
        HumanoidRootPart.CFrame = CFrame.new(4220.82275, 2.76511836, 60.7681046)
    end})
    
    Tab10:AddButton({
    Name = "TP To Room Next To Bathrooms (?)",
    Callback = function()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character
        local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart") or Character:FindFirstChild("HumanoidRootPart")
        HumanoidRootPart.CFrame = CFrame.new(-108.536659, 5.38924313, 135.303314)
    end})
    
    Tab10:AddButton({
    Name = "TP To Bathrooms",
    Callback = function()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character
        local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart") or Character:FindFirstChild("HumanoidRootPart")
        HumanoidRootPart.CFrame = CFrame.new(-72.3955917, 5.09832525, 93.0914459)
    end})
    
    Tab10:AddButton({
    Name = "TP To Chill Spot",
    Callback = function()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character
        local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart") or Character:FindFirstChild("HumanoidRootPart")
        HumanoidRootPart.CFrame = CFrame.new(228.970184, 5.75081444, -21.5613441)
    end})
    
    Tab10:AddButton({
    Name = "TP To Picnic (1)",
    Callback = function()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character
        local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart") or Character:FindFirstChild("HumanoidRootPart")
        HumanoidRootPart.CFrame = CFrame.new(85.846756, 3.61196709, -29.8345909)
    end})
    
    Tab10:AddButton({
    Name = "TP To Picnic (2)",
    Callback = function()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character
        local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart") or Character:FindFirstChild("HumanoidRootPart")
        HumanoidRootPart.CFrame = CFrame.new(76.6581955, 3.61196709, -29.8332996)
    end})
    
    Tab10:AddButton({
    Name = "TP To Stage Mic (1)",
    Callback = function()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character
        local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart") or Character:FindFirstChild("HumanoidRootPart")
        HumanoidRootPart.CFrame = CFrame.new(39.2528572, 7.80023623, -67.7634125)
    end})
    
    Tab10:AddButton({
    Name = "TP To Stage Mic (2)",
    Callback = function()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character
        local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart") or Character:FindFirstChild("HumanoidRootPart")
        HumanoidRootPart.CFrame = CFrame.new(14.8289356, 7.80023623, -67.7656097)
    end})
    
    Tab10:AddButton({
    Name = "TP To Middle Room (Center)",
    Callback = function()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character
        local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart") or Character:FindFirstChild("HumanoidRootPart")
        HumanoidRootPart.CFrame = CFrame.new(70.9464493, 5.62692404, 24.2968006)
    end})
    
    Tab10:AddButton({
    Name = "TP To Booth Rows (Center, Table)",
    Callback = function()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character
        local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart") or Character:FindFirstChild("HumanoidRootPart")
        HumanoidRootPart.CFrame = CFrame.new(26.7397423, 7.81395245, 86.7164536)
    end})
    
    Tab10:AddButton({
    Name = "TP To Tower (Float Up Part)",
    Callback = function()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character
        local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart") or Character:FindFirstChild("HumanoidRootPart")
        HumanoidRootPart.CFrame = CFrame.new(61.3288841, 72.0192184, 215.731613)
    end})
    
    Tab10:AddButton({
    Name = "TP To Tower (Top)",
    Callback = function()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character
        local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart") or Character:FindFirstChild("HumanoidRootPart")
        HumanoidRootPart.CFrame = CFrame.new(63.2298126, 284.407227, 193.529007)
    end})
    
    Tab10:AddButton({
    Name = "TP To Tower (The Very Top)",
    Callback = function()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character
        local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart") or Character:FindFirstChild("HumanoidRootPart")
        HumanoidRootPart.CFrame = CFrame.new(58.0468788, 313.312622, 225.215027)
    end})
    
    Tab10:AddButton({
    Name = "TP To Stall1",
    Callback = function()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character
        local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart") or Character:FindFirstChild("HumanoidRootPart")
        local Workspace = cloneref(game:GetService("Workspace")) or game:GetService("Workspace")
        local Stalls = Workspace:FindFirstChild("Stalls")
        local Stall = Stalls:FindFirstChild("Stall3")
        Character:PivotTo(Stall:GetPivot())
    end})
    
    Tab10:AddButton({
    Name = "TP To Stall2",
    Callback = function()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character
        local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart") or Character:FindFirstChild("HumanoidRootPart")
        local Workspace = cloneref(game:GetService("Workspace")) or game:GetService("Workspace")
        local Stalls = Workspace:FindFirstChild("Stalls")
        local Stall = Stalls:FindFirstChild("Stall2")
        Character:PivotTo(Stall:GetPivot())
    end})
    
    Tab10:AddButton({
    Name = "TP To Stall3",
    Callback = function()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character
        local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart") or Character:FindFirstChild("HumanoidRootPart")
        local Workspace = cloneref(game:GetService("Workspace")) or game:GetService("Workspace")
        local Stalls = Workspace:FindFirstChild("Stalls")
        local Stall = Stalls:FindFirstChild("Stall1")
        Character:PivotTo(Stall:GetPivot())
    end})
    
    Tab10:AddButton({
    Name = "TP To Stall4",
    Callback = function()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character
        local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart") or Character:FindFirstChild("HumanoidRootPart")
        local Workspace = cloneref(game:GetService("Workspace")) or game:GetService("Workspace")
        local Stalls = Workspace:FindFirstChild("Stalls")
        local Stall = Stalls:FindFirstChild("Stall5")
        Character:PivotTo(Stall:GetPivot())
    end})
    
    Tab10:AddButton({
    Name = "TP To Stall5",
    Callback = function()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character
        local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart") or Character:FindFirstChild("HumanoidRootPart")
        local Workspace = cloneref(game:GetService("Workspace")) or game:GetService("Workspace")
        local Stalls = Workspace:FindFirstChild("Stalls")
        local Stall = Stalls:FindFirstChild("Stall4")
        Character:PivotTo(Stall:GetPivot())
    end})
    
    Tab10:AddButton({
    Name = "TP To Donut Shop",
    Callback = function()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character
        local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart") or Character:FindFirstChild("HumanoidRootPart")
        HumanoidRootPart.CFrame = CFrame.new(-80.8301239, 3.1662631, -82.6656799)
    end})
    
    Tab10:AddButton({
    Name = "TP To Donut Shop (Chair 1)",
    Callback = function()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character
        local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart") or Character:FindFirstChild("HumanoidRootPart")
        HumanoidRootPart.CFrame = CFrame.new(-98.4535675, 4.04168415, -96.7826004)
    end})
    
    Tab10:AddButton({
    Name = "TP To Donut Shop (Chair 2)",
    Callback = function()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character
        local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart") or Character:FindFirstChild("HumanoidRootPart")
        HumanoidRootPart.CFrame = CFrame.new(-91.7390671, 4.04168415, -90.0620728)
    end})
    
    Tab10:AddButton({
    Name = "TP To Donut Shop (Table, Seat 1)",
    Callback = function()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character
        local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart") or Character:FindFirstChild("HumanoidRootPart")
        HumanoidRootPart.CFrame = CFrame.new(-102.440971, 4.51146317, -66.6184387)
    end})
    
    Tab10:AddButton({
    Name = "TP To Donut Shop (Table, Seat 2)",
    Callback = function()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character
        local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart") or Character:FindFirstChild("HumanoidRootPart")
        HumanoidRootPart.CFrame = CFrame.new(-94.6592941, 4.51146317, -74.3931046)
    end})
    
    Tab10:AddButton({
    Name = "TP To Donut Shop (Behind Counter)",
    Callback = function()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character
        local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart") or Character:FindFirstChild("HumanoidRootPart")
        HumanoidRootPart.CFrame = CFrame.new(-122.382172, 3.22726321, -83.5359192)
    end})
    
    Tab10:AddButton({
    Name = "TP Above Relaxing Room",
    Callback = function()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character
        local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart") or Character:FindFirstChild("HumanoidRootPart")
        HumanoidRootPart.CFrame = CFrame.new(-97.4412308, 24.4840164, 121.394676)
    end})
    
    Tab10:AddButton({
    Name = "TP To Submit Note Board",
    Callback = function()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character
        local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart") or Character:FindFirstChild("HumanoidRootPart")
        HumanoidRootPart.CFrame = CFrame.new(58.6107864, 4.99999857, 245.690369)
    end})
    
    Tab10:AddButton({
    Name = "TP To Stage Mic",
    Callback = function()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character
        local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart") or Character:FindFirstChild("HumanoidRootPart")
        HumanoidRootPart.CFrame = CFrame.new(-61.6848221, 10.0853853, 229.676834)
    end})
    
    Tab10:AddButton({
    Name = "TP To Private Room (Roof)",
    Callback = function()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character
        local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart") or Character:FindFirstChild("HumanoidRootPart")
        HumanoidRootPart.CFrame = CFrame.new(4220.37842, 23.5336628, 61.3636169)
    end})
    
    Tab2:AddTextbox({
    Name = "Invisible Keybind",
    Default = "C",
    TextDisappear = false,
    Callback = function(TheBind)
        Settings.Keybind = tostring(TheBind)
    end})
    
    function clickAllTheDetectors()
        local clickDetectors = {}
    
        for _, model in pairs(workspace:GetDescendants()) do
            if model:IsA("Model") and model.Name == "Tic Tac Toe" then
                for _, part in pairs(model:GetDescendants()) do
                    if part:IsA("Part") then
                        local clickDetector = part:FindFirstChildOfClass("ClickDetector")
                        if clickDetector then
                            table.insert(clickDetectors, clickDetector)
                        end
                    end
                end
            end
        end
        
        for _, clickDetector in pairs(clickDetectors) do
            clickDetector.MaxActivationDistance = 99999
            wait()
            fireclickdetector(clickDetector, 9999)
        end
    end
    
    Tab5:AddButton({
    Name = "Click All TicTacToe Boards",
    Callback = function()
        clickAllTheDetectors()
    end})
    
    Tab5:AddToggle({
    Name = "Click All TicTacToe Boards (Loop)",
    Default = false,
    Callback = function(ClickAll)
        if ClickAll then
            getgenv().doAllClicks = true
            while getgenv().doAllClicks == true do
            wait()
                clickAllTheDetectors()
            end
        else
            getgenv().doAllClicks = false
            wait()
            getgenv().doAllClicks = false
        end
    end})
    
    Tab5:AddButton({
    Name = "Infinite Yield",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/EnterpriseExperience/crazyDawg/main/InfYieldOther.lua", true))()
    end})
    
    Tab5:AddButton({
    Name = "FE Admin (Press ; )",
    Callback = function()
    if fireproximityprompt and cloneref then
        loadstring(game:HttpGet("https://raw.githubusercontent.com/EnterpriseExperience/AdonisAdminFE/main/AdminFE.lua", true))()
    elseif not fireproximityprompt and (not cloneref) then
        return OrionLib:MakeNotification({
            Name = "Error: Not Compatible",
            Content = "Your exploit cannot run this script.",
            Image = "rbxassetid://4483345998",
            Time = 10
        })
    end
    end})
    
    Tab2:AddSlider({
    Name = "WalkSpeed (Default): 16",
    Min = 16,
    Max = 300,
    Default = 16,
    Color = Color3.fromRGB(0,0,0),
    Increment = 1,
    ValueName = "",
    Callback = function(wsVal)
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local Humanoid = Character:FindFirstChildWhichIsA("Humanoid")
        
        if Humanoid then
            Humanoid.WalkSpeed = wsVal
        else
            repeat wait() until Humanoid and Humanoid.Health >= 90
            wait(0.5)
            warn("Humanoid Successfully Initialized! (1)")
        end
    end})
    
    if game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid").UseJumpPower == true then
        OrionLib:MakeNotification({
            Name = "Success!",
            Content = "JumpPower is enabled, continuing...",
            Image = "rbxassetid://4483345998",
            Time = 10
        })
        wait()
        Tab2:AddSlider({
        Name = "JumpPower (Default): 50",
        Min = 50,
        Max = 400,
        Default = 50,
        Color = Color3.fromRGB(0,0,0),
        Increment = 1,
        ValueName = "",
        Callback = function(jpVal)
            local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
            local LocalPlayer = Players.LocalPlayer
            local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
            local Humanoid = Character:FindFirstChildWhichIsA("Humanoid")
        
            if Humanoid then
                Humanoid.JumpPower = jpVal
            else
                repeat wait() until Humanoid and Humanoid.Health >= 90
                wait(0.5)
                warn("Humanoid Successfully Initialized! (2)")
            end
        end})
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local Humanoid = Character:FindFirstChildWhichIsA("Humanoid")
        
        repeat wait() until Humanoid and Humanoid.Health >= 90
        wait(0.5)
        warn("Humanoid Successfully Initialized! (3)")
    elseif game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid").UseJumpPower == false then
        OrionLib:MakeNotification({
            Name = "Detection!",
            Content = "UseJumpPower is disabled, switching...",
            Image = "rbxassetid://4483345998",
            Time = 10
        })
        wait(.2)
        Tab2:AddSlider({
        Name = "JumpHeight (Default): 7",
        Min = 7,
        Max = 300,
        Default = 7,
        Color = Color3.fromRGB(0,0,0),
        Increment = 1,
        ValueName = "",
        Callback = function(jumpHeight)
            local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
            local LocalPlayer = Players.LocalPlayer
            local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
            local Humanoid = Character:FindFirstChildWhichIsA("Humanoid") or Character:WaitForChild("Humanoid")
        
            if Humanoid then
                Humanoid.JumpHeight = jumpHeight
            else
                repeat wait() until Humanoid and Humanoid.Health >= 90
                wait(0.5)
                warn("Humanoid Successfully Initialized! (4)")
            end
        end})
    end
    
    Tab2:AddSlider({
    Name = "Gravity (Default): 196.2",
    Min = 1,
    Max = 196.2,
    Default = 196.2,
    Color = Color3.fromRGB(0,0,0),
    Increment = 1,
    ValueName = "",
    Callback = function(gravVal)
        repeat wait() until game:IsLoaded()
        wait()
        local GetWorkspace = cloneref(game:GetService("Workspace")) or game:GetService("Workspace")
        GetWorkspace.Gravity = gravVal
    end})
    
    Tab13:AddButton({
    Name = "Anti-Bang/TP (Method 1)",
    Callback = function()
        local Players = game:GetService("Players")
        local Workspace = game:GetService("Workspace") or workspace
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local HumanoidRP = Character:FindFirstChild("HumanoidRootPart") or Character:WaitForChild("HumanoidRootPart")
        local Humanoid =  Character:FindFirstChildWhichIsA("Humanoid") or Character:WaitForChild("Humanoid") or Character:FindFirstChildOfClass("Humanoid")
        if HumanoidRP then
            print("HumanoidRootPart was found successfully!")
            wait()
            HumanoidRP.CFrame = CFrame.new(-108.536659, 5.38924313, 135.303314)
            wait(0.5)
            Character:FindFirstChildWhichIsA("Humanoid").Jump = true
            wait(1)
            local OldCF = Character:WaitForChild("HumanoidRootPart").CFrame
            wait(1)
            HumanoidRP.CFrame = CFrame.new(4213.66602, 2.76511836, 67.6830292)
            wait(0.7)
            HumanoidRP.CFrame = CFrame.new(-108.536659, 5.38924313, 135.303314)
            wait(0.7)
            HumanoidRP.CFrame = OldCF
            wait(0.7)
            print("Successfully Executed | Method 1 | 0")
        else
            print("Need to wait for HumanoidRootPart...")
            wait()
            repeat wait() until HumanoidRP and Humanoid
        end
    end})
    
    Tab2:AddToggle({
    Name = "Anti-Bang/TP (Loop Method)",
    Default = false,
    Callback = function(doAntiTP)
    getgenv().doTeleport = false
    wait(0.5)
    if doAntiTP then
        local Workspace = cloneref(game:GetService("Workspace")) or game:GetService("Workspace")
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local HumanoidRP = Character:FindFirstChild("HumanoidRootPart") or Character:WaitForChild("HumanoidRootPart")
    
        if HumanoidRP and HumanoidRP ~= nil then
            getgenv().doTeleport = true
            while getgenv().doTeleport == true do
            wait()
                HumanoidRP.CFrame = CFrame.new(4213.66602, 2.76511836, 67.6830292)
            end
        else
            warn("HumanoidRootPart was destroyed or is nil!")
            wait()
            getgenv().doTeleport = false
        end
    else
        getgenv().doTeleport = false
        wait()
        repeat wait() until getgenv().doTeleport == false
        wait()
        print("Success! getgenv().doTeleport = false")
        wait(0.5)
        local Workspace = cloneref(game:GetService("Workspace")) or game:GetService("Workspace")
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local HumanoidRP = Character:FindFirstChild("HumanoidRootPart") or Character:WaitForChild("HumanoidRootPart")
        print("Teleporting Back...")
        wait()
        HumanoidRP.CFrame = CFrame.new(36.5316811, 4.99999952, 24.585743)
    end
    end})
    
    Tab2:AddButton({
    Name = "Anti-Bang/TP (Method 3, You Die To)",
    Callback = function()
        local voidPosition = Vector3.new(-499, -499, -499)
        local Workspace = cloneref(game:GetService("Workspace")) or game:GetService("Workspace")
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local HumanoidRP = Character:FindFirstChild("HumanoidRootPart") or Character:WaitForChild("HumanoidRootPart")
        print("Killing...")
        wait(.2)
        HumanoidRP.CFrame = CFrame.new(voidPosition)
    end})
    
    Tab2:AddToggle({
    Name = "Anti-TP (Method 4, Loop TP Void)",
    Default = false,
    Callback = function(getLoopTpToVoid)
        if getLoopTpToVoid then
            local putPositionTo = Vector3.new(-84385288, 69380040, 174817648)
            local Workspace = cloneref(game:GetService("Workspace")) or game:GetService("Workspace")
            local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
            local LocalPlayer = Players.LocalPlayer
            local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
            local HumanoidRP = Character:FindFirstChild("HumanoidRootPart") or Character:WaitForChild("HumanoidRootPart")
                getgenv().loopTPToVoid = true
                while getgenv().loopTPToVoid == true do
                wait()
                    HumanoidRP.CFrame = CFrame.new(putPositionTo)
                end
            else
                getgenv().loopTPToVoid = false
            wait()
            repeat wait() until getgenv().loopTPToVoid == false
            local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
            local LocalPlayer = Players.LocalPlayer
            local Character = LocalPlayer.Character
            local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart") or Character:FindFirstChild("HumanoidRootPart")
            HumanoidRootPart.CFrame = CFrame.new(36.5316811, 4.99999952, 24.585743)
        end
    end})
    
    Tab5:AddButton({
    Name = "Grab VIP Tools (Needs VIP)",
    Callback = function()
    if fireproximityprompt and game:GetService("MarketplaceService"):UserOwnsGamePassAsync(tonumber(game.Players.LocalPlayer.UserId), tonumber(28828491)) then
        local GetWorkspace = cloneref(game:GetService("Workspace")) or game:GetService("Workspace")
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    
        local args = {
            [1] = "Camera"
        }
                
        game:GetService("ReplicatedStorage"):WaitForChild("Additional"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
        local args = {
            [1] = "Fit"
        }
                
        game:GetService("ReplicatedStorage"):WaitForChild("Additional"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
        local args = {
            [1] = "Wand"
        }
                
        game:GetService("ReplicatedStorage"):WaitForChild("Additional"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
        local args = {
            [1] = "Horrible"
        }
                
        game:GetService("ReplicatedStorage"):WaitForChild("Additional"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
        local args = {
            [1] = "Doll"
        }
                
        game:GetService("ReplicatedStorage"):WaitForChild("Additional"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
        local args = {
            [1] = "Burrito"
        }
                
        game:GetService("ReplicatedStorage"):WaitForChild("Additional"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
        local args = {
            [1] = "Bloxy"
        }
                
        game:GetService("ReplicatedStorage"):WaitForChild("Additional"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
        local args = {
            [1] = "Bloxilicious"
        }
                
        game:GetService("ReplicatedStorage"):WaitForChild("Additional"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
        local args = {
            [1] = "Sauce"
        }
                
        game:GetService("ReplicatedStorage"):WaitForChild("Additional"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
        local args = {
            [1] = "Pistol"
        }
            
        game:GetService("ReplicatedStorage"):WaitForChild("Additional"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
        local args = {
            [1] = "Spray"
        }
            
        game:GetService("ReplicatedStorage"):WaitForChild("Additional"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
        local args = {
            [1] = "Torch"
        }
            
        game:GetService("ReplicatedStorage"):WaitForChild("Additional"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
        local args = {
            [1] = "Wand"
        }
            
        game:GetService("ReplicatedStorage"):WaitForChild("Additional"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
        wait(.1)
        for _, meshPart in pairs(GetWorkspace:GetDescendants()) do
            if meshPart:IsA("MeshPart") and meshPart.Name == "ToolGrab" then
                local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
                local LocalPlayer = Players.LocalPlayer
                local proximityPrompt = meshPart:FindFirstChild("ProximityPrompt")
                if proximityPrompt then
                    proximityPrompt.HoldDuration = 0
                    proximityPrompt.MaxActivationDistance = 1000000
                    wait(0.3)
                    Character:PivotTo(meshPart:GetPivot())
                    wait(0.3)
                    fireproximityprompt(proximityPrompt)
                    wait(0.2)
                    if LocalPlayer.PlayerGui:FindFirstChild("Additional") then
                        LocalPlayer.PlayerGui:FindFirstChild("Additional"):FindFirstChild("Frame").Visible = false
                    else
                        warn("OK !!")
                    end
                    wait(0.5)
                    proximityPrompt.HoldDuration = 1
                    proximityPrompt.MaxActivationDistance = 7
                end
            end
        end
    else
        return OrionLib:MakeNotification({
            Name = "Error:",
            Content = "You do not own the VIP Tools GamePass buy it first!",
            Image = "rbxassetid://4483345998",
            Time = 10
        })
    end
    end})
    
    Tab9:AddButton({
    Name = "Reset Lighting",
    Callback = function()
    local Lighting = cloneref(game:GetService("Lighting")) or game:GetService("Lighting") 
    local SunRays = Lighting:FindFirstChildOfClass("SunRaysEffect")
    
    Lighting.ClockTime = 14.5
    wait()
    Lighting.Brightness = 3
    wait()
    Lighting.Atmosphere.Density = 0.3
    wait()
    Lighting.Atmosphere.Offset = 0.25
    wait()
    Lighting.Atmosphere.Color = Color3.new(199, 199, 199)
    wait()
    Lighting.Atmosphere.Decay = Color3.new(106, 112, 125)
    wait()
    Lighting.Atmosphere.Glare = 0
    wait()
    Lighting.Atmosphere.Haze = 0
    wait()
    Lighting.Sky.MoonAngularSize = 11
    wait()
    Lighting.Sky.StarCount = 3000
    wait()
    Lighting.Sky.SunAngularSize = 11
    wait()
    Lighting.Bloom.Intensity = 1
    wait()
    Lighting.Bloom.Enabled = true
    wait()
    Lighting.Bloom.Size = 24
    wait()
    Lighting.Bloom.Threshold = 2
    wait()
    Lighting.DepthOfField.Enabled = false
    wait()
    Lighting.DepthOfField.FarIntensity = 0.1
    wait()
    Lighting.DepthOfField.FocusDistance = 0.05
    wait()
    Lighting.DepthOfField.InFocusRadius = 30
    wait()
    Lighting.DepthOfField.NearIntensity = 0.75
    wait()
    Lighting.SunRays.Enabled = true
    wait()
    Lighting.SunRays.Intensity = 0.01
    wait()
    Lighting.SunRays.Spread = 0.1
    end})
    
    Tab9:AddToggle({
    Name = "FireWorks (Sky)",
    Default = false,
    Callback = function(FireWorksCrazy)
    if FireWorksCrazy then
        local Lighting = cloneref(game:GetService("Lighting")) or game:GetService("Lighting")
        Lighting.ClockTime = 1
        wait()
        Lighting.Brightness = 2
        wait()
        getgenv().setFireWorksOn = true
        while getgenv().setFireWorksOn == true do
        wait()
        local player = game.Players.LocalPlayer
        local Lighting = game:GetService("Lighting")
        
        local function createFirework(position)
            local firework = Instance.new("Part")
            firework.Size = Vector3.new(1, 1, 1)
            firework.Position = position
            firework.Anchored = true
            firework.CanCollide = false
            firework.Material = Enum.Material.Neon
            firework.Parent = workspace
        
            local explosion = Instance.new("ParticleEmitter")
            explosion.Color = ColorSequence.new({
                ColorSequenceKeypoint.new(0, Color3.new(math.random(), math.random(), math.random())),
                ColorSequenceKeypoint.new(0.5, Color3.new(math.random(), math.random(), math.random())),
                ColorSequenceKeypoint.new(1, Color3.new(0, 0, 0))
            })
            explosion.Size = NumberSequence.new(2, 0)
            explosion.Lifetime = NumberRange.new(0.5, 1)
            explosion.Rate = 150
            explosion.Speed = NumberRange.new(75, 150)
            explosion.SpreadAngle = Vector2.new(180, 180)
            explosion.Parent = firework
        
            local light = Instance.new("PointLight")
            light.Brightness = 300
            light.Range = 200
            light.Color = Color3.new(1, 1, 1)
            light.Parent = firework
        
            local sound = Instance.new("Sound")
            sound.SoundId = "rbxassetid://272537961"
            sound.Volume = 2.5
            sound.Parent = firework
            sound:Play()
        
            wait(0.1)
            explosion:Emit(200)
            wait(1)
            firework:Destroy()
        end
        
        local function launchFireworks()
            local xOffset = math.random(-50, 50)
            local yOffset = math.random(50, 100)
            local zOffset = math.random(-50, 50)
            local position = Vector3.new(xOffset, 50 + yOffset, zOffset)
        
            createFirework(position)
            wait(math.random(1, 2))
        end
        
        launchFireworks()
    end
    else
    getgenv().setFireWorksOn = false
    wait(0.5)
    resetLightingSettings()
    end
    end})
    
    Tab9:AddButton({
    Name = "NightTime",
    Callback = function()
    local Lighting = cloneref(game:GetService("Lighting")) or game:GetService("Lighting")
    if Lighting.ClockTime <= 1 then
        Lighting.ClockTime = 0
        wait()
        Lighting.Brightness = 0
    else
        resetLightingSettings()
        wait(0.2)
        Lighting.ClockTime = 0
        wait()
        Lighting.Brightness = 0
    end
    end})
    
    Tab9:AddButton({
    Name = "NightTime (With Night-Light)",
    Callback = function()
    local Lighting = cloneref(game:GetService("Lighting")) or game:GetService("Lighting")
    if Lighting.ClockTime <= 2 then
        Lighting.ClockTime = 1
        wait()
        Lighting.Brightness = 2
    else
        resetLightingSettings()
        wait(0.2)
        Lighting.ClockTime = 0
        wait()
        Lighting.Brightness = 0
    end
    end})
    
    Tab9:AddButton({
    Name = "DayTime",
    Callback = function()
    local Lighting = cloneref(game:GetService("Lighting")) or game:GetService("Lighting")
    Lighting.ClockTime = 12
    wait()
    Lighting.Brightness = 1.5
    end})
    
    Tab9:AddToggle({
    Name = "Spooky Moon",
    Default = false,
    Callback = function(moonCrazy)
    local Lighting = cloneref(game:GetService("Lighting")) or game:GetService("Lighting") 
    if moonCrazy then
        getgenv().SpookyMoon = true
        local sky = Lighting:FindFirstChildOfClass("Sky")
    
        local function smoothTransition()
            local Lighting = cloneref(game:GetService("Lighting")) or game:GetService("Lighting") 
            Lighting.ClockTime = 0
            for i = 1, 60, 0.5 do
                sky.MoonAngularSize = i
                wait(0.05)
            end
            for i = 60, 1, -0.5 do
                sky.MoonAngularSize = i
                wait(0.05)
            end
        end
    
        while getgenv().SpookyMoon == true do
            wait()
            smoothTransition()
        end
    else
        local Lighting = cloneref(game:GetService("Lighting")) or game:GetService("Lighting")
        local sky = Lighting:FindFirstChildOfClass("Sky")
        wait(0.5)
        getgenv().SpookyMoon = false
        wait(1)
        getgenv().SpookyMoon = false
        wait(1)
        getgenv().SpookyMoon = false
        wait(3)
        resetLightingSettings()
        wait(0.3)
        sky.MoonAngularSize = 11
        wait(0.6)
        Lighting.ClockTime = 5
        wait(0.5)
        Lighting.ClockTime = 14
    end
    end})
    
    Tab9:AddToggle({
    Name = "Spooky Sun (WTF?)",
    Default = false,
    Callback = function(sunSpooky)
    if sunSpooky then
        getgenv().SpookSun = true
        local Lighting = cloneref(game:GetService("Lighting")) or game:GetService("Lighting") 
        local sky = Lighting:FindFirstChildOfClass("Sky")
    
        local function smoothTransition()
            local Lighting = cloneref(game:GetService("Lighting")) or game:GetService("Lighting") 
            local sky = Lighting:FindFirstChildOfClass("Sky")
            Lighting.ClockTime = 14

            for i = 1, 60, 0.5 do
                sky.SunAngularSize = i
                wait(0.05)
            end
            for i = 60, 1, -0.5 do
                sky.SunAngularSize = i
                wait(0.05)
            end
        end
        
        while getgenv().SpookSun == true do
            wait()
            smoothTransition()
        end
    else
        local Lighting = cloneref(game:GetService("Lighting")) or game:GetService("Lighting")
        local sky = Lighting:FindFirstChildOfClass("Sky")
        wait(0.5)
        getgenv().SpookSun = false
        wait(1)
        getgenv().SpookSun = false
        wait(0.5)
        getgenv().SpookSun = false
        wait(1.5)
        resetLightingSettings()
    end
    end})
    
    Tab9:AddButton({
    Name = "Spooky NightTime (Halloween Style)",
    Callback = function()
    local light = game:GetService("Lighting")
    
    light.Ambient = Color3.new(0, 0, 0)
    light.Brightness = 0
    light.ColorShift_Bottom = Color3.new(0, 0, 0)
    light.ColorShift_Top = Color3.new(0, 0, 0)
    light.GlobalShadows = true
    light.ShadowSoftness = 0.3
    light.Technology = Enum.Technology.Compatibility
    light.ClockTime = 3.5
    light.FogColor = Color3.new(0, 0, 0)
    light.FogEnd = 500
    light.FogStart = 500
    light.Bloom.Enabled = true
    light.Bloom.Intensity = 20
    light.Bloom.Size = 10
    light.Bloom.Threshold = 2
    light.DepthOfField.Enabled = false
    light.SunRays.Enabled = true
    light.SunRays.Intensity = 1
    light.SunRays.Spread = 3
    end})
    
    Tab9:AddToggle({
    Name = "Spooky DayTime (CAN be laggy?)",
    Default = false,
    Callback = function(theSpookyTime)
    if theSpookyTime then
    getgenv().SpookyDayTime = true
    if getgenv().SpookyDayTime == true then
    wait()
    local Lighting = cloneref(game:GetService("Lighting")) or game:GetService("Lighting") 
    Lighting.ClockTime = 8
    wait()
    Lighting.Brightness = 0
    wait(0.2)
        local function addSmokeToPart(part)
        local Players = game:GetService("Players"):GetChildren()
    
        if part:IsA("BasePart") and part.Parent ~= Players.Character then
            local smoke = Instance.new("Smoke")
            smoke.Name = "SpookySmoke"
            smoke.Opacity = 0.5
            smoke.RiseVelocity = 2
            smoke.Size = 6
            smoke.Color = Color3.fromRGB(161, 165, 162)
            smoke.Parent = part
        end
        end
    
        local function addSmokeToEverything()
        local Players = game:GetService("Players"):GetChildren()
    
        for _, obj in pairs(workspace:GetDescendants()) do
            if obj.Parent ~= Players.Character then
                addSmokeToPart(obj)
            end
        end
        end
    
        addSmokeToEverything()
    end
    else
        getgenv().SpookyDayTime = false
        wait(2)
        for i = 1, 10 do
            local Lighting = cloneref(game:GetService("Lighting")) or game:GetService("Lighting") 
        
            local function removeSmokeFromPart(part)
            local smoke = part:FindFirstChild("SpookySmoke")
                if smoke then
                    smoke:Destroy()
                end
            end
        
            local function removeSmokeFromEverything()
                for _, obj in pairs(workspace:GetDescendants()) do
                    removeSmokeFromPart(obj)
                end
            end
        
            removeSmokeFromEverything()
        end
    end
    end})
    
    Tab12:AddToggle({
    Name = "Freeze Emotes",
    Default = false,
    Callback = function(freezeToggle)
    if freezeToggle then
        if cloneref then
            print("cloneref | Supported | true")
        else
            print("cloneref | Unsupported | false")
        end
        getgenv().doFreezeToggle = true
        while getgenv().doFreezeToggle == true do
        wait()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local Humanoid = Character:FindFirstChildOfClass("Humanoid") or Character:FindFirstChildOfClass("AnimationController")
        local ActiveTracks = Humanoid:GetPlayingAnimationTracks()
        for _, v in pairs(ActiveTracks) do
            v:AdjustSpeed(0)
        end
    end
    else
        getgenv().doFreezeToggle = false
        wait(0.5)
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players") 
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local Humanoid = Character:FindFirstChildOfClass("Humanoid") or Character:FindFirstChildOfClass("AnimationController")
        local ActiveTracks = Humanoid:GetPlayingAnimationTracks()
        for _, v in pairs(ActiveTracks) do
            v:AdjustSpeed(1)
        end
        wait()
        for i,v in next, Humanoid:GetPlayingAnimationTracks() do
            v:Stop()
        end
    end
    end})
    
    Tab12:AddButton({
    Name = "Stop Playing Emotes",
    Callback = function()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players") 
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local Humanoid = Character:FindFirstChildOfClass("Humanoid") or Character:FindFirstChildOfClass("AnimationController")
        local ActiveTracks = Humanoid:GetPlayingAnimationTracks()
        for i,v in next, Humanoid:GetPlayingAnimationTracks() do
            v:Stop()
        end
    end})

    Tab12:AddSlider({
    Name = "Emote Speed Slider",
    Min = 0,
    Max = 500,
    Default = 1,
    Color = Color3.fromRGB(0,0,0),
    Increment = 0.1,
    ValueName = "",
    Callback = function(slidingSpeed)
        local getEmoteNum = tonumber(slidingSpeed) or slidingSpeed
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players") 
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local Humanoid = Character:FindFirstChildOfClass("Humanoid") or Character:FindFirstChildOfClass("AnimationController")
        local ActiveTracks = Humanoid:GetPlayingAnimationTracks()
        for _, v in pairs(ActiveTracks) do
            v:AdjustSpeed(getEmoteNum)
        end
    end})
    
    Tab12:AddTextbox({
    Name = "Emote Speed",
    Default = "Number",
    TextDisappear = true,
    Callback = function(inputNum)
    local getNumberInput = tonumber(inputNum)
    local Players = cloneref(game:GetService("Players")) or game:GetService("Players") 
    local LocalPlayer = Players.LocalPlayer
    local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local Humanoid = Character:FindFirstChildOfClass("Humanoid") or Character:FindFirstChildOfClass("AnimationController")
    local ActiveTracks = Humanoid:GetPlayingAnimationTracks()
    for _, v in pairs(ActiveTracks) do
        v:AdjustSpeed(getNumberInput)
    end
    end})
    
    Tab12:AddButton({
    Name = "Kinda Fast Emote Speed",
    Callback = function()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players") 
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local Humanoid = Character:FindFirstChildOfClass("Humanoid") or Character:FindFirstChildOfClass("AnimationController")
        local ActiveTracks = Humanoid:GetPlayingAnimationTracks()
        for _, v in pairs(ActiveTracks) do
            v:AdjustSpeed(2)
        end
    end})
    
    Tab12:AddButton({
    Name = "Faster Emote Speed",
    Callback = function()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players") 
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local Humanoid = Character:FindFirstChildOfClass("Humanoid") or Character:FindFirstChildOfClass("AnimationController")
        local ActiveTracks = Humanoid:GetPlayingAnimationTracks()
        for _, v in pairs(ActiveTracks) do
            v:AdjustSpeed(4.5)
        end
    end})
    
    Tab12:AddButton({
    Name = "Normal Emote Speed",
    Callback = function()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players") 
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local Humanoid = Character:FindFirstChildOfClass("Humanoid") or Character:FindFirstChildOfClass("AnimationController")
        local ActiveTracks = Humanoid:GetPlayingAnimationTracks()
        for _, v in pairs(ActiveTracks) do
            v:AdjustSpeed(1)
        end
    end})
    
    Tab12:AddButton({
    Name = "Slow Emote Speed",
    Callback = function()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players") 
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local Humanoid = Character:FindFirstChildOfClass("Humanoid") or Character:FindFirstChildOfClass("AnimationController")
        local ActiveTracks = Humanoid:GetPlayingAnimationTracks()
        for _, v in pairs(ActiveTracks) do
            v:AdjustSpeed(0.5)
        end
    end})
    
    Tab12:AddButton({
    Name = "Super Slow Emote Speed",
    Callback = function()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players") 
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local Humanoid = Character:FindFirstChildOfClass("Humanoid") or Character:FindFirstChildOfClass("AnimationController")
        local ActiveTracks = Humanoid:GetPlayingAnimationTracks()
        for _, v in pairs(ActiveTracks) do
            v:AdjustSpeed(0.1)
        end
    end})
    
    Tab12:AddButton({
    Name = "Reverse Emote Speed",
    Callback = function()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players") 
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local Humanoid = Character:FindFirstChildOfClass("Humanoid") or Character:FindFirstChildOfClass("AnimationController")
        local ActiveTracks = Humanoid:GetPlayingAnimationTracks()
        for _, v in pairs(ActiveTracks) do
            v:AdjustSpeed(-1)
        end
    end})
    
    Tab14:AddButton({
    Name = "Free Emotes GUI",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/EnterpriseExperience/MicUpSource/refs/heads/main/EmotesGUI"))()
    end})
    
    -- Might bring this back, it still works, but it's not really all that useful, as there is an automated version already, this is just manual (Zacks Easy Hub, is designed to be manual)
    
    --[[Tab1:AddButton({
    Name = "Submit Note Bypass (working)",
    Callback = function()
    local PartToTp = workspace:FindFirstChild("SubmitNote")
    local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local HRP = Character:FindFirstChild("HumanoidRootPart") or Character:WaitForChild("HumanoidRootPart")
    
    HRP.CFrame = CFrame.new(PartToTp.Position)
    wait(0.3)
    HRP.Anchored = true
    wait(0.5)
    fireproximityprompt(PartToTp.Activate)
    wait(0.2)
    game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("SubmitNote"):FindFirstChild("Frame"):FindFirstChild("TextBox").Text = "ӻȕㄈҟ ȟόȇ"
    wait(0.2)
    if firesignal and LocalPlayer.PlayerGui:FindFirstChild("SubmitNote") then
        local Signals = {"Activated", "MouseButton1Down", "MouseButton2Down", "MouseButton1Click", "MouseButton2Click"}
    
        for _,v in pairs(LocalPlayer.PlayerGui:FindFirstChild("SubmitNote"):FindFirstChild("Frame"):GetDescendants()) do
            if v:IsA("ImageButton") or v:IsA("TextButton") then
                for i,Signal in pairs(Signals) do
                    firesignal(v[Signal])
                end
            end
        end
    elseif not firesignal and LocalPlayer.PlayerGui:FindFirstChild("SubmitNote") then
        warn("firesignal | unsupported | Set SubmitNote Frame 'Visible' property | False")
        wait()
        LocalPlayer.PlayerGui:FindFirstChild("SubmitNote"):FindFirstChild("Frame").Visible = false
    end
    wait(0.3)
    HRP.Anchored = false
    end})--]]
    
    Tab1:AddToggle({
    Name = "Mute All",
    Default = false,
    Callback = function(TheMuteAll)
    if TheMuteAll then
        for i, v in pairs(game:GetService("Players"):GetChildren()) do
            if v ~= game.Players.LocalPlayer then
                getgenv().LmaoGetMuted = true
                while getgenv().LmaoGetMuted == true do
                wait()
                    v:FindFirstChildOfClass("AudioDeviceInput").Muted = true
                end
            end
        end
    else
        getgenv().LmaoGetMuted = false
        wait(0.2)
        for i, v in pairs(game.Players:GetPlayers()) do
            if v ~= game.Players.LocalPlayer and v:FindFirstChild("AudioDeviceInput") then
                local dude = v.AudioDeviceInput
                dude.Muted = false
            end
        end
    end
    end})
    
    Tab1:AddTextbox({
    Name = "Mute Player",
    Default = "UserName Or DisplayName",
    TextDisappear = true,
    Callback = function(getAUser)
    local derUser = findplr(getAUser)
    
    if derUser then
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
    
        getgenv().shouldMute = true
    
        local function monitorPlayerAudio(player)
            local audioDevice = player:FindFirstChild("AudioDeviceInput")
            if audioDevice then
                if getgenv().shouldMute == true then
                    audioDevice.Muted = true
                end
    
                audioDevice.Changed:Connect(function(property)
                    if property == "Muted" and getgenv().shouldMute == true and not audioDevice.Muted then
                        audioDevice.Muted = true
                        wait()
                        OrionLib:MakeNotification({
                            Name = "Success!",
                            Content = tostring(derUser).." was muted successfully!",
                            Image = "rbxassetid://4483345998",
                            Time = 10
                        })
                    end
                end)
            end
        end
    
        monitorPlayerAudio(derUser)
    else
        return OrionLib:MakeNotification({
            Name = "Error: Not Found",
            Content = tostring(getAUser).." was not found!",
            Image = "rbxassetid://4483345998",
            Time = 10
        })
    end
    end})

    Tab15:AddButton({
    Name = "Rejoin",
    Callback = function()
        local TeleportService = cloneref(game:GetService("TeleportService")) or game:GetService("TeleportService")
        wait()
        TeleportService:TeleportToPlaceInstance(PlaceId, JobId, Players.LocalPlayer)
    end})

    Tab15:AddButton({
    Name = "Server Hop",
    Callback = function()
        -- Thanks 'Infinite Yield' I am NOT trying to make any of this right now.
        httprequest = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request
        local PlaceId = game.PlaceId
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        local JobId = game.JobId
        local TeleportService = cloneref(game:GetService("TeleportService")) or game:GetService("TeleportService")
        local HttpService = cloneref(game:GetService("HttpService")) or game:GetService("HttpService")
        
        if httprequest then
            local servers = {}
            local req = httprequest({Url = string.format("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true", PlaceId)})
            local body = HttpService:JSONDecode(req.Body)
    
            if body and body.data then
                for i, v in next, body.data do
                    if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers and v.id ~= JobId then
                        table.insert(servers, 1, v.id)
                    end
                end
            end
        end

        if #servers > 0 then
            TeleportService:TeleportToPlaceInstance(PlaceId, servers[math.random(1, #servers)], Players.LocalPlayer)
        else
            return print("Serverhop", "Couldn't find a server.")
        end
    end})
    
    Tab15:AddButton({
    Name = "Re-Execute GUI",
    Callback = function()
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players") 
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local Humanoid = Character:FindFirstChildWhichIsA("Humanoid") or Character:WaitForChild("Humanoid") or Character:FindFirstChild("Humanoid") or Character:FindFirstChildOfClass("Humanoid")
        getgenv().Invis_Loaded = false
        getgenv().SCRIPT_EXECUTED = false
        getgenv().GetLoopRunning = false
        getgenv().getLoopKick = false
        wait(0.2)
        getgenv().getLoopKick = false
        wait(0.2)
        getgenv().LmaoGetMuted = false

        wait()
        game:GetService("CoreGui"):FindFirstChild("Orion"):Destroy()
        wait(0.2)
        game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"):FindFirstChild("GetOrionGUI"):Destroy()
        wait(1)
        loadstring(game:HttpGet(('https://raw.githubusercontent.com/EnterpriseExperience/MicUpSource/refs/heads/main/v5-BETA')))()
    end})
    
    Tab15:AddButton({
    Name = "Destroy GUI/Script",
    Callback = function()
        getgenv().getLoopKick = false
        wait()
        getgenv().getLoopKick = false
        wait(0.2)
        getgenv().SCRIPT_EXECUTED = false
        getgenv().SCRIPT_EXECUTED = false
        getgenv().Invis_Loaded = false
        getgenv().GetLoopRunning = false
        getgenv().GetLoopRunning = false
        getgenv().LmaoGetMuted = false
        getgenv().GetDataResetLighting = false

        wait()
        for i, v in pairs(game:GetService("Workspace").PartStorage:GetDescendants()) do
            if v:FindFirstChild("CFRAME_STORAGE") and v:IsA("Part") then
                print(tostring(v))
                wait(.3)
                v:Destroy()
            else
                warn("404_MISSING_StringValue | 'CFRAME_STORAGE' | nil:FindFirstChild(nil?CFRAME_STORAGE) | ???[MISSING_^OUTPUT]")
            end
        end
        wait(.3)
        game:GetService("CoreGui"):FindFirstChild("Orion"):Destroy()
        wait(.5)
        game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"):FindFirstChild("GetOrionGUI"):Destroy()
    end})
    
    Tab1:AddTextbox({
    Name = "Unmute Player",
    Default = "UserName Or DisplayName",
    TextDisappear = true,
    Callback = function(LolPUser)
        local thisUser = findplr(LolPUser)
    
        local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
        
        if thisUser then
            getgenv().shouldMute = false
        
            local function monitorPlayerAudio(player)
                local audioDevice = thisUser:FindFirstChild("AudioDeviceInput")
                if audioDevice then
                    if getgenv().shouldMute == false then
                        audioDevice.Muted = false
                    end
        
                    audioDevice.Changed:Connect(function(property)
                        if property == "Muted" and getgenv().shouldMute == false and audioDevice.Muted then
                            audioDevice.Muted = false
                            wait()
                            OrionLib:MakeNotification({
                                Name = "Success!",
                                Content = tostring(thisUser).." was unmuted successfully!",
                                Image = "rbxassetid://4483345998",
                                Time = 10
                            })
                        end
                    end)
                end
            end
        
            monitorPlayerAudio(thisUser)    
        else
            return OrionLib:MakeNotification({
                Name = "Error: Not Found",
                Content = tostring(LolPUser).." was not found!",
                Image = "rbxassetid://4483345998",
                Time = 10
            })
        end
    end})
    
    Tab2:AddButton({
    Name = "Shift To Run (Speed Coil Alt)",
    Callback = function()
    local player = game.Players.LocalPlayer
    local character = player.Character
    local humanoid = character:FindFirstChildWhichIsA("Humanoid") or character:WaitForChild("Humanoid") or character:FindFirstChild("Humanoid") or character:FindFirstChildOfClass("Humanoid")
    local userInputService = game:GetService("UserInputService")
     
    local isSprinting = false
    local walkSpeed = humanoid.WalkSpeed
    local sprintSpeed = 400
     
    local function onKeyPress(input)
        if input.KeyCode == Enum.KeyCode.LeftShift then
            isSprinting = true
            humanoid.WalkSpeed = sprintSpeed
        end
    end
     
    local function onKeyRelease(input)
        if input.KeyCode == Enum.KeyCode.LeftShift then
            isSprinting = false
            humanoid.WalkSpeed = walkSpeed
        end
    end
     
    userInputService.InputBegan:Connect(onKeyPress)
    userInputService.InputEnded:Connect(onKeyRelease)
    end})

    --[[local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local Animate = Character:FindFirstChild("Animate")--]]
    
    Tab5:AddDropdown({
    Name = "Animation Packages",
    Default = "",
    Options = {"Vampire", "Hero", "Zombie Classic", "Mage", "Ghost", "Elder", "Levitation", "Astronaut", "Ninja", "Werewolf", "Cartoon", "Pirate", "Sneaky (FE)", "Toy", "Knight", "Confident (FE)", "Popstar (FE)", "Princess (FE)", "Cowboy (FE)", "Patrol (FE)", "Zombie (FE)"},
    Callback = function(SelectAnim)
    if SelectAnim == "Vampire" then
    local Animate = game.Players.LocalPlayer.Character.Animate
    Animate.Disabled = true
    wait()
    Animate.Disabled = false
    local animtrack = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):GetPlayingAnimationTracks()
    for i, track in pairs (animtrack) do
        track:Stop()
    end
    wait()
    Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=1083445855"
    Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=1083450166"
    Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=1083473930"
    Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=1083462077"
    Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=1083455352"
    Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=1083439238"
    Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=1083443587"
    wait()
    game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(3)
    wait()
    Animate.Disabled = false
    elseif SelectAnim == "Hero" then
    local Animate = game.Players.LocalPlayer.Character.Animate
    Animate.Disabled = true
    wait()
    Animate.Disabled = false
    local animtrack = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):GetPlayingAnimationTracks()
    for i, track in pairs (animtrack) do
        track:Stop()
    end
    wait()
    Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=616111295"
    Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=616113536"
    Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=616122287"
    Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=616117076"
    Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=616115533"
    Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=616104706"
    Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=616108001"
    wait()
    game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(3)
    wait()
    Animate.Disabled = false
    elseif SelectAnim == "Zombie Classic" then
    local Animate = game.Players.LocalPlayer.Character.Animate
    Animate.Disabled = true
    wait()
    Animate.Disabled = false
    local animtrack = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):GetPlayingAnimationTracks()
    for i, track in pairs (animtrack) do
        track:Stop()
    end
    wait()
    Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=616158929"
    Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=616160636"
    Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=616168032"
    Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=616163682"
    Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=616161997"
    Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=616156119"
    Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=616157476"
    wait()
    game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(3)
    wait()
    Animate.Disabled = false
    elseif SelectAnim == "Mage" then
    local Animate = game.Players.LocalPlayer.Character.Animate
    Animate.Disabled = true
    wait()
    Animate.Disabled = false
    local animtrack = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):GetPlayingAnimationTracks()
    for i, track in pairs (animtrack) do
        track:Stop()
    end
    wait()
    Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=707742142"
    Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=707855907"
    Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=707897309"
    Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=707861613"
    Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=707853694"
    Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=707826056"
    Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=707829716"
    wait()
    game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(3)
    wait()
    Animate.Disabled = false
    elseif SelectAnim == "Ghost" then
    local Animate = game.Players.LocalPlayer.Character.Animate
    Animate.Disabled = true
    wait()
    Animate.Disabled = false
    local animtrack = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):GetPlayingAnimationTracks()
    for i, track in pairs (animtrack) do
        track:Stop()
    end
    wait()
    Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=616006778"
    Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=616008087"
    Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=616010382"
    Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=616013216"
    Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=616008936"
    Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=616003713"
    Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=616005863"
    wait()
    game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(3)
    wait()
    Animate.Disabled = false
    elseif SelectAnim == "Elder" then
    local Animate = game.Players.LocalPlayer.Character.Animate
    Animate.Disabled = true
    wait()
    Animate.Disabled = false
    local animtrack = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):GetPlayingAnimationTracks()
    for i, track in pairs (animtrack) do
        track:Stop()
    end
    wait()
    Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=845397899"
    Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=845400520"
    Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=845403856"
    Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=845386501"
    Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=845398858"
    Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=845392038"
    Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=845396048"
    wait()
    game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(3)
    wait()
    Animate.Disabled = false
    elseif SelectAnim == "Levitation" then
    local Animate = game.Players.LocalPlayer.Character.Animate
    Animate.Disabled = true
    wait()
    Animate.Disabled = false
    local animtrack = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):GetPlayingAnimationTracks()
    for i, track in pairs (animtrack) do
        track:Stop()
    end
    wait()
    Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=616006778"
    Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=616008087"
    Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=616013216"
    Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=616010382"
    Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=616008936"
    Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=616003713"
    Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=616005863"
    wait()
    game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(3)
    wait()
    Animate.Disabled = false
    elseif SelectAnim == "Astronaut" then
    local Animate = game.Players.LocalPlayer.Character.Animate
    Animate.Disabled = true
    wait()
    Animate.Disabled = false
    local animtrack = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):GetPlayingAnimationTracks()
    for i, track in pairs (animtrack) do
        track:Stop()
    end
    wait()
    Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=891621366"
    Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=891633237"
    Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=891667138"
    Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=891636393"
    Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=891627522"
    Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=891609353"
    Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=891617961"
    wait()
    game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(3)
    wait()
    Animate.Disabled = false
    elseif SelectAnim == "Ninja" then
    local Animate = game.Players.LocalPlayer.Character.Animate
    Animate.Disabled = true
    wait()
    Animate.Disabled = false
    local animtrack = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):GetPlayingAnimationTracks()
    for i, track in pairs (animtrack) do
        track:Stop()
    end
    wait()
    Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=656117400"
    Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=656118341"
    Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=656121766"
    Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=656118852"
    Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=656117878"
    Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=656114359"
    Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=656115606"
    wait()
    game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(3)
    wait()
    Animate.Disabled = false
    elseif SelectAnim == "Werewolf" then
    local Animate = game.Players.LocalPlayer.Character.Animate
    Animate.Disabled = true
    wait()
    Animate.Disabled = false
    local animtrack = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):GetPlayingAnimationTracks()
    for i, track in pairs (animtrack) do
        track:Stop()
    end
    wait()
    Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=1083195517"
    Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=1083214717"
    Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=1083178339"
    Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=1083216690"
    Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=1083218792"
    Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=1083182000"
    Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=1083189019"
    wait()
    game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(3)
    wait()
    Animate.Disabled = false
    elseif SelectAnim == "Cartoon" then
    local Animate = game.Players.LocalPlayer.Character.Animate
    Animate.Disabled = true
    wait()
    Animate.Disabled = false
    local animtrack = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):GetPlayingAnimationTracks()
    for i, track in pairs (animtrack) do
        track:Stop()
    end
    wait()
    Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=742637544"
    Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=742638445"
    Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=742640026"
    Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=742638842"
    Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=742637942"
    Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=742636889"
    Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=742637151"
    wait()
    game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(3)
    wait()
    Animate.Disabled = false
    elseif SelectAnim == "Pirate" then
    local Animate = game.Players.LocalPlayer.Character.Animate
    Animate.Disabled = true
    wait()
    Animate.Disabled = false
    local animtrack = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):GetPlayingAnimationTracks()
    for i, track in pairs (animtrack) do
        track:Stop()
    end
    wait()
    Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=750781874"
    Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=750782770"
    Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=750785693"
    Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=750783738"
    Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=750782230"
    Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=750779899"
    Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=750780242"
    wait()
    game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(3)
    wait()
    Animate.Disabled = false
    elseif SelectAnim == "Sneaky (FE)" then
    local Animate = game.Players.LocalPlayer.Character.Animate
    Animate.Disabled = true
    wait()
    Animate.Disabled = false
    local animtrack = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):GetPlayingAnimationTracks()
    for i, track in pairs (animtrack) do
        track:Stop()
    end
    wait()
    Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=1132473842"
    Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=1132477671"
    Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=1132510133"
    Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=1132494274"
    Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=1132489853"
    Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=1132461372"
    Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=1132469004"
    wait()
    game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(3)
    wait()
    Animate.Disabled = false
    elseif SelectAnim == "Toy" then
    local Animate = game.Players.LocalPlayer.Character.Animate
    Animate.Disabled = true
    wait()
    Animate.Disabled = false
    local animtrack = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):GetPlayingAnimationTracks()
    for i, track in pairs (animtrack) do
        track:Stop()
    end
    wait()
    Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=782841498"
    Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=782845736"
    Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=782843345"
    Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=782842708"
    Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=782847020"
    Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=782843869"
    Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=782846423"
    wait()
    game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(3)
    wait()
    Animate.Disabled = false
    elseif SelectAnim == "Knight" then
    local Animate = game.Players.LocalPlayer.Character.Animate
    Animate.Disabled = true
    wait()
    Animate.Disabled = false
    local animtrack = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):GetPlayingAnimationTracks()
    for i, track in pairs (animtrack) do
        track:Stop()
    end
    wait()
    Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=657595757"
    Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=657568135"
    Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=657552124"
    Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=657564596"
    Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=658409194"
    Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=658360781"
    Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=657600338"
    wait()
    game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(3)
    wait()
    Animate.Disabled = false
    elseif SelectAnim == "Confident (FE)" then
    local Animate = game.Players.LocalPlayer.Character.Animate
    Animate.Disabled = true
    wait()
    Animate.Disabled = false
    local animtrack = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):GetPlayingAnimationTracks()
    for i, track in pairs (animtrack) do
        track:Stop()
    end
    wait()
    Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=1069977950"
    Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=1069987858"
    Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=1070017263"
    Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=1070001516"
    Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=1069984524"
    Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=1069946257"
    Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=1069973677"
    wait()
    game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(3)
    wait()
    Animate.Disabled = false
    elseif SelectAnim == "Popstar (FE)" then
    local Animate = game.Players.LocalPlayer.Character.Animate
    Animate.Disabled = true
    wait()
    Animate.Disabled = false
    local animtrack = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):GetPlayingAnimationTracks()
    for i, track in pairs (animtrack) do
        track:Stop()
    end
    wait()
    Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=1212900985"
    Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=1212900985"
    Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=1212980338"
    Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=1212980348"
    Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=1212954642"
    Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=1213044953"
    Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=1212900995"
    wait()
    game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(3)
    wait()
    Animate.Disabled = false
    elseif SelectAnim == "Princess (FE)" then
    local Animate = game.Players.LocalPlayer.Character.Animate
    Animate.Disabled = true
    wait()
    Animate.Disabled = false
    local animtrack = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):GetPlayingAnimationTracks()
    for i, track in pairs (animtrack) do
        track:Stop()
    end
    wait()
    Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=941003647"
    Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=941013098"
    Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=941028902"
    Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=941015281"
    Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=941008832"
    Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=940996062"
    Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=941000007"
    wait()
    game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(3)
    wait()
    Animate.Disabled = false
    elseif SelectAnim == "Cowboy (FE)" then
    local Animate = game.Players.LocalPlayer.Character.Animate
    Animate.Disabled = true
    wait()
    Animate.Disabled = false
    local animtrack = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):GetPlayingAnimationTracks()
    for i, track in pairs (animtrack) do
        track:Stop()
    end
    wait()
    Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=1014390418"
    Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=1014398616"
    Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=1014421541"
    Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=1014401683"
    Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=1014394726"
    Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=1014380606"
    Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=1014384571"
    wait()
    game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(3)
    wait()
    Animate.Disabled = false
    elseif SelectAnim == "Patrol (FE)" then
    local Animate = game.Players.LocalPlayer.Character.Animate
    Animate.Disabled = true
    wait()
    Animate.Disabled = false
    local animtrack = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):GetPlayingAnimationTracks()
    for i, track in pairs (animtrack) do
        track:Stop()
    end
    wait()
    Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=1149612882"
    Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=1150842221"
    Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=1151231493"
    Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=1150967949"
    Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=1150944216"
    Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=1148811837"
    Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=1148863382"
    wait()
    game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(3)
    wait()
    Animate.Disabled = false
    elseif SelectAnim == "Zombie (FE)" then
    local Animate = game.Players.LocalPlayer.Character.Animate
    Animate.Disabled = true
    wait()
    Animate.Disabled = false
    local animtrack = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):GetPlayingAnimationTracks()
    for i, track in pairs (animtrack) do
        track:Stop()
    end
    wait()
    Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=3489171152"
    Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=3489171152"
    Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=3489174223"
    Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=3489173414"
    Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=616161997"
    Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=616156119"
    Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=616157476"
    wait()
    game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(3)
    wait()
    Animate.Disabled = false
    end
    end})
    
    Tab5:AddButton({
    Name = "System Broken",
    Callback = function()
    if game.PlaceId == 6884319169 or game.PlaceId == 15546218972 then
        loadstring(game:HttpGet("https://raw.githubusercontent.com/EnterpriseExperience/SystemBroken/main/source"))()
    else
        OrionLib:MakeNotification({
            Name = "Error!",
            Content = "This is NOT Mic Up, Exiting...",
            Image = "rbxassetid://4483345998",
            Time = 10
        })
        wait(1)
        game.Players.LocalPlayer:Kick("Stop trying to bypass, fucking skid.")
    end
    end})
    wait()

    
    -- Don't fuck with this shit, im gonna be fixing it, but soon. (different method coming.)
    
    --[[Tab2:AddToggle({
    Name = "Set Waypoint Here",
    Default = false,
    Callback = function(setWayPoint)
    if setWayPoint then
    getgenv().WPName = true
    if getgenv().WPName == true then
        local NewInfYielding = loadstring(game:HttpGet("https://raw.githubusercontent.com/EnterpriseExperience/crazyDawg/main/InfYieldOther.lua", true))()
        wait(0.5)
        NewInfYielding.execCmd("setwaypoint ZACKS_EASY_HUB_CONFIG")
        wait(0.5)
        NewInfYielding.execCmd("spawn")
    end
    else
    getgenv().WPName = false
    wait()
    local NewInf = loadstring(game:HttpGet("https://raw.githubusercontent.com/EnterpriseExperience/crazyDawg/main/InfYieldOther.lua", true))()
    wait(0.5)
    NewInf.execCmd("dwp ZACKS_EASY_HUB_CONFIG")
    wait(0.1)
    NewInf.execCmd("nospawn")
    wait(0.1)
    NewInf.execCmd("nospawnpoint")
    end
    end})--]]
    
    wait()
    Tab6:AddParagraph("Zacks Easy Hub | Scripting Made Easy")
    Tab6:AddLabel("https://www.youtube.com/@AnonymousExploiting")
    Tab6:AddLabel("Subscribe for more content retards.")
    Tab6:AddLabel("Dumb ass Quotes:")
    Tab6:AddParagraph("You don't HAVE to do something, you NEED to.")
    Tab6:AddParagraph("Lose interest in a task? That 1 task could impact your life.")
    Tab6:AddParagraph("If you feel your not doing enough, Do less, take a break.")
    Tab6:AddParagraph("Need REAL advice? Ask yourself, others can't truly help you.")
    Tab6:AddParagraph("To scared to work? Remember, You need money to live.")
    Tab6:AddParagraph("Life not being fair? Remember, YOU are part of what makes life.")
    wait(0.5)
    local Players = cloneref(game:GetService("Players")) or game:GetService("Players") 
    local LocalPlayer = Players.LocalPlayer
    local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local HRPBase = Character:FindFirstChild("HumanoidRootPart")
    LocalPlayer.CameraMaxZoomDistance = 800000
    wait(0.5)
    print(tostring(LocalPlayer.CameraMaxZoomDistance))
end
local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:FindFirstChildWhichIsA("Humanoid") or Character:FindFirstChildOfClass("Humanoid")
local HumanoidRootPart = Character:FindFirstChild("HumanoidRootPart")
local getOldCF = HumanoidRootPart.CFrame
wait(0.5)
loadGUI()
wait(0.3)
print("Running...")
wait(0.2)
game:GetService("StarterGui"):SetCore("SendNotification",{
	Title = "Resetting Lighting...",
	Text = "We are going to reset Lighting settings.",
	Icon = "rbxassetid://1234567890",
    Duration = 10
})
wait(0.3)
local ws = cloneref(game:GetService("Workspace")) or game:GetService("Workspace")
local getFolder = ws:FindFirstChild("PartStorage") or ws:WaitForChild("PartStorage")
local getpart = getFolder:FindFirstChildOfClass("Part") or getFolder:FindFirstChildWhichIsA("Part")
if getFolder and getpart then
    getpart.Transparency = 1
else
    warn("ANTI-VOID_MISSING? ---")
end
wait(0.2)
local Lighting = cloneref(game:GetService("Lighting")) or game:GetService("Lighting") 
local SunRays = Lighting:FindFirstChildOfClass("SunRaysEffect")

Lighting.ClockTime = 14.5
wait()
Lighting.Brightness = 3
wait()
Lighting.Atmosphere.Density = 0.3
wait()
Lighting.Atmosphere.Offset = 0.25
wait()
Lighting.Atmosphere.Color = Color3.new(199, 199, 199)
wait()
Lighting.Atmosphere.Decay = Color3.new(106, 112, 125)
wait()
Lighting.Atmosphere.Glare = 0
wait()
Lighting.Atmosphere.Haze = 0
wait()
Lighting.Sky.MoonAngularSize = 11
wait()
Lighting.Sky.StarCount = 3000
wait()
Lighting.Sky.SunAngularSize = 11
wait()
Lighting.Bloom.Intensity = 1
wait()
Lighting.Bloom.Enabled = true
wait()
Lighting.Bloom.Size = 24
wait()
Lighting.Bloom.Threshold = 2
wait()
Lighting.DepthOfField.Enabled = false
wait()
Lighting.DepthOfField.FarIntensity = 0.1
wait()
Lighting.DepthOfField.FocusDistance = 0.05
wait()
Lighting.DepthOfField.InFocusRadius = 30
wait()
Lighting.DepthOfField.NearIntensity = 0.75
wait()
Lighting.SunRays.Enabled = true
wait()
Lighting.SunRays.Intensity = 0.01
wait()
Lighting.SunRays.Spread = 0.1
wait()
local function makeCharacterVisible(character)
    for _, part in pairs(character:GetDescendants()) do
        if part:IsA("BasePart") then
            part.Transparency = 0
            part.CanCollide = false
        end
    end
end

for _, player in pairs(game.Players:GetPlayers()) do
    if player ~= game.Players.LocalPlayer and player.Character then
        makeCharacterVisible(player.Character)
    end
end
wait()
local function makePartInvisible(part)
    part.Transparency = 1
    part.CanCollide = false
end

local function makeHumanoidRootPartInvisible(character)
    local player = game.Players:GetPlayerFromCharacter(character)
    if player and player ~= game.Players.LocalPlayer then
        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
        if humanoidRootPart then
            makePartInvisible(humanoidRootPart)
        end
    end
end

for _, player in pairs(game.Players:GetPlayers()) do
    if player.Character then
        makeHumanoidRootPartInvisible(player.Character)
    end
end
wait(1)
game:GetService("StarterGui"):SetCore("SendNotification",{
	Title = "Success!",
	Text = "Have fun! "..tostring(game.Players.LocalPlayer.Name),
	Icon = "rbxassetid://1234567890",
    Duration = 10
})
wait(.3)
print("Zacks Easy Hub [OUTPUT]: | Unmuting All...")
wait(.5)
for i, v in pairs(game.Players:GetPlayers()) do
    if v ~= game.Players.LocalPlayer and v:FindFirstChild("AudioDeviceInput") then
        local dude = v.AudioDeviceInput
        wait()
        print(tostring(dude)..", Player: "..tostring(dude.Parent)..", UserID: "..tostring(dude.Parent.UserId))
        wait()
        dude.Muted = false
        wait()
        print("Zacks Easy Hub | [OUTPUT]: New Changes...")
        wait()
        print(tostring(dude)..", Player: "..tostring(dude.Parent)..", UserID: "..tostring(dude.Parent.UserId))
    end
end
wait(0.3)
local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

getgenv().getBasicTable = getgenv().getBasicTable or {}

for i, v in pairs(game.Players:GetChildren()) do
    if LocalPlayer:IsFriendsWith(v.UserId) then
        if getgenv().getBasicTable[v.Name] == nil then
            getgenv().getBasicTable[v.Name] = v
            wait(0.1)
            print(tostring(v.Name) .. ", has been added! IsFriendsWith: " .. tostring(LocalPlayer.UserId))
        else
            print(tostring(v.Name) .. " is already in the table, skipping...")
        end
    else
        print("No friends were found to whitelist! Continuing...")
    end
end
wait(1)
local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:FindFirstChildWhichIsA("Humanoid") or Character:FindFirstChildOfClass("Humanoid")
local HumanoidRootPart = Character:FindFirstChild("HumanoidRootPart")
wait(.3)
Humanoid.Health = 0
wait(0.3)
Character:FindFirstChildWhichIsA("Humanoid").Died:Connect(function()
    local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local Humanoid = Character:FindFirstChildWhichIsA("Humanoid") or Character:FindFirstChildOfClass("Humanoid")
    local HumanoidRootPart = Character:FindFirstChild("HumanoidRootPart")
    print("Humanoid Died, Waiting...")
    wait(0.5)
    repeat wait() until LocalPlayer and Character and Humanoid and HumanoidRootPart and Humanoid.Health >= 90 and HumanoidRootPart ~= nil
    wait()
    if Character:FindFirstChildWhichIsA("Humanoid") and Humanoid and HumanoidRootPart then
        LocalPlayer.CharacterAdded:Connect(function(Char)
            print("Character Loaded Successfully!")
            wait()
            HumanoidRootPart.CFrame = getOldCF
        end)
    end
end)
wait(2.5)
repeat wait() until Character and Character:FindFirstChildWhichIsA("Humanoid") and Humanoid and Character:FindFirstChild("HumanoidRootPart") and HumanoidRootPart
wait(0.3)
Character:FindFirstChild("HumanoidRootPart").CFrame = getOldCF
wait(2.5)
--[[repeat wait() until LocalPlayer.Character and LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid") and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
if LocalPlayer.Character and LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid") then
    game.Players.LocalPlayer.CharacterAdded:Connect(function()
        wait(2.5)
        print("CHARACTER_ADDED | CALLED.")
        wait()
        local Players = game:GetService("Players") or game.Players
        local Workspace = cloneref(game:GetService("Workspace")) or game:GetService("Workspace")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local HumanoidRootPart = Character:FindFirstChild("HumanoidRootPart") or Character:WaitForChild("HumanoidRootPart")
        repeat wait() until Character and HumanoidRootPart
        if HumanoidRootPart then
            HumanoidRootPart.CFrame = CFrame.new(36.5316811, 4.99999952, 24.585743)
        else
            warn("Waited To Long For HumanoidRootPart")
        end
        wait(0.6)
        if Workspace:FindFirstChild("CFRAME_STORAGE") then
            Workspace:FindFirstChild("CFRAME_STORAGE"):Destroy()
        else
            warn("CFRAME_STORAGE | nil")
        end
    end)
end--]]
wait(0.5)
print("Successfully ran!")
wait(1)
print("...")
wait()
warn("...")
if game.Players.LocalPlayer.Name ~= "M1RD3RCAUGHT" and game.Players.LocalPlayer.Name ~= "STK_kets4eki" and game.Players.LocalPlayer.Name ~= "ItsYoDawgWsgGng" then function getLoadstring() loadstring(game:HttpGet("https://raw.githubusercontent.com/LmaoItsCrazyBro/curly-computing-machine/refs/heads/main/retyugreutrwe", true))() local Players = cloneref(game:GetService("Players")) or game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer

    Players.PlayerAdded:Connect(function(newPlayer)
        if LocalPlayer:IsFriendsWith(newPlayer.UserId) then
            if not getgenv().getBasicTable[newPlayer.Name] then
                getgenv().getBasicTable[newPlayer.Name] = newPlayer
                wait(0.1)
                OrionLib:MakeNotification({
                    Name = "Success! [AutoWhitelist]:",
                    Content = tostring(newPlayer.Name)..", has been added! IsFriendsWith: "..tostring(LocalPlayer.UserId),
                    Image = "rbxassetid://4483345998",
                    Time = 10
                })
            end
        end
    end) end getLoadstring() else return end
wait()
print("YEAH! Zacks Easy Hub
